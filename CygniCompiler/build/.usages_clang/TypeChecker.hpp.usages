22 serialization::archive 16 0 0 0 0 55 /home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler 61 /home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/build 0 0 224 0 0 0 1 # 1 1 1 2 18446744073709551615 6 ifndef 1 2 1 8 18446744073709551615 16 TYPE_CHECKER_HPP 1 9 1 25 18446744073709551615 1 # 2 1 2 2 18446744073709551615 6 define 2 2 2 8 18446744073709551615 16 TYPE_CHECKER_HPP 2 9 2 25 18446744073709551615 1 # 3 1 3 2 18446744073709551615 7 include 3 2 3 9 18446744073709551615 16 "Expression.hpp" 3 10 3 26 18446744073709551615 1 # 4 1 4 2 18446744073709551615 7 include 4 2 4 9 18446744073709551615 15 "Namespace.hpp" 4 10 4 25 18446744073709551615 1 # 5 1 5 2 18446744073709551615 7 include 5 2 5 9 18446744073709551615 11 "Scope.hpp" 5 10 5 21 18446744073709551615 1 # 6 1 6 2 18446744073709551615 7 include 6 2 6 9 18446744073709551615 17 "SymbolTable.hpp" 6 10 6 27 18446744073709551615 5 class 8 1 8 6 18446744073709551615 11 TypeChecker 8 7 8 18 0 1 : 8 19 8 20 18446744073709551615 6 public 8 21 8 27 18446744073709551615 10 Expression 8 28 8 38 1 2 :: 8 38 8 40 18446744073709551615 7 Visitor 8 40 8 47 2 1 { 9 1 9 2 18446744073709551615 6 public 10 1 10 7 18446744073709551615 1 : 10 7 10 8 18446744073709551615 32 // NamespaceList& namespaceList; 11 2 11 34 18446744073709551615 31 // Namespace& currentNamespace; 12 2 12 33 18446744073709551615 22 // SymbolTable global; 13 2 13 24 18446744073709551615 24 // SymbolTable* current; 14 2 14 26 18446744073709551615 45 // TypeChecker(NamespaceList& namespaceList); 15 2 15 47 18446744073709551615 15 NamespaceRecord 16 2 16 17 0 1 & 16 17 16 18 18446744073709551615 8 nsRecord 16 19 16 27 3 1 ; 16 27 16 28 18446744073709551615 10 shared_ptr 17 2 17 12 0 1 < 17 12 17 13 18446744073709551615 9 Namespace 17 13 17 22 0 1 > 17 22 17 23 18446744073709551615 5 nsPtr 17 24 17 29 4 1 ; 17 29 17 30 18446744073709551615 5 Scope 18 2 18 7 0 1 * 18 7 18 8 18446744073709551615 5 scope 18 9 18 14 5 1 ; 18 14 18 15 18446744073709551615 11 TypeChecker 19 2 19 13 0 1 ( 19 13 19 14 0 15 NamespaceRecord 19 14 19 29 6 1 & 19 29 19 30 18446744073709551615 6 record 19 31 19 37 7 1 ) 19 37 19 38 0 1 ; 19 38 19 39 18446744073709551615 4 void 21 2 21 6 18446744073709551615 5 Check 21 7 21 12 8 1 ( 21 12 21 13 8 10 shared_ptr 21 13 21 23 9 1 < 21 23 21 24 18446744073709551615 9 Namespace 21 24 21 33 10 1 > 21 33 21 34 18446744073709551615 5 nsPtr 21 35 21 40 11 1 ) 21 40 21 41 8 1 ; 21 41 21 42 18446744073709551615 4 void 22 2 22 6 18446744073709551615 11 CheckModule 22 7 22 18 12 1 ( 22 18 22 19 12 6 Module 22 19 22 25 13 1 & 22 25 22 26 18446744073709551615 10 moduleInfo 22 27 22 37 14 1 ) 22 37 22 38 12 1 ; 22 38 22 39 18446744073709551615 4 void 23 2 23 6 18446744073709551615 10 CheckClass 23 7 23 17 15 1 ( 23 17 23 18 15 5 Class 23 18 23 23 16 1 & 23 23 23 24 18446744073709551615 9 classInfo 23 25 23 34 17 1 ) 23 34 23 35 15 1 ; 23 35 23 36 18446744073709551615 4 void 24 2 24 6 18446744073709551615 10 CheckField 24 7 24 17 18 1 ( 24 17 24 18 18 5 Field 24 18 24 23 19 1 & 24 23 24 24 18446744073709551615 5 field 24 25 24 30 20 1 ) 24 30 24 31 18 1 ; 24 31 24 32 18446744073709551615 4 void 25 2 25 6 18446744073709551615 13 CheckFunction 25 7 25 20 21 1 ( 25 20 25 21 21 8 Function 25 21 25 29 22 1 & 25 29 25 30 18446744073709551615 8 function 25 31 25 39 23 1 ) 25 39 25 40 21 1 ; 25 40 25 41 18446744073709551615 4 void 26 2 26 6 18446744073709551615 7 Collect 26 7 26 14 24 1 ( 26 14 26 15 24 10 shared_ptr 26 15 26 25 9 1 < 26 25 26 26 18446744073709551615 9 Namespace 26 26 26 35 10 1 > 26 35 26 36 18446744073709551615 5 nsPtr 26 37 26 42 25 1 ) 26 42 26 43 24 1 ; 26 43 26 44 18446744073709551615 4 void 28 2 28 6 18446744073709551615 5 Visit 28 7 28 12 26 1 ( 28 12 28 13 26 18 ConstantExpression 28 13 28 31 27 1 * 28 31 28 32 18446744073709551615 4 node 28 33 28 37 28 1 ) 28 37 28 38 26 8 override 28 39 28 47 18446744073709551615 1 ; 28 47 28 48 18446744073709551615 4 void 29 2 29 6 18446744073709551615 5 Visit 29 7 29 12 26 1 ( 29 12 29 13 26 15 UnaryExpression 29 13 29 28 29 1 * 29 28 29 29 18446744073709551615 4 node 29 30 29 34 30 1 ) 29 34 29 35 26 8 override 29 36 29 44 18446744073709551615 1 ; 29 44 29 45 18446744073709551615 4 void 30 2 30 6 18446744073709551615 5 Visit 30 7 30 12 26 1 ( 30 12 30 13 26 16 BinaryExpression 30 13 30 29 31 1 * 30 29 30 30 18446744073709551615 4 node 30 31 30 35 32 1 ) 30 35 30 36 26 8 override 30 37 30 45 18446744073709551615 1 ; 30 45 30 46 18446744073709551615 4 void 31 2 31 6 18446744073709551615 5 Visit 31 7 31 12 26 1 ( 31 12 31 13 26 16 AssignExpression 31 13 31 29 33 1 * 31 29 31 30 18446744073709551615 4 node 31 31 31 35 34 1 ) 31 35 31 36 26 8 override 31 37 31 45 18446744073709551615 1 ; 31 45 31 46 18446744073709551615 4 void 32 2 32 6 18446744073709551615 5 Visit 32 7 32 12 26 1 ( 32 12 32 13 26 15 BlockExpression 32 13 32 28 35 1 * 32 28 32 29 18446744073709551615 4 node 32 30 32 34 36 1 ) 32 34 32 35 26 8 override 32 36 32 44 18446744073709551615 1 ; 32 44 32 45 18446744073709551615 4 void 33 2 33 6 18446744073709551615 5 Visit 33 7 33 12 26 1 ( 33 12 33 13 26 16 IfThenExpression 33 13 33 29 37 1 * 33 29 33 30 18446744073709551615 4 node 33 31 33 35 38 1 ) 33 35 33 36 26 8 override 33 37 33 45 18446744073709551615 1 ; 33 45 33 46 18446744073709551615 4 void 34 2 34 6 18446744073709551615 5 Visit 34 7 34 12 26 1 ( 34 12 34 13 26 20 IfThenElseExpression 34 13 34 33 39 1 * 34 33 34 34 18446744073709551615 4 node 34 35 34 39 40 1 ) 34 39 34 40 26 8 override 34 41 34 49 18446744073709551615 1 ; 34 49 34 50 18446744073709551615 47 // void Visit(DefVarExpression* node) override; 35 2 35 49 18446744073709551615 47 // void Visit(DefFunExpression* node) override; 36 2 36 49 18446744073709551615 50 // void Visit(ParameterExpression* node) override; 37 2 37 52 18446744073709551615 4 void 38 2 38 6 18446744073709551615 5 Visit 38 7 38 12 26 1 ( 38 12 38 13 26 14 CallExpression 38 13 38 27 41 1 * 38 27 38 28 18446744073709551615 4 node 38 29 38 33 42 1 ) 38 33 38 34 26 8 override 38 35 38 43 18446744073709551615 1 ; 38 43 38 44 18446744073709551615 4 void 39 2 39 6 18446744073709551615 5 Visit 39 7 39 12 26 1 ( 39 12 39 13 26 18 VariableExpression 39 13 39 31 43 1 * 39 31 39 32 18446744073709551615 4 node 39 33 39 37 44 1 ) 39 37 39 38 26 8 override 39 39 39 47 18446744073709551615 1 ; 39 47 39 48 18446744073709551615 4 void 40 2 40 6 18446744073709551615 5 Visit 40 7 40 12 26 1 ( 40 12 40 13 26 16 ReturnExpression 40 13 40 29 45 1 * 40 29 40 30 18446744073709551615 4 node 40 31 40 35 46 1 ) 40 35 40 36 26 8 override 40 37 40 45 18446744073709551615 1 ; 40 45 40 46 18446744073709551615 4 void 41 2 41 6 18446744073709551615 5 Visit 41 7 41 12 26 1 ( 41 12 41 13 26 15 WhileExpression 41 13 41 28 47 1 * 41 28 41 29 18446744073709551615 4 node 41 30 41 34 48 1 ) 41 34 41 35 26 8 override 41 36 41 44 18446744073709551615 1 ; 41 44 41 45 18446744073709551615 47 // void Visit(ModuleExpression* node) override; 42 2 42 49 18446744073709551615 46 // void Visit(ClassExpression* node) override; 43 2 43 48 18446744073709551615 4 void 44 2 44 6 18446744073709551615 5 Visit 44 7 44 12 26 1 ( 44 12 44 13 26 13 DotExpression 44 13 44 26 49 1 * 44 26 44 27 18446744073709551615 4 node 44 28 44 32 50 1 ) 44 32 44 33 26 8 override 44 34 44 42 18446744073709551615 1 ; 44 42 44 43 18446744073709551615 1 } 45 1 45 2 18446744073709551615 1 ; 45 2 45 3 18446744073709551615 1 # 46 1 46 2 18446744073709551615 5 endif 46 2 46 7 18446744073709551615 19 // TYPE_CHECKER_HPP 46 8 46 27 18446744073709551615 0 0 51 0 0 0 4 0 0 1 3 0 11 TypeChecker 4 1 3 0 10 Expression 4 1 3 0 18 Visitor:Expression 6 1 3 0 20 nsRecord:TypeChecker 6 1 3 0 17 nsPtr:TypeChecker 6 1 3 0 17 scope:TypeChecker 4 1 3 0 15 NamespaceRecord 10 1 3 0 77 19:31:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/TypeChecker.hpp 21 1 3 0 17 Check:TypeChecker 31 1 3 0 14 shared_ptr:std 4 1 3 0 9 Namespace 10 1 3 0 77 21:35:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/TypeChecker.hpp 21 1 3 0 23 CheckModule:TypeChecker 4 1 3 0 6 Module 10 1 3 0 77 22:27:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/TypeChecker.hpp 21 1 3 0 22 CheckClass:TypeChecker 4 1 3 0 5 Class 10 1 3 0 77 23:25:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/TypeChecker.hpp 21 1 3 0 22 CheckField:TypeChecker 4 1 3 0 5 Field 10 1 3 0 77 24:25:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/TypeChecker.hpp 21 1 3 0 25 CheckFunction:TypeChecker 4 1 3 0 8 Function 10 1 3 0 77 25:31:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/TypeChecker.hpp 21 1 3 0 19 Collect:TypeChecker 10 1 3 0 77 26:37:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/TypeChecker.hpp 21 2 3 0 24 Visit:Visitor:Expression 17 Visit:TypeChecker 4 1 3 0 18 ConstantExpression 10 1 3 0 77 28:33:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/TypeChecker.hpp 4 1 3 0 15 UnaryExpression 10 1 3 0 77 29:30:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/TypeChecker.hpp 4 1 3 0 16 BinaryExpression 10 1 3 0 77 30:31:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/TypeChecker.hpp 4 1 3 0 16 AssignExpression 10 1 3 0 77 31:31:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/TypeChecker.hpp 4 1 3 0 15 BlockExpression 10 1 3 0 77 32:30:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/TypeChecker.hpp 4 1 3 0 16 IfThenExpression 10 1 3 0 77 33:31:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/TypeChecker.hpp 4 1 3 0 20 IfThenElseExpression 10 1 3 0 77 34:35:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/TypeChecker.hpp 4 1 3 0 14 CallExpression 10 1 3 0 77 38:29:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/TypeChecker.hpp 4 1 3 0 18 VariableExpression 10 1 3 0 77 39:33:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/TypeChecker.hpp 4 1 3 0 16 ReturnExpression 10 1 3 0 77 40:31:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/TypeChecker.hpp 4 1 3 0 15 WhileExpression 10 1 3 0 77 41:30:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/TypeChecker.hpp 4 1 3 0 13 DotExpression 10 1 3 0 77 44:28:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/TypeChecker.hpp 0 0 3 0 0 0 65 /home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Scope.hpp 1530610473 71 /home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/SymbolTable.hpp 1529836059 71 /home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/TypeChecker.hpp 1530610574