22 serialization::archive 16 0 0 0 0 55 /home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler 61 /home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/build 0 0 1431 0 0 0 1 # 1 1 1 2 18446744073709551615 6 ifndef 1 2 1 8 18446744073709551615 14 EXPRESSION_HPP 1 9 1 23 18446744073709551615 1 # 2 1 2 2 18446744073709551615 6 define 2 2 2 8 18446744073709551615 14 EXPRESSION_HPP 2 9 2 23 18446744073709551615 1 # 3 1 3 2 18446744073709551615 7 include 3 2 3 9 18446744073709551615 10 "Type.hpp" 3 10 3 20 18446744073709551615 1 # 4 1 4 2 18446744073709551615 7 include 4 2 4 9 18446744073709551615 1 < 4 10 4 11 18446744073709551615 3 any 4 11 4 14 18446744073709551615 1 > 4 14 4 15 18446744073709551615 1 # 5 1 5 2 18446744073709551615 7 include 5 2 5 9 18446744073709551615 1 < 5 10 5 11 18446744073709551615 6 memory 5 11 5 17 18446744073709551615 1 > 5 17 5 18 18446744073709551615 1 # 6 1 6 2 18446744073709551615 7 include 6 2 6 9 18446744073709551615 1 < 6 10 6 11 18446744073709551615 6 string 6 11 6 17 18446744073709551615 1 > 6 17 6 18 18446744073709551615 1 # 7 1 7 2 18446744073709551615 7 include 7 2 7 9 18446744073709551615 1 < 7 10 7 11 18446744073709551615 6 vector 7 11 7 17 18446744073709551615 1 > 7 17 7 18 18446744073709551615 5 using 8 1 8 6 18446744073709551615 3 std 8 7 8 10 0 2 :: 8 10 8 12 18446744073709551615 3 any 8 12 8 15 1 1 ; 8 15 8 16 18446744073709551615 5 using 9 1 9 6 18446744073709551615 3 std 9 7 9 10 0 2 :: 9 10 9 12 18446744073709551615 10 shared_ptr 9 12 9 22 2 1 ; 9 22 9 23 18446744073709551615 5 using 10 1 10 6 18446744073709551615 3 std 10 7 10 10 0 2 :: 10 10 10 12 18446744073709551615 6 vector 10 12 10 18 3 1 ; 10 18 10 19 18446744073709551615 5 using 11 1 11 6 18446744073709551615 3 std 11 7 11 10 0 2 :: 11 10 11 12 18446744073709551615 7 wstring 11 12 11 19 4 1 ; 11 19 11 20 18446744073709551615 5 class 13 1 13 6 18446744073709551615 10 Expression 13 7 13 17 5 1 ; 13 17 13 18 18446744073709551615 5 class 14 1 14 6 18446744073709551615 18 ConstantExpression 14 7 14 25 6 1 ; 14 25 14 26 18446744073709551615 5 class 15 1 15 6 18446744073709551615 15 UnaryExpression 15 7 15 22 7 1 ; 15 22 15 23 18446744073709551615 5 class 16 1 16 6 18446744073709551615 16 BinaryExpression 16 7 16 23 8 1 ; 16 23 16 24 18446744073709551615 5 class 17 1 17 6 18446744073709551615 16 AssignExpression 17 7 17 23 9 1 ; 17 23 17 24 18446744073709551615 5 class 18 1 18 6 18446744073709551615 15 BlockExpression 18 7 18 22 10 1 ; 18 22 18 23 18446744073709551615 5 class 19 1 19 6 18446744073709551615 16 IfThenExpression 19 7 19 23 11 1 ; 19 23 19 24 18446744073709551615 5 class 20 1 20 6 18446744073709551615 20 IfThenElseExpression 20 7 20 27 12 1 ; 20 27 20 28 18446744073709551615 26 // class DefVarExpression; 21 1 21 27 18446744073709551615 26 // class DefFunExpression; 22 1 22 27 18446744073709551615 29 // class ParameterExpression; 23 1 23 30 18446744073709551615 5 class 24 1 24 6 18446744073709551615 14 CallExpression 24 7 24 21 13 1 ; 24 21 24 22 18446744073709551615 5 class 25 1 25 6 18446744073709551615 18 VariableExpression 25 7 25 25 14 1 ; 25 25 25 26 18446744073709551615 5 class 26 1 26 6 18446744073709551615 16 ReturnExpression 26 7 26 23 15 1 ; 26 23 26 24 18446744073709551615 5 class 27 1 27 6 18446744073709551615 15 WhileExpression 27 7 27 22 16 1 ; 27 22 27 23 18446744073709551615 26 // class ModuleExpression; 28 1 28 27 18446744073709551615 25 // class ClassExpression; 29 1 29 26 18446744073709551615 5 class 30 1 30 6 18446744073709551615 13 DotExpression 30 7 30 20 17 1 ; 30 20 30 21 18446744073709551615 5 using 32 1 32 6 18446744073709551615 6 ExpPtr 32 7 32 13 18 1 = 32 14 32 15 18446744073709551615 10 shared_ptr 32 16 32 26 19 1 < 32 26 32 27 18446744073709551615 10 Expression 32 27 32 37 5 1 > 32 37 32 38 18446744073709551615 1 ; 32 38 32 39 18446744073709551615 5 using 33 1 33 6 18446744073709551615 14 ConstantExpPtr 33 7 33 21 20 1 = 33 22 33 23 18446744073709551615 10 shared_ptr 33 24 33 34 19 1 < 33 34 33 35 18446744073709551615 18 ConstantExpression 33 35 33 53 6 1 > 33 53 33 54 18446744073709551615 1 ; 33 54 33 55 18446744073709551615 5 using 34 1 34 6 18446744073709551615 11 UnaryExpPtr 34 7 34 18 21 1 = 34 19 34 20 18446744073709551615 10 shared_ptr 34 21 34 31 19 1 < 34 31 34 32 18446744073709551615 15 UnaryExpression 34 32 34 47 7 1 > 34 47 34 48 18446744073709551615 1 ; 34 48 34 49 18446744073709551615 5 using 35 1 35 6 18446744073709551615 12 BinaryExpPtr 35 7 35 19 22 1 = 35 20 35 21 18446744073709551615 10 shared_ptr 35 22 35 32 19 1 < 35 32 35 33 18446744073709551615 16 BinaryExpression 35 33 35 49 8 1 > 35 49 35 50 18446744073709551615 1 ; 35 50 35 51 18446744073709551615 5 using 36 1 36 6 18446744073709551615 12 AssignExpPtr 36 7 36 19 23 1 = 36 20 36 21 18446744073709551615 10 shared_ptr 36 22 36 32 19 1 < 36 32 36 33 18446744073709551615 16 AssignExpression 36 33 36 49 9 1 > 36 49 36 50 18446744073709551615 1 ; 36 50 36 51 18446744073709551615 5 using 37 1 37 6 18446744073709551615 11 BlockExpPtr 37 7 37 18 24 1 = 37 19 37 20 18446744073709551615 10 shared_ptr 37 21 37 31 19 1 < 37 31 37 32 18446744073709551615 15 BlockExpression 37 32 37 47 10 1 > 37 47 37 48 18446744073709551615 1 ; 37 48 37 49 18446744073709551615 5 using 38 1 38 6 18446744073709551615 12 IfThenExpPtr 38 7 38 19 25 1 = 38 20 38 21 18446744073709551615 10 shared_ptr 38 22 38 32 19 1 < 38 32 38 33 18446744073709551615 16 IfThenExpression 38 33 38 49 11 1 > 38 49 38 50 18446744073709551615 1 ; 38 50 38 51 18446744073709551615 5 using 39 1 39 6 18446744073709551615 16 IfThenElseExpPtr 39 7 39 23 26 1 = 39 24 39 25 18446744073709551615 10 shared_ptr 39 26 39 36 19 1 < 39 36 39 37 18446744073709551615 20 IfThenElseExpression 39 37 39 57 12 1 > 39 57 39 58 18446744073709551615 1 ; 39 58 39 59 18446744073709551615 53 // using DefVarExpPtr = shared_ptr<DefVarExpression>; 40 1 40 54 18446744073709551615 53 // using DefFunExpPtr = shared_ptr<DefFunExpression>; 41 1 41 54 18446744073709551615 59 // using ParameterExpPtr = shared_ptr<ParameterExpression>; 42 1 42 60 18446744073709551615 5 using 43 1 43 6 18446744073709551615 10 CallExpPtr 43 7 43 17 27 1 = 43 18 43 19 18446744073709551615 10 shared_ptr 43 20 43 30 19 1 < 43 30 43 31 18446744073709551615 14 CallExpression 43 31 43 45 13 1 > 43 45 43 46 18446744073709551615 1 ; 43 46 43 47 18446744073709551615 5 using 44 1 44 6 18446744073709551615 14 VariableExpPtr 44 7 44 21 28 1 = 44 22 44 23 18446744073709551615 10 shared_ptr 44 24 44 34 19 1 < 44 34 44 35 18446744073709551615 18 VariableExpression 44 35 44 53 14 1 > 44 53 44 54 18446744073709551615 1 ; 44 54 44 55 18446744073709551615 5 using 45 1 45 6 18446744073709551615 12 ReturnExpPtr 45 7 45 19 29 1 = 45 20 45 21 18446744073709551615 10 shared_ptr 45 22 45 32 19 1 < 45 32 45 33 18446744073709551615 16 ReturnExpression 45 33 45 49 15 1 > 45 49 45 50 18446744073709551615 1 ; 45 50 45 51 18446744073709551615 5 using 46 1 46 6 18446744073709551615 11 WhileExpPtr 46 7 46 18 30 1 = 46 19 46 20 18446744073709551615 10 shared_ptr 46 21 46 31 19 1 < 46 31 46 32 18446744073709551615 15 WhileExpression 46 32 46 47 16 1 > 46 47 46 48 18446744073709551615 1 ; 46 48 46 49 18446744073709551615 53 // using ModuleExpPtr = shared_ptr<ModuleExpression>; 47 1 47 54 18446744073709551615 51 // using ClassExpPtr = shared_ptr<ClassExpression>; 48 1 48 52 18446744073709551615 5 using 49 1 49 6 18446744073709551615 9 DotExpPtr 49 7 49 16 31 1 = 49 17 49 18 18446744073709551615 10 shared_ptr 49 19 49 29 19 1 < 49 29 49 30 18446744073709551615 13 DotExpression 49 30 49 43 17 1 > 49 43 49 44 18446744073709551615 1 ; 49 44 49 45 18446744073709551615 4 enum 51 1 51 5 18446744073709551615 5 class 51 6 51 11 18446744073709551615 14 ExpressionKind 51 12 51 26 32 1 { 52 1 52 2 18446744073709551615 3 Add 53 2 53 5 33 1 , 53 5 53 6 18446744073709551615 8 Subtract 54 2 54 10 34 1 , 54 10 54 11 18446744073709551615 8 Multiply 55 2 55 10 35 1 , 55 10 55 11 18446744073709551615 6 Divide 56 2 56 8 36 1 , 56 8 56 9 18446744073709551615 6 Modulo 57 2 57 8 37 1 , 57 8 57 9 18446744073709551615 11 GreaterThan 59 2 59 13 38 1 , 59 13 59 14 18446744073709551615 8 LessThan 60 2 60 10 39 1 , 60 10 60 11 18446744073709551615 18 GreaterThanOrEqual 61 2 61 20 40 1 , 61 20 61 21 18446744073709551615 15 LessThanOrEqual 62 2 62 17 41 1 , 62 17 62 18 18446744073709551615 5 Equal 63 2 63 7 42 1 , 63 7 63 8 18446744073709551615 8 NotEqual 64 2 64 10 43 1 , 64 10 64 11 18446744073709551615 8 Constant 65 2 65 10 44 1 , 65 10 65 11 18446744073709551615 9 UnaryPlus 66 2 66 11 45 1 , 66 11 66 12 18446744073709551615 10 UnaryMinus 67 2 67 12 46 1 , 67 12 67 13 18446744073709551615 3 And 69 2 69 5 47 1 , 69 5 69 6 18446744073709551615 2 Or 70 2 70 4 48 1 , 70 4 70 5 18446744073709551615 3 Not 71 2 71 5 49 1 , 71 5 71 6 18446744073709551615 6 DefVar 73 2 73 8 50 1 , 73 8 73 9 18446744073709551615 6 DefFun 74 2 74 8 51 1 , 74 8 74 9 18446744073709551615 6 IfThen 75 2 75 8 52 1 , 75 8 75 9 18446744073709551615 10 IfThenElse 76 2 76 12 53 1 , 76 12 76 13 18446744073709551615 9 Parameter 77 2 77 11 54 1 , 77 11 77 12 18446744073709551615 8 Variable 78 2 78 10 55 1 , 78 10 78 11 18446744073709551615 4 Call 79 2 79 6 56 1 , 79 6 79 7 18446744073709551615 5 Block 80 2 80 7 57 1 , 80 7 80 8 18446744073709551615 6 Assign 81 2 81 8 58 1 , 81 8 81 9 18446744073709551615 6 Return 83 2 83 8 59 1 , 83 8 83 9 18446744073709551615 5 While 84 2 84 7 60 1 , 84 7 84 8 18446744073709551615 6 Module 85 2 85 8 61 1 , 85 8 85 9 18446744073709551615 5 Class 86 2 86 7 62 1 , 86 7 86 8 18446744073709551615 3 Dot 87 2 87 5 63 1 } 88 1 88 2 18446744073709551615 1 ; 88 2 88 3 18446744073709551615 4 enum 89 1 89 5 18446744073709551615 5 class 89 6 89 11 18446744073709551615 14 AccessModifier 89 12 89 26 64 1 { 90 1 90 2 18446744073709551615 6 Public 91 2 91 8 65 1 , 91 8 91 9 18446744073709551615 7 Private 92 2 92 9 66 1 , 92 9 92 10 18446744073709551615 8 Internal 93 2 93 10 67 1 , 93 10 93 11 18446744073709551615 9 Protected 94 2 94 11 68 1 } 95 1 95 2 18446744073709551615 1 ; 95 2 95 3 18446744073709551615 5 class 96 1 96 6 18446744073709551615 10 Expression 96 7 96 17 5 1 { 97 1 97 2 18446744073709551615 6 public 98 1 98 7 18446744073709551615 1 : 98 7 98 8 18446744073709551615 7 int32_t 99 2 99 9 69 4 line 99 10 99 14 70 1 ; 99 14 99 15 18446744073709551615 7 int32_t 100 2 100 9 69 6 column 100 10 100 16 71 1 ; 100 16 100 17 18446744073709551615 14 ExpressionKind 101 2 101 16 32 4 kind 101 17 101 21 72 1 ; 101 21 101 22 18446744073709551615 4 Type 102 2 102 6 73 4 type 102 7 102 11 74 1 ; 102 11 102 12 18446744073709551615 3 int 103 2 103 5 18446744073709551615 2 ID 103 6 103 8 75 1 ; 103 8 103 9 18446744073709551615 10 Expression 104 2 104 12 5 1 ( 104 12 104 13 5 7 int32_t 104 13 104 20 69 4 line 104 21 104 25 76 1 , 104 25 104 26 5 7 int32_t 104 27 104 34 69 6 column 104 35 104 41 77 1 , 104 41 104 42 5 14 ExpressionKind 104 43 104 57 32 4 kind 104 58 104 62 78 1 ) 104 62 104 63 5 1 ; 104 63 104 64 18446744073709551615 5 class 106 2 106 7 18446744073709551615 7 Visitor 106 8 106 15 79 1 { 107 2 107 3 18446744073709551615 6 public 108 2 108 8 18446744073709551615 1 : 108 8 108 9 18446744073709551615 7 virtual 109 3 109 10 18446744073709551615 4 void 109 11 109 15 18446744073709551615 5 Visit 109 16 109 21 80 1 ( 109 21 109 22 80 18 ConstantExpression 109 22 109 40 6 1 * 109 40 109 41 18446744073709551615 4 node 109 42 109 46 81 1 ) 109 46 109 47 80 1 = 109 48 109 49 80 1 0 109 50 109 51 18446744073709551615 1 ; 109 51 109 52 18446744073709551615 7 virtual 110 3 110 10 18446744073709551615 4 void 110 11 110 15 18446744073709551615 5 Visit 110 16 110 21 80 1 ( 110 21 110 22 80 15 UnaryExpression 110 22 110 37 7 1 * 110 37 110 38 18446744073709551615 4 node 110 39 110 43 82 1 ) 110 43 110 44 80 1 = 110 45 110 46 80 1 0 110 47 110 48 18446744073709551615 1 ; 110 48 110 49 18446744073709551615 7 virtual 111 3 111 10 18446744073709551615 4 void 111 11 111 15 18446744073709551615 5 Visit 111 16 111 21 80 1 ( 111 21 111 22 80 16 BinaryExpression 111 22 111 38 8 1 * 111 38 111 39 18446744073709551615 4 node 111 40 111 44 83 1 ) 111 44 111 45 80 1 = 111 46 111 47 80 1 0 111 48 111 49 18446744073709551615 1 ; 111 49 111 50 18446744073709551615 7 virtual 112 3 112 10 18446744073709551615 4 void 112 11 112 15 18446744073709551615 5 Visit 112 16 112 21 80 1 ( 112 21 112 22 80 16 AssignExpression 112 22 112 38 9 1 * 112 38 112 39 18446744073709551615 4 node 112 40 112 44 84 1 ) 112 44 112 45 80 1 = 112 46 112 47 80 1 0 112 48 112 49 18446744073709551615 1 ; 112 49 112 50 18446744073709551615 7 virtual 113 3 113 10 18446744073709551615 4 void 113 11 113 15 18446744073709551615 5 Visit 113 16 113 21 80 1 ( 113 21 113 22 80 15 BlockExpression 113 22 113 37 10 1 * 113 37 113 38 18446744073709551615 4 node 113 39 113 43 85 1 ) 113 43 113 44 80 1 = 113 45 113 46 80 1 0 113 47 113 48 18446744073709551615 1 ; 113 48 113 49 18446744073709551615 7 virtual 114 3 114 10 18446744073709551615 4 void 114 11 114 15 18446744073709551615 5 Visit 114 16 114 21 80 1 ( 114 21 114 22 80 16 IfThenExpression 114 22 114 38 11 1 * 114 38 114 39 18446744073709551615 4 node 114 40 114 44 86 1 ) 114 44 114 45 80 1 = 114 46 114 47 80 1 0 114 48 114 49 18446744073709551615 1 ; 114 49 114 50 18446744073709551615 7 virtual 115 3 115 10 18446744073709551615 4 void 115 11 115 15 18446744073709551615 5 Visit 115 16 115 21 80 1 ( 115 21 115 22 80 20 IfThenElseExpression 115 22 115 42 12 1 * 115 42 115 43 18446744073709551615 4 node 115 44 115 48 87 1 ) 115 48 115 49 80 1 = 115 50 115 51 80 1 0 115 52 115 53 18446744073709551615 1 ; 115 53 115 54 18446744073709551615 50 // virtual void Visit(DefVarExpression* node) = 0; 116 3 116 53 18446744073709551615 50 // virtual void Visit(DefFunExpression* node) = 0; 117 3 117 53 18446744073709551615 53 // virtual void Visit(ParameterExpression* node) = 0; 118 3 118 56 18446744073709551615 7 virtual 119 3 119 10 18446744073709551615 4 void 119 11 119 15 18446744073709551615 5 Visit 119 16 119 21 80 1 ( 119 21 119 22 80 14 CallExpression 119 22 119 36 13 1 * 119 36 119 37 18446744073709551615 4 node 119 38 119 42 88 1 ) 119 42 119 43 80 1 = 119 44 119 45 80 1 0 119 46 119 47 18446744073709551615 1 ; 119 47 119 48 18446744073709551615 7 virtual 120 3 120 10 18446744073709551615 4 void 120 11 120 15 18446744073709551615 5 Visit 120 16 120 21 80 1 ( 120 21 120 22 80 18 VariableExpression 120 22 120 40 14 1 * 120 40 120 41 18446744073709551615 4 node 120 42 120 46 89 1 ) 120 46 120 47 80 1 = 120 48 120 49 80 1 0 120 50 120 51 18446744073709551615 1 ; 120 51 120 52 18446744073709551615 7 virtual 121 3 121 10 18446744073709551615 4 void 121 11 121 15 18446744073709551615 5 Visit 121 16 121 21 80 1 ( 121 21 121 22 80 16 ReturnExpression 121 22 121 38 15 1 * 121 38 121 39 18446744073709551615 4 node 121 40 121 44 90 1 ) 121 44 121 45 80 1 = 121 46 121 47 80 1 0 121 48 121 49 18446744073709551615 1 ; 121 49 121 50 18446744073709551615 7 virtual 122 3 122 10 18446744073709551615 4 void 122 11 122 15 18446744073709551615 5 Visit 122 16 122 21 80 1 ( 122 21 122 22 80 15 WhileExpression 122 22 122 37 16 1 * 122 37 122 38 18446744073709551615 4 node 122 39 122 43 91 1 ) 122 43 122 44 80 1 = 122 45 122 46 80 1 0 122 47 122 48 18446744073709551615 1 ; 122 48 122 49 18446744073709551615 50 // virtual void Visit(ModuleExpression* node) = 0; 123 3 123 53 18446744073709551615 49 // virtual void Visit(ClassExpression* node) = 0; 124 3 124 52 18446744073709551615 7 virtual 125 3 125 10 18446744073709551615 4 void 125 11 125 15 18446744073709551615 5 Visit 125 16 125 21 80 1 ( 125 21 125 22 80 13 DotExpression 125 22 125 35 17 1 * 125 35 125 36 18446744073709551615 4 node 125 37 125 41 92 1 ) 125 41 125 42 80 1 = 125 43 125 44 80 1 0 125 45 125 46 18446744073709551615 1 ; 125 46 125 47 18446744073709551615 1 } 126 2 126 3 18446744073709551615 1 ; 126 3 126 4 18446744073709551615 7 virtual 127 2 127 9 18446744073709551615 4 void 127 10 127 14 18446744073709551615 6 Accept 127 15 127 21 93 1 ( 127 21 127 22 93 7 Visitor 127 22 127 29 79 1 * 127 29 127 30 18446744073709551615 7 visitor 127 31 127 38 94 1 ) 127 38 127 39 93 1 = 127 40 127 41 93 1 0 127 42 127 43 18446744073709551615 1 ; 127 43 127 44 18446744073709551615 1 } 128 1 128 2 18446744073709551615 1 ; 128 2 128 3 18446744073709551615 5 class 129 1 129 6 18446744073709551615 18 ConstantExpression 129 7 129 25 6 1 : 129 26 129 27 18446744073709551615 6 public 129 28 129 34 18446744073709551615 10 Expression 129 35 129 45 5 1 { 130 1 130 2 18446744073709551615 6 public 131 1 131 7 18446744073709551615 1 : 131 7 131 8 18446744073709551615 3 any 132 2 132 5 95 5 value 132 6 132 11 96 1 ; 132 11 132 12 18446744073709551615 18 ConstantExpression 133 2 133 20 6 1 ( 133 20 133 21 6 7 int32_t 133 21 133 28 69 4 line 133 29 133 33 97 1 , 133 33 133 34 6 7 int32_t 133 35 133 42 69 6 column 133 43 133 49 98 1 , 133 49 133 50 6 3 any 133 51 133 54 95 5 value 133 55 133 60 99 1 ) 133 60 133 61 6 1 ; 133 61 133 62 18446744073709551615 4 void 134 2 134 6 18446744073709551615 6 Accept 134 7 134 13 93 1 ( 134 13 134 14 93 7 Visitor 134 14 134 21 79 1 * 134 21 134 22 18446744073709551615 7 visitor 134 23 134 30 100 1 ) 134 30 134 31 93 8 override 134 32 134 40 18446744073709551615 1 ; 134 40 134 41 18446744073709551615 1 } 135 1 135 2 18446744073709551615 1 ; 135 2 135 3 18446744073709551615 5 class 137 1 137 6 18446744073709551615 15 UnaryExpression 137 7 137 22 7 1 : 137 23 137 24 18446744073709551615 6 public 137 25 137 31 18446744073709551615 10 Expression 137 32 137 42 5 1 { 138 1 138 2 18446744073709551615 6 public 139 1 139 7 18446744073709551615 1 : 139 7 139 8 18446744073709551615 6 ExpPtr 140 2 140 8 18 7 operand 140 9 140 16 101 1 ; 140 16 140 17 18446744073709551615 15 UnaryExpression 141 2 141 17 7 1 ( 141 17 141 18 7 7 int32_t 141 18 141 25 69 4 line 141 26 141 30 102 1 , 141 30 141 31 7 7 int32_t 141 32 141 39 69 6 column 141 40 141 46 103 1 , 141 46 141 47 7 14 ExpressionKind 141 48 141 62 32 4 kind 141 63 141 67 104 1 , 141 67 141 68 7 6 ExpPtr 142 6 142 12 18 7 operand 142 13 142 20 105 1 ) 142 20 142 21 7 1 ; 142 21 142 22 18446744073709551615 4 void 143 2 143 6 18446744073709551615 6 Accept 143 7 143 13 93 1 ( 143 13 143 14 93 7 Visitor 143 14 143 21 79 1 * 143 21 143 22 18446744073709551615 7 visitor 143 23 143 30 106 1 ) 143 30 143 31 93 8 override 143 32 143 40 18446744073709551615 1 ; 143 40 143 41 18446744073709551615 1 } 144 1 144 2 18446744073709551615 1 ; 144 2 144 3 18446744073709551615 5 class 146 1 146 6 18446744073709551615 16 BinaryExpression 146 7 146 23 8 1 : 146 24 146 25 18446744073709551615 6 public 146 26 146 32 18446744073709551615 10 Expression 146 33 146 43 5 1 { 147 1 147 2 18446744073709551615 6 public 148 1 148 7 18446744073709551615 1 : 148 7 148 8 18446744073709551615 6 ExpPtr 149 2 149 8 18 4 left 149 9 149 13 107 1 ; 149 13 149 14 18446744073709551615 6 ExpPtr 150 2 150 8 18 5 right 150 9 150 14 108 1 ; 150 14 150 15 18446744073709551615 16 BinaryExpression 151 2 151 18 8 1 ( 151 18 151 19 8 7 int32_t 151 19 151 26 69 4 line 151 27 151 31 109 1 , 151 31 151 32 8 7 int32_t 151 33 151 40 69 6 column 151 41 151 47 110 1 , 151 47 151 48 8 14 ExpressionKind 151 49 151 63 32 4 kind 151 64 151 68 111 1 , 151 68 151 69 8 6 ExpPtr 152 7 152 13 18 4 left 152 14 152 18 112 1 , 152 18 152 19 8 6 ExpPtr 152 20 152 26 18 5 right 152 27 152 32 113 1 ) 152 32 152 33 8 1 ; 152 33 152 34 18446744073709551615 4 void 153 2 153 6 18446744073709551615 6 Accept 153 7 153 13 93 1 ( 153 13 153 14 93 7 Visitor 153 14 153 21 79 1 * 153 21 153 22 18446744073709551615 7 visitor 153 23 153 30 114 1 ) 153 30 153 31 93 8 override 153 32 153 40 18446744073709551615 1 ; 153 40 153 41 18446744073709551615 1 } 154 1 154 2 18446744073709551615 1 ; 154 2 154 3 18446744073709551615 5 class 156 1 156 6 18446744073709551615 16 AssignExpression 156 7 156 23 9 1 : 156 24 156 25 18446744073709551615 6 public 156 26 156 32 18446744073709551615 10 Expression 156 33 156 43 5 1 { 157 1 157 2 18446744073709551615 6 public 158 1 158 7 18446744073709551615 1 : 158 7 158 8 18446744073709551615 7 wstring 159 2 159 9 115 4 name 159 10 159 14 116 1 ; 159 14 159 15 18446744073709551615 6 ExpPtr 160 2 160 8 18 5 value 160 9 160 14 117 1 ; 160 14 160 15 18446744073709551615 16 AssignExpression 161 2 161 18 9 1 ( 161 18 161 19 9 7 int32_t 161 19 161 26 69 4 line 161 27 161 31 118 1 , 161 31 161 32 9 7 int32_t 161 33 161 40 69 6 column 161 41 161 47 119 1 , 161 47 161 48 9 7 wstring 161 49 161 56 115 4 name 161 57 161 61 120 1 , 161 61 161 62 9 6 ExpPtr 161 63 161 69 18 5 value 161 70 161 75 121 1 ) 161 75 161 76 9 1 ; 161 76 161 77 18446744073709551615 4 void 162 2 162 6 18446744073709551615 6 Accept 162 7 162 13 93 1 ( 162 13 162 14 93 7 Visitor 162 14 162 21 79 1 * 162 21 162 22 18446744073709551615 7 visitor 162 23 162 30 122 1 ) 162 30 162 31 93 8 override 162 32 162 40 18446744073709551615 1 ; 162 40 162 41 18446744073709551615 1 } 163 1 163 2 18446744073709551615 1 ; 163 2 163 3 18446744073709551615 5 class 165 1 165 6 18446744073709551615 15 BlockExpression 165 7 165 22 10 1 : 165 23 165 24 18446744073709551615 6 public 165 25 165 31 18446744073709551615 10 Expression 165 32 165 42 5 1 { 166 1 166 2 18446744073709551615 6 public 167 1 167 7 18446744073709551615 1 : 167 7 167 8 18446744073709551615 6 vector 168 2 168 8 123 1 < 168 8 168 9 18446744073709551615 6 ExpPtr 168 9 168 15 18 1 > 168 15 168 16 18446744073709551615 11 expressions 168 17 168 28 124 1 ; 168 28 168 29 18446744073709551615 15 BlockExpression 169 2 169 17 10 1 ( 169 17 169 18 10 7 int32_t 169 18 169 25 69 4 line 169 26 169 30 125 1 , 169 30 169 31 10 7 int32_t 169 32 169 39 69 6 column 169 40 169 46 126 1 , 169 46 169 47 10 6 vector 169 48 169 54 123 1 < 169 54 169 55 18446744073709551615 6 ExpPtr 169 55 169 61 18 1 > 169 61 169 62 18446744073709551615 11 expressions 169 63 169 74 127 1 ) 169 74 169 75 10 1 ; 169 75 169 76 18446744073709551615 4 void 170 2 170 6 18446744073709551615 6 Accept 170 7 170 13 93 1 ( 170 13 170 14 93 7 Visitor 170 14 170 21 79 1 * 170 21 170 22 18446744073709551615 7 visitor 170 23 170 30 128 1 ) 170 30 170 31 93 8 override 170 32 170 40 18446744073709551615 1 ; 170 40 170 41 18446744073709551615 1 } 171 1 171 2 18446744073709551615 1 ; 171 2 171 3 18446744073709551615 5 class 173 1 173 6 18446744073709551615 16 IfThenExpression 173 7 173 23 11 1 : 173 24 173 25 18446744073709551615 6 public 173 26 173 32 18446744073709551615 10 Expression 173 33 173 43 5 1 { 174 1 174 2 18446744073709551615 6 public 175 1 175 7 18446744073709551615 1 : 175 7 175 8 18446744073709551615 6 ExpPtr 176 2 176 8 18 9 condition 176 9 176 18 129 1 ; 176 18 176 19 18446744073709551615 6 ExpPtr 177 2 177 8 18 6 ifTrue 177 9 177 15 130 1 ; 177 15 177 16 18446744073709551615 16 IfThenExpression 178 2 178 18 11 1 ( 178 18 178 19 11 7 int32_t 178 19 178 26 69 4 line 178 27 178 31 131 1 , 178 31 178 32 11 7 int32_t 178 33 178 40 69 6 column 178 41 178 47 132 1 , 178 47 178 48 11 6 ExpPtr 178 49 178 55 18 9 condition 178 56 178 65 133 1 , 178 65 178 66 11 6 ExpPtr 179 7 179 13 18 6 ifTrue 179 14 179 20 134 1 ) 179 20 179 21 11 1 ; 179 21 179 22 18446744073709551615 4 void 180 2 180 6 18446744073709551615 6 Accept 180 7 180 13 93 1 ( 180 13 180 14 93 7 Visitor 180 14 180 21 79 1 * 180 21 180 22 18446744073709551615 7 visitor 180 23 180 30 135 1 ) 180 30 180 31 93 8 override 180 32 180 40 18446744073709551615 1 ; 180 40 180 41 18446744073709551615 1 } 181 1 181 2 18446744073709551615 1 ; 181 2 181 3 18446744073709551615 5 class 183 1 183 6 18446744073709551615 20 IfThenElseExpression 183 7 183 27 12 1 : 183 28 183 29 18446744073709551615 6 public 183 30 183 36 18446744073709551615 10 Expression 183 37 183 47 5 1 { 184 1 184 2 18446744073709551615 6 public 185 1 185 7 18446744073709551615 1 : 185 7 185 8 18446744073709551615 6 ExpPtr 186 2 186 8 18 9 condition 186 9 186 18 136 1 ; 186 18 186 19 18446744073709551615 6 ExpPtr 187 2 187 8 18 6 ifTrue 187 9 187 15 137 1 ; 187 15 187 16 18446744073709551615 6 ExpPtr 188 2 188 8 18 7 ifFalse 188 9 188 16 138 1 ; 188 16 188 17 18446744073709551615 20 IfThenElseExpression 189 2 189 22 12 1 ( 189 22 189 23 12 7 int32_t 189 23 189 30 69 4 line 189 31 189 35 139 1 , 189 35 189 36 12 7 int32_t 189 37 189 44 69 6 column 189 45 189 51 140 1 , 189 51 189 52 12 6 ExpPtr 189 53 189 59 18 9 condition 189 60 189 69 141 1 , 189 69 189 70 12 6 ExpPtr 190 8 190 14 18 6 ifTrue 190 15 190 21 142 1 , 190 21 190 22 12 6 ExpPtr 190 23 190 29 18 7 ifFalse 190 30 190 37 143 1 ) 190 37 190 38 12 1 ; 190 38 190 39 18446744073709551615 4 void 191 2 191 6 18446744073709551615 6 Accept 191 7 191 13 93 1 ( 191 13 191 14 93 7 Visitor 191 14 191 21 79 1 * 191 21 191 22 18446744073709551615 7 visitor 191 23 191 30 144 1 ) 191 30 191 31 93 8 override 191 32 191 40 18446744073709551615 1 ; 191 40 191 41 18446744073709551615 1 } 192 1 192 2 18446744073709551615 1 ; 192 2 192 3 18446744073709551615 45 // class DefVarExpression : public Expression 194 1 194 46 18446744073709551615 4 // { 195 1 195 5 18446744073709551615 10 // public: 196 1 196 11 18446744073709551615 28 // 	AccessModifier modifier; 197 1 197 29 18446744073709551615 17 // 	wstring name; 198 1 198 18 18446744073709551615 17 // 	ExpPtr value; 199 1 199 18 18446744073709551615 75 // 	DefVarExpression(int32_t line, int32_t column, AccessModifier modifier, 200 1 200 76 18446744073709551615 48 // 					 wstring name, Type type, ExpPtr value); 201 1 201 49 18446744073709551615 43 // 	void Accept(Visitor* visitor) override; 202 1 202 44 18446744073709551615 5 // }; 203 1 203 6 18446744073709551615 45 // class DefFunExpression : public Expression 205 1 205 46 18446744073709551615 4 // { 206 1 206 5 18446744073709551615 10 // public: 207 1 207 11 18446744073709551615 28 // 	AccessModifier modifier; 208 1 208 29 18446744073709551615 17 // 	wstring name; 209 1 209 18 18446744073709551615 39 // 	vector<ParameterExpPtr> parameters; 210 1 210 40 18446744073709551615 16 // 	ExpPtr body; 211 1 211 17 18446744073709551615 20 // 	Type returnType; 212 1 212 21 18446744073709551615 75 // 	DefFunExpression(int32_t line, int32_t column, AccessModifier modifier, 213 1 213 76 18446744073709551615 58 // 					 wstring name, vector<ParameterExpPtr> parameters, 214 1 214 59 18446744073709551615 39 // 					 ExpPtr body, Type returnType); 215 1 215 40 18446744073709551615 43 // 	void Accept(Visitor* visitor) override; 216 1 216 44 18446744073709551615 5 // }; 217 1 217 6 18446744073709551615 48 // class ParameterExpression : public Expression 219 1 219 49 18446744073709551615 4 // { 220 1 220 5 18446744073709551615 10 // public: 221 1 221 11 18446744073709551615 17 // 	wstring name; 222 1 222 18 18446744073709551615 79 // 	ParameterExpression(int32_t line, int32_t column, wstring name, Type type); 223 1 223 80 18446744073709551615 43 // 	void Accept(Visitor* visitor) override; 224 1 224 44 18446744073709551615 5 // }; 225 1 225 6 18446744073709551615 5 class 227 1 227 6 18446744073709551615 14 CallExpression 227 7 227 21 13 1 : 227 22 227 23 18446744073709551615 6 public 227 24 227 30 18446744073709551615 10 Expression 227 31 227 41 5 1 { 228 1 228 2 18446744073709551615 6 public 229 1 229 7 18446744073709551615 1 : 229 7 229 8 18446744073709551615 6 ExpPtr 230 2 230 8 18 8 function 230 9 230 17 145 1 ; 230 17 230 18 18446744073709551615 6 vector 231 2 231 8 123 1 < 231 8 231 9 18446744073709551615 6 ExpPtr 231 9 231 15 18 1 > 231 15 231 16 18446744073709551615 9 arguments 231 17 231 26 146 1 ; 231 26 231 27 18446744073709551615 14 CallExpression 232 2 232 16 13 1 ( 232 16 232 17 13 7 int32_t 232 17 232 24 69 4 line 232 25 232 29 147 1 , 232 29 232 30 13 7 int32_t 232 31 232 38 69 6 column 232 39 232 45 148 1 , 232 45 232 46 13 6 ExpPtr 232 47 232 53 18 8 function 232 54 232 62 149 1 , 232 62 232 63 13 6 vector 233 8 233 14 123 1 < 233 14 233 15 18446744073709551615 6 ExpPtr 233 15 233 21 18 1 > 233 21 233 22 18446744073709551615 9 arguments 233 23 233 32 150 1 ) 233 32 233 33 13 1 ; 233 33 233 34 18446744073709551615 4 void 234 2 234 6 18446744073709551615 6 Accept 234 7 234 13 93 1 ( 234 13 234 14 93 7 Visitor 234 14 234 21 79 1 * 234 21 234 22 18446744073709551615 7 visitor 234 23 234 30 151 1 ) 234 30 234 31 93 8 override 234 32 234 40 18446744073709551615 1 ; 234 40 234 41 18446744073709551615 1 } 235 1 235 2 18446744073709551615 1 ; 235 2 235 3 18446744073709551615 5 class 237 1 237 6 18446744073709551615 18 VariableExpression 237 7 237 25 14 1 : 237 26 237 27 18446744073709551615 6 public 237 28 237 34 18446744073709551615 10 Expression 237 35 237 45 5 1 { 238 1 238 2 18446744073709551615 6 public 239 1 239 7 18446744073709551615 1 : 239 7 239 8 18446744073709551615 7 wstring 240 2 240 9 115 4 name 240 10 240 14 152 1 ; 240 14 240 15 18446744073709551615 18 VariableExpression 241 2 241 20 14 1 ( 241 20 241 21 14 7 int32_t 241 21 241 28 69 4 line 241 29 241 33 153 1 , 241 33 241 34 14 7 int32_t 241 35 241 42 69 6 column 241 43 241 49 154 1 , 241 49 241 50 14 7 wstring 241 51 241 58 115 4 name 241 59 241 63 155 1 ) 241 63 241 64 14 1 ; 241 64 241 65 18446744073709551615 4 void 242 2 242 6 18446744073709551615 6 Accept 242 7 242 13 93 1 ( 242 13 242 14 93 7 Visitor 242 14 242 21 79 1 * 242 21 242 22 18446744073709551615 7 visitor 242 23 242 30 156 1 ) 242 30 242 31 93 8 override 242 32 242 40 18446744073709551615 1 ; 242 40 242 41 18446744073709551615 1 } 243 1 243 2 18446744073709551615 1 ; 243 2 243 3 18446744073709551615 5 class 245 1 245 6 18446744073709551615 16 ReturnExpression 245 7 245 23 15 1 : 245 24 245 25 18446744073709551615 6 public 245 26 245 32 18446744073709551615 10 Expression 245 33 245 43 5 1 { 246 1 246 2 18446744073709551615 6 public 247 1 247 7 18446744073709551615 1 : 247 7 247 8 18446744073709551615 6 ExpPtr 248 2 248 8 18 5 value 248 9 248 14 157 1 ; 248 14 248 15 18446744073709551615 16 ReturnExpression 249 2 249 18 15 1 ( 249 18 249 19 15 7 int32_t 249 19 249 26 69 4 line 249 27 249 31 158 1 , 249 31 249 32 15 7 int32_t 249 33 249 40 69 6 column 249 41 249 47 159 1 , 249 47 249 48 15 6 ExpPtr 249 49 249 55 18 5 value 249 56 249 61 160 1 ) 249 61 249 62 15 1 ; 249 62 249 63 18446744073709551615 4 void 250 2 250 6 18446744073709551615 6 Accept 250 7 250 13 93 1 ( 250 13 250 14 93 7 Visitor 250 14 250 21 79 1 * 250 21 250 22 18446744073709551615 7 visitor 250 23 250 30 161 1 ) 250 30 250 31 93 8 override 250 32 250 40 18446744073709551615 1 ; 250 40 250 41 18446744073709551615 1 } 251 1 251 2 18446744073709551615 1 ; 251 2 251 3 18446744073709551615 5 class 253 1 253 6 18446744073709551615 15 WhileExpression 253 7 253 22 16 1 : 253 23 253 24 18446744073709551615 6 public 253 25 253 31 18446744073709551615 10 Expression 253 32 253 42 5 1 { 254 1 254 2 18446744073709551615 6 public 255 1 255 7 18446744073709551615 1 : 255 7 255 8 18446744073709551615 6 ExpPtr 256 2 256 8 18 9 condition 256 9 256 18 162 1 ; 256 18 256 19 18446744073709551615 6 ExpPtr 257 2 257 8 18 4 body 257 9 257 13 163 1 ; 257 13 257 14 18446744073709551615 15 WhileExpression 258 2 258 17 16 1 ( 258 17 258 18 16 7 int32_t 258 18 258 25 69 4 line 258 26 258 30 164 1 , 258 30 258 31 16 7 int32_t 258 32 258 39 69 6 column 258 40 258 46 165 1 , 258 46 258 47 16 6 ExpPtr 258 48 258 54 18 9 condition 258 55 258 64 166 1 , 258 64 258 65 16 6 ExpPtr 259 6 259 12 18 4 body 259 13 259 17 167 1 ) 259 17 259 18 16 1 ; 259 18 259 19 18446744073709551615 4 void 260 2 260 6 18446744073709551615 6 Accept 260 7 260 13 93 1 ( 260 13 260 14 93 7 Visitor 260 14 260 21 79 1 * 260 21 260 22 18446744073709551615 7 visitor 260 23 260 30 168 1 ) 260 30 260 31 93 8 override 260 32 260 40 18446744073709551615 1 ; 260 40 260 41 18446744073709551615 1 } 261 1 261 2 18446744073709551615 1 ; 261 2 261 3 18446744073709551615 45 // class ModuleExpression : public Expression 262 1 262 46 18446744073709551615 4 // { 263 1 263 5 18446744073709551615 10 // public: 264 1 264 11 18446744073709551615 28 // 	AccessModifier modifier; 265 1 265 29 18446744073709551615 17 // 	wstring name; 266 1 266 18 18446744073709551615 35 // 	vector<DefVarExpPtr> variables; 267 1 267 36 18446744073709551615 35 // 	vector<DefFunExpPtr> functions; 268 1 268 36 18446744073709551615 75 // 	ModuleExpression(int32_t line, int32_t column, AccessModifier modifier, 269 1 269 76 18446744073709551615 54 // 					 wstring name, vector<DefVarExpPtr> variables, 270 1 270 55 18446744073709551615 41 // 					 vector<DefFunExpPtr> functions); 271 1 271 42 18446744073709551615 43 // 	void Accept(Visitor* visitor) override; 272 1 272 44 18446744073709551615 5 // }; 273 1 273 6 18446744073709551615 44 // class ClassExpression : public Expression 274 1 274 45 18446744073709551615 4 // { 275 1 275 5 18446744073709551615 10 // public: 276 1 276 11 18446744073709551615 28 // 	AccessModifier modifier; 277 1 277 29 18446744073709551615 17 // 	wstring name; 278 1 278 18 18446744073709551615 32 // 	vector<DefVarExpPtr> fields; 279 1 279 33 18446744073709551615 33 // 	vector<DefFunExpPtr> methods; 280 1 280 34 18446744073709551615 74 // 	ClassExpression(int32_t line, int32_t column, AccessModifier modifier, 282 1 282 75 18446744073709551615 50 // 					wstring name, vector<DefVarExpPtr> fields, 283 1 283 51 18446744073709551615 38 // 					vector<DefFunExpPtr> methods); 284 1 284 39 18446744073709551615 43 // 	void Accept(Visitor* visitor) override; 285 1 285 44 18446744073709551615 5 // }; 286 1 286 6 18446744073709551615 5 class 287 1 287 6 18446744073709551615 13 DotExpression 287 7 287 20 17 1 : 287 21 287 22 18446744073709551615 6 public 287 23 287 29 18446744073709551615 10 Expression 287 30 287 40 5 1 { 288 1 288 2 18446744073709551615 6 public 289 1 289 7 18446744073709551615 1 : 289 7 289 8 18446744073709551615 6 ExpPtr 290 2 290 8 18 6 object 290 9 290 15 169 1 ; 290 15 290 16 18446744073709551615 7 wstring 291 2 291 9 115 4 name 291 10 291 14 170 1 ; 291 14 291 15 18446744073709551615 13 DotExpression 292 2 292 15 17 1 ( 292 15 292 16 17 7 int32_t 292 16 292 23 69 4 line 292 24 292 28 171 1 , 292 28 292 29 17 7 int32_t 292 30 292 37 69 6 column 292 38 292 44 172 1 , 292 44 292 45 17 6 ExpPtr 292 46 292 52 18 6 object 292 53 292 59 173 1 , 292 59 292 60 17 7 wstring 292 61 292 68 115 4 name 292 69 292 73 174 1 ) 292 73 292 74 17 1 ; 292 74 292 75 18446744073709551615 4 void 293 2 293 6 18446744073709551615 6 Accept 293 7 293 13 93 1 ( 293 13 293 14 93 7 Visitor 293 14 293 21 79 1 * 293 21 293 22 18446744073709551615 7 visitor 293 23 293 30 175 1 ) 293 30 293 31 93 8 override 293 32 293 40 18446744073709551615 1 ; 293 40 293 41 18446744073709551615 1 } 294 1 294 2 18446744073709551615 1 ; 294 2 294 3 18446744073709551615 9 namespace 295 1 295 10 18446744073709551615 3 Ast 295 11 295 14 176 1 { 296 1 296 2 18446744073709551615 11 UnaryExpPtr 297 1 297 12 21 9 UnaryPlus 297 13 297 22 177 1 ( 297 22 297 23 177 7 int32_t 297 23 297 30 69 4 line 297 31 297 35 178 1 , 297 35 297 36 177 7 int32_t 297 37 297 44 69 6 column 297 45 297 51 179 1 , 297 51 297 52 177 6 ExpPtr 297 53 297 59 18 7 operand 297 60 297 67 180 1 ) 297 67 297 68 177 1 ; 297 68 297 69 18446744073709551615 11 UnaryExpPtr 298 1 298 12 21 10 UnaryMinus 298 13 298 23 181 1 ( 298 23 298 24 181 7 int32_t 298 24 298 31 69 4 line 298 32 298 36 182 1 , 298 36 298 37 181 7 int32_t 298 38 298 45 69 6 column 298 46 298 52 183 1 , 298 52 298 53 181 6 ExpPtr 298 54 298 60 18 7 operand 298 61 298 68 184 1 ) 298 68 298 69 181 1 ; 298 69 298 70 18446744073709551615 11 UnaryExpPtr 299 1 299 12 21 3 Not 299 13 299 16 185 1 ( 299 16 299 17 185 7 int32_t 299 17 299 24 69 4 line 299 25 299 29 186 1 , 299 29 299 30 185 7 int32_t 299 31 299 38 69 6 column 299 39 299 45 187 1 , 299 45 299 46 185 6 ExpPtr 299 47 299 53 18 7 operand 299 54 299 61 188 1 ) 299 61 299 62 185 1 ; 299 62 299 63 18446744073709551615 12 BinaryExpPtr 300 1 300 13 22 3 Add 300 14 300 17 189 1 ( 300 17 300 18 189 7 int32_t 300 18 300 25 69 4 line 300 26 300 30 190 1 , 300 30 300 31 189 7 int32_t 300 32 300 39 69 6 column 300 40 300 46 191 1 , 300 46 300 47 189 6 ExpPtr 300 48 300 54 18 2 e1 300 55 300 57 192 1 , 300 57 300 58 189 6 ExpPtr 300 59 300 65 18 2 e2 300 66 300 68 193 1 ) 300 68 300 69 189 1 ; 300 69 300 70 18446744073709551615 12 BinaryExpPtr 301 1 301 13 22 8 Subtract 301 14 301 22 194 1 ( 301 22 301 23 194 7 int32_t 301 23 301 30 69 4 line 301 31 301 35 195 1 , 301 35 301 36 194 7 int32_t 301 37 301 44 69 6 column 301 45 301 51 196 1 , 301 51 301 52 194 6 ExpPtr 301 53 301 59 18 2 e1 301 60 301 62 197 1 , 301 62 301 63 194 6 ExpPtr 301 64 301 70 18 2 e2 301 71 301 73 198 1 ) 301 73 301 74 194 1 ; 301 74 301 75 18446744073709551615 12 BinaryExpPtr 302 1 302 13 22 8 Multiply 302 14 302 22 199 1 ( 302 22 302 23 199 7 int32_t 302 23 302 30 69 4 line 302 31 302 35 200 1 , 302 35 302 36 199 7 int32_t 302 37 302 44 69 6 column 302 45 302 51 201 1 , 302 51 302 52 199 6 ExpPtr 302 53 302 59 18 2 e1 302 60 302 62 202 1 , 302 62 302 63 199 6 ExpPtr 302 64 302 70 18 2 e2 302 71 302 73 203 1 ) 302 73 302 74 199 1 ; 302 74 302 75 18446744073709551615 12 BinaryExpPtr 303 1 303 13 22 6 Divide 303 14 303 20 204 1 ( 303 20 303 21 204 7 int32_t 303 21 303 28 69 4 line 303 29 303 33 205 1 , 303 33 303 34 204 7 int32_t 303 35 303 42 69 6 column 303 43 303 49 206 1 , 303 49 303 50 204 6 ExpPtr 303 51 303 57 18 2 e1 303 58 303 60 207 1 , 303 60 303 61 204 6 ExpPtr 303 62 303 68 18 2 e2 303 69 303 71 208 1 ) 303 71 303 72 204 1 ; 303 72 303 73 18446744073709551615 12 BinaryExpPtr 304 1 304 13 22 6 Modulo 304 14 304 20 209 1 ( 304 20 304 21 209 7 int32_t 304 21 304 28 69 4 line 304 29 304 33 210 1 , 304 33 304 34 209 7 int32_t 304 35 304 42 69 6 column 304 43 304 49 211 1 , 304 49 304 50 209 6 ExpPtr 304 51 304 57 18 2 e1 304 58 304 60 212 1 , 304 60 304 61 209 6 ExpPtr 304 62 304 68 18 2 e2 304 69 304 71 213 1 ) 304 71 304 72 209 1 ; 304 72 304 73 18446744073709551615 12 BinaryExpPtr 305 1 305 13 22 11 GreaterThan 305 14 305 25 214 1 ( 305 25 305 26 214 7 int32_t 305 26 305 33 69 4 line 305 34 305 38 215 1 , 305 38 305 39 214 7 int32_t 305 40 305 47 69 6 column 305 48 305 54 216 1 , 305 54 305 55 214 6 ExpPtr 305 56 305 62 18 2 e1 305 63 305 65 217 1 , 305 65 305 66 214 6 ExpPtr 305 67 305 73 18 2 e2 305 74 305 76 218 1 ) 305 76 305 77 214 1 ; 305 77 305 78 18446744073709551615 12 BinaryExpPtr 306 1 306 13 22 8 LessThan 306 14 306 22 219 1 ( 306 22 306 23 219 7 int32_t 306 23 306 30 69 4 line 306 31 306 35 220 1 , 306 35 306 36 219 7 int32_t 306 37 306 44 69 6 column 306 45 306 51 221 1 , 306 51 306 52 219 6 ExpPtr 306 53 306 59 18 2 e1 306 60 306 62 222 1 , 306 62 306 63 219 6 ExpPtr 306 64 306 70 18 2 e2 306 71 306 73 223 1 ) 306 73 306 74 219 1 ; 306 74 306 75 18446744073709551615 12 BinaryExpPtr 307 1 307 13 22 18 GreaterThanOrEqual 307 14 307 32 224 1 ( 307 32 307 33 224 7 int32_t 307 33 307 40 69 4 line 307 41 307 45 225 1 , 307 45 307 46 224 7 int32_t 307 47 307 54 69 6 column 307 55 307 61 226 1 , 307 61 307 62 224 6 ExpPtr 307 63 307 69 18 2 e1 307 70 307 72 227 1 , 307 72 307 73 224 6 ExpPtr 308 9 308 15 18 2 e2 308 16 308 18 228 1 ) 308 18 308 19 224 1 ; 308 19 308 20 18446744073709551615 12 BinaryExpPtr 309 1 309 13 22 15 LessThanOrEqual 309 14 309 29 229 1 ( 309 29 309 30 229 7 int32_t 309 30 309 37 69 4 line 309 38 309 42 230 1 , 309 42 309 43 229 7 int32_t 309 44 309 51 69 6 column 309 52 309 58 231 1 , 309 58 309 59 229 6 ExpPtr 309 60 309 66 18 2 e1 309 67 309 69 232 1 , 309 69 309 70 229 6 ExpPtr 310 9 310 15 18 2 e2 310 16 310 18 233 1 ) 310 18 310 19 229 1 ; 310 19 310 20 18446744073709551615 12 BinaryExpPtr 311 1 311 13 22 5 Equal 311 14 311 19 234 1 ( 311 19 311 20 234 7 int32_t 311 20 311 27 69 4 line 311 28 311 32 235 1 , 311 32 311 33 234 7 int32_t 311 34 311 41 69 6 column 311 42 311 48 236 1 , 311 48 311 49 234 6 ExpPtr 311 50 311 56 18 2 e1 311 57 311 59 237 1 , 311 59 311 60 234 6 ExpPtr 311 61 311 67 18 2 e2 311 68 311 70 238 1 ) 311 70 311 71 234 1 ; 311 71 311 72 18446744073709551615 12 BinaryExpPtr 312 1 312 13 22 8 NotEqual 312 14 312 22 239 1 ( 312 22 312 23 239 7 int32_t 312 23 312 30 69 4 line 312 31 312 35 240 1 , 312 35 312 36 239 7 int32_t 312 37 312 44 69 6 column 312 45 312 51 241 1 , 312 51 312 52 239 6 ExpPtr 312 53 312 59 18 2 e1 312 60 312 62 242 1 , 312 62 312 63 239 6 ExpPtr 312 64 312 70 18 2 e2 312 71 312 73 243 1 ) 312 73 312 74 239 1 ; 312 74 312 75 18446744073709551615 12 BinaryExpPtr 313 1 313 13 22 3 And 313 14 313 17 244 1 ( 313 17 313 18 244 7 int32_t 313 18 313 25 69 4 line 313 26 313 30 245 1 , 313 30 313 31 244 7 int32_t 313 32 313 39 69 6 column 313 40 313 46 246 1 , 313 46 313 47 244 6 ExpPtr 313 48 313 54 18 2 e1 313 55 313 57 247 1 , 313 57 313 58 244 6 ExpPtr 313 59 313 65 18 2 e2 313 66 313 68 248 1 ) 313 68 313 69 244 1 ; 313 69 313 70 18446744073709551615 12 BinaryExpPtr 314 1 314 13 22 2 Or 314 14 314 16 249 1 ( 314 16 314 17 249 7 int32_t 314 17 314 24 69 4 line 314 25 314 29 250 1 , 314 29 314 30 249 7 int32_t 314 31 314 38 69 6 column 314 39 314 45 251 1 , 314 45 314 46 249 6 ExpPtr 314 47 314 53 18 2 e1 314 54 314 56 252 1 , 314 56 314 57 249 6 ExpPtr 314 58 314 64 18 2 e2 314 65 314 67 253 1 ) 314 67 314 68 249 1 ; 314 68 314 69 18446744073709551615 14 ConstantExpPtr 315 1 315 15 20 8 Constant 315 16 315 24 254 1 ( 315 24 315 25 254 7 int32_t 315 25 315 32 69 4 line 315 33 315 37 255 1 , 315 37 315 38 254 7 int32_t 315 39 315 46 69 6 column 315 47 315 53 256 1 , 315 53 315 54 254 3 any 315 55 315 58 95 5 value 315 59 315 64 257 1 ) 315 64 315 65 254 1 ; 315 65 315 66 18446744073709551615 77 // DefVarExpPtr DefVar(int32_t line, int32_t column, AccessModifier modifier, 316 1 316 78 18446744073709551615 47 // 					wstring name, Type type, ExpPtr value); 317 1 317 48 18446744073709551615 77 // DefFunExpPtr DefFun(int32_t line, int32_t column, AccessModifier modifier, 318 1 318 78 18446744073709551615 57 // 					wstring name, vector<ParameterExpPtr> parameters, 319 1 319 58 18446744073709551615 38 // 					ExpPtr body, Type returnType); 320 1 320 39 18446744073709551615 10 CallExpPtr 321 1 321 11 27 4 Call 321 12 321 16 258 1 ( 321 16 321 17 258 7 int32_t 321 17 321 24 69 4 line 321 25 321 29 259 1 , 321 29 321 30 258 7 int32_t 321 31 321 38 69 6 column 321 39 321 45 260 1 , 321 45 321 46 258 6 ExpPtr 321 47 321 53 18 8 function 321 54 321 62 261 1 , 321 62 321 63 258 6 vector 322 5 322 11 123 1 < 322 11 322 12 18446744073709551615 6 ExpPtr 322 12 322 18 18 1 > 322 18 322 19 18446744073709551615 9 arguments 322 20 322 29 262 1 ) 322 29 322 30 258 1 ; 322 30 322 31 18446744073709551615 14 VariableExpPtr 323 1 323 15 28 8 Variable 323 16 323 24 263 1 ( 323 24 323 25 263 7 int32_t 323 25 323 32 69 4 line 323 33 323 37 264 1 , 323 37 323 38 263 7 int32_t 323 39 323 46 69 6 column 323 47 323 53 265 1 , 323 53 323 54 263 7 wstring 323 55 323 62 115 4 name 323 63 323 67 266 1 ) 323 67 323 68 263 1 ; 323 68 323 69 18446744073709551615 11 BlockExpPtr 324 1 324 12 24 5 Block 324 13 324 18 267 1 ( 324 18 324 19 267 7 int32_t 324 19 324 26 69 4 line 324 27 324 31 268 1 , 324 31 324 32 267 7 int32_t 324 33 324 40 69 6 column 324 41 324 47 269 1 , 324 47 324 48 267 6 vector 324 49 324 55 123 1 < 324 55 324 56 18446744073709551615 6 ExpPtr 324 56 324 62 18 1 > 324 62 324 63 18446744073709551615 11 expressions 324 64 324 75 270 1 ) 324 75 324 76 267 1 ; 324 76 324 77 18446744073709551615 12 AssignExpPtr 325 1 325 13 23 6 Assign 325 14 325 20 271 1 ( 325 20 325 21 271 7 int32_t 325 21 325 28 69 4 line 325 29 325 33 272 1 , 325 33 325 34 271 7 int32_t 325 35 325 42 69 6 column 325 43 325 49 273 1 , 325 49 325 50 271 7 wstring 325 51 325 58 115 4 name 325 59 325 63 274 1 , 325 63 325 64 271 6 ExpPtr 325 65 325 71 18 5 value 325 72 325 77 275 1 ) 325 77 325 78 271 1 ; 325 78 325 79 18446744073709551615 12 IfThenExpPtr 326 1 326 13 25 6 IfThen 326 14 326 20 276 1 ( 326 20 326 21 276 7 int32_t 326 21 326 28 69 4 line 326 29 326 33 277 1 , 326 33 326 34 276 7 int32_t 326 35 326 42 69 6 column 326 43 326 49 278 1 , 326 49 326 50 276 6 ExpPtr 326 51 326 57 18 9 condition 326 58 326 67 279 1 , 326 67 326 68 276 6 ExpPtr 327 6 327 12 18 6 ifTrue 327 13 327 19 280 1 ) 327 19 327 20 276 1 ; 327 20 327 21 18446744073709551615 16 IfThenElseExpPtr 328 1 328 17 26 10 IfThenElse 328 18 328 28 281 1 ( 328 28 328 29 281 7 int32_t 328 29 328 36 69 4 line 328 37 328 41 282 1 , 328 41 328 42 281 7 int32_t 328 43 328 50 69 6 column 328 51 328 57 283 1 , 328 57 328 58 281 6 ExpPtr 328 59 328 65 18 9 condition 328 66 328 75 284 1 , 328 75 328 76 281 6 ExpPtr 329 8 329 14 18 6 ifTrue 329 15 329 21 285 1 , 329 21 329 22 281 6 ExpPtr 329 23 329 29 18 7 ifFalse 329 30 329 37 286 1 ) 329 37 329 38 281 1 ; 329 38 329 39 18446744073709551615 72 // ParameterExpPtr Parameter(int32_t line, int32_t column, wstring name, 330 1 330 73 18446744073709551615 22 // 						  Type type); 331 1 331 23 18446744073709551615 12 ReturnExpPtr 332 1 332 13 29 6 Return 332 14 332 20 287 1 ( 332 20 332 21 287 7 int32_t 332 21 332 28 69 4 line 332 29 332 33 288 1 , 332 33 332 34 287 7 int32_t 332 35 332 42 69 6 column 332 43 332 49 289 1 , 332 49 332 50 287 6 ExpPtr 332 51 332 57 18 5 value 332 58 332 63 290 1 ) 332 63 332 64 287 1 ; 332 64 332 65 18446744073709551615 11 WhileExpPtr 333 1 333 12 30 5 While 333 13 333 18 291 1 ( 333 18 333 19 291 7 int32_t 333 19 333 26 69 4 line 333 27 333 31 292 1 , 333 31 333 32 291 7 int32_t 333 33 333 40 69 6 column 333 41 333 47 293 1 , 333 47 333 48 291 6 ExpPtr 333 49 333 55 18 9 condition 333 56 333 65 294 1 , 333 65 333 66 291 6 ExpPtr 333 67 333 73 18 4 body 333 74 333 78 295 1 ) 333 78 333 79 291 1 ; 333 79 333 80 18446744073709551615 77 // ModuleExpPtr Module(int32_t line, int32_t column, AccessModifier modifier, 334 1 334 78 18446744073709551615 53 // 					wstring name, vector<DefVarExpPtr> variables, 335 1 335 54 18446744073709551615 40 // 					vector<DefFunExpPtr> functions); 336 1 336 41 18446744073709551615 75 // ClassExpPtr Class(int32_t line, int32_t column, AccessModifier modifier, 337 1 337 76 18446744073709551615 51 // 				  wstring name, vector<DefVarExpPtr> fields, 338 1 338 52 18446744073709551615 39 // 				  vector<DefFunExpPtr> methods); 339 1 339 40 18446744073709551615 9 DotExpPtr 340 1 340 10 31 3 Dot 340 11 340 14 296 1 ( 340 14 340 15 296 7 int32_t 340 15 340 22 69 4 line 340 23 340 27 297 1 , 340 27 340 28 296 7 int32_t 340 29 340 36 69 6 column 340 37 340 43 298 1 , 340 43 340 44 296 6 ExpPtr 340 45 340 51 18 6 object 340 52 340 58 299 1 , 340 58 340 59 296 7 wstring 340 60 340 67 115 4 name 340 68 340 72 300 1 ) 340 72 340 73 296 1 ; 340 73 340 74 18446744073709551615 1 } 341 1 341 2 18446744073709551615 16 // namespace Ast 341 3 341 19 18446744073709551615 7 wstring 343 1 343 8 115 22 ExpressionKindToString 343 9 343 31 301 1 ( 343 31 343 32 301 14 ExpressionKind 343 32 343 46 32 4 kind 343 47 343 51 302 1 ) 343 51 343 52 301 1 ; 343 52 343 53 18446744073709551615 1 # 344 1 344 2 18446744073709551615 5 endif 344 2 344 7 18446744073709551615 17 // EXPRESSION_HPP 344 8 344 25 18446744073709551615 0 0 303 0 0 0 22 0 0 1 3 0 3 std 49 1 3 0 3 any 49 1 3 0 10 shared_ptr 49 1 3 0 6 vector 49 1 3 0 7 wstring 4 1 3 0 10 Expression 4 1 3 0 18 ConstantExpression 4 1 3 0 15 UnaryExpression 4 1 3 0 16 BinaryExpression 4 1 3 0 16 AssignExpression 4 1 3 0 15 BlockExpression 4 1 3 0 16 IfThenExpression 4 1 3 0 20 IfThenElseExpression 4 1 3 0 14 CallExpression 4 1 3 0 18 VariableExpression 4 1 3 0 16 ReturnExpression 4 1 3 0 15 WhileExpression 4 1 3 0 13 DotExpression 36 1 3 0 6 ExpPtr 31 1 3 0 14 shared_ptr:std 36 1 3 0 14 ConstantExpPtr 36 1 3 0 11 UnaryExpPtr 36 1 3 0 12 BinaryExpPtr 36 1 3 0 12 AssignExpPtr 36 1 3 0 11 BlockExpPtr 36 1 3 0 12 IfThenExpPtr 36 1 3 0 16 IfThenElseExpPtr 36 1 3 0 10 CallExpPtr 36 1 3 0 14 VariableExpPtr 36 1 3 0 12 ReturnExpPtr 36 1 3 0 11 WhileExpPtr 36 1 3 0 9 DotExpPtr 5 1 3 0 14 ExpressionKind 7 1 3 0 18 Add:ExpressionKind 7 1 3 0 23 Subtract:ExpressionKind 7 1 3 0 23 Multiply:ExpressionKind 7 1 3 0 21 Divide:ExpressionKind 7 1 3 0 21 Modulo:ExpressionKind 7 1 3 0 26 GreaterThan:ExpressionKind 7 1 3 0 23 LessThan:ExpressionKind 7 1 3 0 33 GreaterThanOrEqual:ExpressionKind 7 1 3 0 30 LessThanOrEqual:ExpressionKind 7 1 3 0 20 Equal:ExpressionKind 7 1 3 0 23 NotEqual:ExpressionKind 7 1 3 0 23 Constant:ExpressionKind 7 1 3 0 24 UnaryPlus:ExpressionKind 7 1 3 0 25 UnaryMinus:ExpressionKind 7 1 3 0 18 And:ExpressionKind 7 1 3 0 17 Or:ExpressionKind 7 1 3 0 18 Not:ExpressionKind 7 1 3 0 21 DefVar:ExpressionKind 7 1 3 0 21 DefFun:ExpressionKind 7 1 3 0 21 IfThen:ExpressionKind 7 1 3 0 25 IfThenElse:ExpressionKind 7 1 3 0 24 Parameter:ExpressionKind 7 1 3 0 23 Variable:ExpressionKind 7 1 3 0 19 Call:ExpressionKind 7 1 3 0 20 Block:ExpressionKind 7 1 3 0 21 Assign:ExpressionKind 7 1 3 0 21 Return:ExpressionKind 7 1 3 0 20 While:ExpressionKind 7 1 3 0 21 Module:ExpressionKind 7 1 3 0 20 Class:ExpressionKind 7 1 3 0 18 Dot:ExpressionKind 5 1 3 0 14 AccessModifier 7 1 3 0 21 Public:AccessModifier 7 1 3 0 22 Private:AccessModifier 7 1 3 0 23 Internal:AccessModifier 7 1 3 0 24 Protected:AccessModifier 20 1 3 0 7 int32_t 6 1 3 0 15 line:Expression 6 1 3 0 17 column:Expression 6 1 3 0 15 kind:Expression 4 1 3 0 4 Type 6 1 3 0 15 type:Expression 6 1 3 0 13 ID:Expression 10 1 3 0 77 104:21:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 104:35:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 104:58:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 4 1 3 0 18 Visitor:Expression 21 1 3 0 24 Visit:Visitor:Expression 10 1 3 0 77 109:42:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 110:39:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 111:40:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 112:40:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 113:39:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 114:40:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 115:44:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 119:38:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 120:42:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 121:40:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 122:39:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 125:37:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 21 1 3 0 17 Accept:Expression 10 1 3 0 77 127:31:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 4 1 3 0 7 any:std 6 1 3 0 24 value:ConstantExpression 10 1 3 0 77 133:29:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 133:43:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 133:55:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 134:23:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 6 1 3 0 23 operand:UnaryExpression 10 1 3 0 77 141:26:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 141:40:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 141:63:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 142:13:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 143:23:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 6 1 3 0 21 left:BinaryExpression 6 1 3 0 22 right:BinaryExpression 10 1 3 0 77 151:27:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 151:41:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 151:64:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 152:14:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 152:27:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 153:23:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 20 1 3 0 19 wstring:__cxx11:std 6 1 3 0 21 name:AssignExpression 6 1 3 0 22 value:AssignExpression 10 1 3 0 77 161:27:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 161:41:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 161:57:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 161:70:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 162:23:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 31 1 3 0 10 vector:std 6 1 3 0 27 expressions:BlockExpression 10 1 3 0 77 169:26:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 169:40:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 169:63:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 170:23:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 6 1 3 0 26 condition:IfThenExpression 6 1 3 0 23 ifTrue:IfThenExpression 10 1 3 0 77 178:27:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 178:41:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 178:56:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 179:14:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 180:23:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 6 1 3 0 30 condition:IfThenElseExpression 6 1 3 0 27 ifTrue:IfThenElseExpression 6 1 3 0 28 ifFalse:IfThenElseExpression 10 1 3 0 77 189:31:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 189:45:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 189:60:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 190:15:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 190:30:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 191:23:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 6 1 3 0 23 function:CallExpression 6 1 3 0 24 arguments:CallExpression 10 1 3 0 77 232:25:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 232:39:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 232:54:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 233:23:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 234:23:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 6 1 3 0 23 name:VariableExpression 10 1 3 0 77 241:29:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 241:43:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 241:59:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 242:23:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 6 1 3 0 22 value:ReturnExpression 10 1 3 0 77 249:27:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 249:41:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 249:56:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 250:23:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 6 1 3 0 25 condition:WhileExpression 6 1 3 0 20 body:WhileExpression 10 1 3 0 77 258:26:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 258:40:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 258:55:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 259:13:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 260:23:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 6 1 3 0 20 object:DotExpression 6 1 3 0 18 name:DotExpression 10 1 3 0 77 292:24:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 292:38:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 292:53:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 292:69:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 293:23:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 22 1 3 0 3 Ast 8 1 3 0 13 UnaryPlus:Ast 10 1 3 0 77 297:31:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 297:45:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 297:60:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 8 1 3 0 14 UnaryMinus:Ast 10 1 3 0 77 298:32:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 298:46:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 298:61:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 8 1 3 0 7 Not:Ast 10 1 3 0 77 299:25:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 299:39:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 299:54:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 8 1 3 0 7 Add:Ast 10 1 3 0 77 300:26:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 300:40:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 300:55:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 300:66:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 8 1 3 0 12 Subtract:Ast 10 1 3 0 77 301:31:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 301:45:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 301:60:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 301:71:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 8 1 3 0 12 Multiply:Ast 10 1 3 0 77 302:31:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 302:45:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 302:60:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 302:71:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 8 1 3 0 10 Divide:Ast 10 1 3 0 77 303:29:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 303:43:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 303:58:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 303:69:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 8 1 3 0 10 Modulo:Ast 10 1 3 0 77 304:29:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 304:43:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 304:58:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 304:69:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 8 1 3 0 15 GreaterThan:Ast 10 1 3 0 77 305:34:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 305:48:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 305:63:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 305:74:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 8 1 3 0 12 LessThan:Ast 10 1 3 0 77 306:31:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 306:45:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 306:60:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 306:71:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 8 1 3 0 22 GreaterThanOrEqual:Ast 10 1 3 0 77 307:41:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 307:55:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 307:70:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 308:16:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 8 1 3 0 19 LessThanOrEqual:Ast 10 1 3 0 77 309:38:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 309:52:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 309:67:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 310:16:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 8 1 3 0 9 Equal:Ast 10 1 3 0 77 311:28:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 311:42:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 311:57:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 311:68:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 8 1 3 0 12 NotEqual:Ast 10 1 3 0 77 312:31:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 312:45:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 312:60:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 312:71:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 8 1 3 0 7 And:Ast 10 1 3 0 77 313:26:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 313:40:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 313:55:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 313:66:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 8 1 3 0 6 Or:Ast 10 1 3 0 77 314:25:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 314:39:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 314:54:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 314:65:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 8 1 3 0 12 Constant:Ast 10 1 3 0 77 315:33:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 315:47:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 315:59:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 8 1 3 0 8 Call:Ast 10 1 3 0 77 321:25:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 321:39:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 321:54:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 322:20:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 8 1 3 0 12 Variable:Ast 10 1 3 0 77 323:33:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 323:47:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 323:63:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 8 1 3 0 9 Block:Ast 10 1 3 0 77 324:27:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 324:41:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 324:64:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 8 1 3 0 10 Assign:Ast 10 1 3 0 77 325:29:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 325:43:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 325:59:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 325:72:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 8 1 3 0 10 IfThen:Ast 10 1 3 0 77 326:29:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 326:43:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 326:58:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 327:13:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 8 1 3 0 14 IfThenElse:Ast 10 1 3 0 77 328:37:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 328:51:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 328:66:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 329:15:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 329:30:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 8 1 3 0 10 Return:Ast 10 1 3 0 77 332:29:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 332:43:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 332:58:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 8 1 3 0 9 While:Ast 10 1 3 0 77 333:27:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 333:41:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 333:56:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 333:74:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 8 1 3 0 7 Dot:Ast 10 1 3 0 77 340:23:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 340:37:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 340:52:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 10 1 3 0 77 340:68:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 8 1 3 0 22 ExpressionKindToString 10 1 3 0 77 343:47:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 0 0 2 0 0 0 70 /home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 1530592503 64 /home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Type.hpp 1530591912