22 serialization::archive 16 0 0 0 0 55 /home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler 61 /home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/build 0 0 437 0 0 0 1 # 1 1 1 2 18446744073709551615 7 include 1 2 1 9 18446744073709551615 23 "ConstantCollector.hpp" 1 10 1 33 18446744073709551615 5 using 2 1 2 6 18446744073709551615 3 std 2 7 2 10 0 2 :: 2 10 2 12 18446744073709551615 8 any_cast 2 12 2 20 1 1 ; 2 20 2 21 18446744073709551615 17 ConstantCollector 3 1 3 18 2 2 :: 3 18 3 20 2 17 ConstantCollector 3 20 3 37 2 1 ( 3 37 3 38 2 1 ) 3 38 3 39 2 1 { 4 1 4 2 18446744073709551615 1 } 5 1 5 2 18446744073709551615 4 void 6 1 6 5 18446744073709551615 17 ConstantCollector 6 6 6 23 2 2 :: 6 23 6 25 3 5 Visit 6 25 6 30 3 1 ( 6 30 6 31 3 18 ConstantExpression 6 31 6 49 4 1 * 6 49 6 50 18446744073709551615 4 node 6 51 6 55 5 1 ) 6 55 6 56 3 1 { 7 1 7 2 18446744073709551615 3 any 8 2 8 5 6 1 & 8 5 8 6 18446744073709551615 5 value 8 7 8 12 7 1 = 8 13 8 14 18446744073709551615 4 node 8 15 8 19 5 2 -> 8 19 8 21 18446744073709551615 5 value 8 21 8 26 8 1 ; 8 26 8 27 18446744073709551615 2 if 9 2 9 4 18446744073709551615 1 ( 9 5 9 6 18446744073709551615 5 value 9 6 9 11 7 1 . 9 11 9 12 9 4 type 9 12 9 16 9 1 ( 9 16 9 17 9 1 ) 9 17 9 18 9 2 == 9 19 9 21 10 6 typeid 9 22 9 28 18446744073709551615 1 ( 9 28 9 29 18446744073709551615 7 wstring 9 29 9 36 11 1 ) 9 36 9 37 18446744073709551615 1 ) 9 37 9 38 18446744073709551615 1 { 10 2 10 3 18446744073709551615 7 wstring 11 3 11 10 11 4 text 11 11 11 15 12 1 = 11 16 11 17 18446744073709551615 8 any_cast 11 18 11 26 13 1 < 11 26 11 27 13 7 wstring 11 27 11 34 11 1 > 11 34 11 35 13 1 ( 11 35 11 36 13 5 value 11 36 11 41 7 1 ) 11 41 11 42 13 1 ; 11 42 11 43 18446744073709551615 4 bool 12 3 12 7 18446744073709551615 5 found 12 8 12 13 14 1 = 12 14 12 15 18446744073709551615 11 stringTable 12 16 12 27 15 1 . 12 27 12 28 16 4 find 12 28 12 32 16 1 ( 12 32 12 33 16 4 text 12 33 12 37 12 1 ) 12 37 12 38 16 2 != 12 39 12 41 17 11 stringTable 12 42 12 53 15 1 . 12 53 12 54 18 3 end 12 54 12 57 18 1 ( 12 57 12 58 18 1 ) 12 58 12 59 18 1 ; 12 59 12 60 18446744073709551615 2 if 13 3 13 5 18446744073709551615 1 ( 13 6 13 7 18446744073709551615 1 ! 13 7 13 8 18446744073709551615 5 found 13 8 13 13 14 1 ) 13 13 13 14 18446744073709551615 1 { 14 3 14 4 18446744073709551615 3 int 15 4 15 7 18446744073709551615 5 index 15 8 15 13 19 1 = 15 14 15 15 18446744073709551615 11 stringTable 15 16 15 27 15 1 . 15 27 15 28 20 4 size 15 28 15 32 20 1 ( 15 32 15 33 20 1 ) 15 33 15 34 20 1 ; 15 34 15 35 18446744073709551615 11 stringTable 16 4 16 15 15 1 . 16 15 16 16 21 6 insert 16 16 16 22 21 1 ( 16 22 16 23 21 1 { 16 23 16 24 22 4 text 16 24 16 28 12 1 , 16 28 16 29 22 5 index 16 30 16 35 19 1 } 16 35 16 36 22 1 ) 16 36 16 37 21 1 ; 16 37 16 38 18446744073709551615 1 } 17 3 17 4 18446744073709551615 1 } 18 2 18 3 18446744073709551615 1 } 19 1 19 2 18446744073709551615 4 void 20 1 20 5 18446744073709551615 17 ConstantCollector 20 6 20 23 2 2 :: 20 23 20 25 3 5 Visit 20 25 20 30 3 1 ( 20 30 20 31 3 15 UnaryExpression 20 31 20 46 23 1 * 20 46 20 47 18446744073709551615 4 node 20 48 20 52 24 1 ) 20 52 20 53 3 1 { 21 1 21 2 18446744073709551615 4 node 22 2 22 6 24 2 -> 22 6 22 8 18446744073709551615 7 operand 22 8 22 15 25 2 -> 22 15 22 17 26 6 Accept 22 17 22 23 26 1 ( 22 23 22 24 26 4 this 22 24 22 28 18446744073709551615 1 ) 22 28 22 29 26 1 ; 22 29 22 30 18446744073709551615 1 } 23 1 23 2 18446744073709551615 4 void 24 1 24 5 18446744073709551615 17 ConstantCollector 24 6 24 23 2 2 :: 24 23 24 25 3 5 Visit 24 25 24 30 3 1 ( 24 30 24 31 3 16 BinaryExpression 24 31 24 47 27 1 * 24 47 24 48 18446744073709551615 4 node 24 49 24 53 28 1 ) 24 53 24 54 3 1 { 25 1 25 2 18446744073709551615 4 node 26 2 26 6 28 2 -> 26 6 26 8 18446744073709551615 4 left 26 8 26 12 29 2 -> 26 12 26 14 26 6 Accept 26 14 26 20 26 1 ( 26 20 26 21 26 4 this 26 21 26 25 18446744073709551615 1 ) 26 25 26 26 26 1 ; 26 26 26 27 18446744073709551615 4 node 27 2 27 6 28 2 -> 27 6 27 8 18446744073709551615 5 right 27 8 27 13 30 2 -> 27 13 27 15 26 6 Accept 27 15 27 21 26 1 ( 27 21 27 22 26 4 this 27 22 27 26 18446744073709551615 1 ) 27 26 27 27 26 1 ; 27 27 27 28 18446744073709551615 1 } 28 1 28 2 18446744073709551615 4 void 29 1 29 5 18446744073709551615 17 ConstantCollector 29 6 29 23 2 2 :: 29 23 29 25 3 5 Visit 29 25 29 30 3 1 ( 29 30 29 31 3 16 AssignExpression 29 31 29 47 31 1 * 29 47 29 48 18446744073709551615 4 node 29 49 29 53 32 1 ) 29 53 29 54 3 1 { 30 1 30 2 18446744073709551615 4 node 31 2 31 6 32 2 -> 31 6 31 8 18446744073709551615 5 value 31 8 31 13 33 2 -> 31 13 31 15 26 6 Accept 31 15 31 21 26 1 ( 31 21 31 22 26 4 this 31 22 31 26 18446744073709551615 1 ) 31 26 31 27 26 1 ; 31 27 31 28 18446744073709551615 1 } 32 1 32 2 18446744073709551615 4 void 33 1 33 5 18446744073709551615 17 ConstantCollector 33 6 33 23 2 2 :: 33 23 33 25 3 5 Visit 33 25 33 30 3 1 ( 33 30 33 31 3 15 BlockExpression 33 31 33 46 34 1 * 33 46 33 47 18446744073709551615 4 node 33 48 33 52 35 1 ) 33 52 33 53 3 1 { 34 1 34 2 18446744073709551615 3 for 35 2 35 5 18446744073709551615 1 ( 35 6 35 7 18446744073709551615 4 auto 35 7 35 11 18446744073709551615 1 & 35 11 35 12 18446744073709551615 1 e 35 13 35 14 36 1 : 35 15 35 16 37 4 node 35 17 35 21 35 2 -> 35 21 35 23 18446744073709551615 11 expressions 35 23 35 34 38 1 ) 35 34 35 35 18446744073709551615 1 { 36 2 36 3 18446744073709551615 1 e 37 3 37 4 36 2 -> 37 4 37 6 26 6 Accept 37 6 37 12 26 1 ( 37 12 37 13 26 4 this 37 13 37 17 18446744073709551615 1 ) 37 17 37 18 26 1 ; 37 18 37 19 18446744073709551615 1 } 38 2 38 3 18446744073709551615 1 } 39 1 39 2 18446744073709551615 4 void 40 1 40 5 18446744073709551615 17 ConstantCollector 40 6 40 23 2 2 :: 40 23 40 25 3 5 Visit 40 25 40 30 3 1 ( 40 30 40 31 3 16 IfThenExpression 40 31 40 47 39 1 * 40 47 40 48 18446744073709551615 4 node 40 49 40 53 40 1 ) 40 53 40 54 3 1 { 41 1 41 2 18446744073709551615 4 node 42 2 42 6 40 2 -> 42 6 42 8 18446744073709551615 9 condition 42 8 42 17 41 2 -> 42 17 42 19 26 6 Accept 42 19 42 25 26 1 ( 42 25 42 26 26 4 this 42 26 42 30 18446744073709551615 1 ) 42 30 42 31 26 1 ; 42 31 42 32 18446744073709551615 4 node 43 2 43 6 40 2 -> 43 6 43 8 18446744073709551615 6 ifTrue 43 8 43 14 42 2 -> 43 14 43 16 26 6 Accept 43 16 43 22 26 1 ( 43 22 43 23 26 4 this 43 23 43 27 18446744073709551615 1 ) 43 27 43 28 26 1 ; 43 28 43 29 18446744073709551615 1 } 44 1 44 2 18446744073709551615 4 void 45 1 45 5 18446744073709551615 17 ConstantCollector 45 6 45 23 2 2 :: 45 23 45 25 3 5 Visit 45 25 45 30 3 1 ( 45 30 45 31 3 20 IfThenElseExpression 45 31 45 51 43 1 * 45 51 45 52 18446744073709551615 4 node 45 53 45 57 44 1 ) 45 57 45 58 3 1 { 46 1 46 2 18446744073709551615 4 node 47 2 47 6 44 2 -> 47 6 47 8 18446744073709551615 9 condition 47 8 47 17 45 2 -> 47 17 47 19 26 6 Accept 47 19 47 25 26 1 ( 47 25 47 26 26 4 this 47 26 47 30 18446744073709551615 1 ) 47 30 47 31 26 1 ; 47 31 47 32 18446744073709551615 4 node 48 2 48 6 44 2 -> 48 6 48 8 18446744073709551615 6 ifTrue 48 8 48 14 46 2 -> 48 14 48 16 26 6 Accept 48 16 48 22 26 1 ( 48 22 48 23 26 4 this 48 23 48 27 18446744073709551615 1 ) 48 27 48 28 26 1 ; 48 28 48 29 18446744073709551615 4 node 49 2 49 6 44 2 -> 49 6 49 8 18446744073709551615 7 ifFalse 49 8 49 15 47 2 -> 49 15 49 17 26 6 Accept 49 17 49 23 26 1 ( 49 23 49 24 26 4 this 49 24 49 28 18446744073709551615 1 ) 49 28 49 29 26 1 ; 49 29 49 30 18446744073709551615 1 } 50 1 50 2 18446744073709551615 4 void 51 1 51 5 18446744073709551615 17 ConstantCollector 51 6 51 23 2 2 :: 51 23 51 25 3 5 Visit 51 25 51 30 3 1 ( 51 30 51 31 3 16 DefVarExpression 51 31 51 47 48 1 * 51 47 51 48 18446744073709551615 4 node 51 49 51 53 49 1 ) 51 53 51 54 3 1 { 52 1 52 2 18446744073709551615 4 node 53 2 53 6 49 2 -> 53 6 53 8 18446744073709551615 5 value 53 8 53 13 50 2 -> 53 13 53 15 26 6 Accept 53 15 53 21 26 1 ( 53 21 53 22 26 4 this 53 22 53 26 18446744073709551615 1 ) 53 26 53 27 26 1 ; 53 27 53 28 18446744073709551615 1 } 54 1 54 2 18446744073709551615 4 void 55 1 55 5 18446744073709551615 17 ConstantCollector 55 6 55 23 2 2 :: 55 23 55 25 3 5 Visit 55 25 55 30 3 1 ( 55 30 55 31 3 16 DefFunExpression 55 31 55 47 51 1 * 55 47 55 48 18446744073709551615 4 node 55 49 55 53 52 1 ) 55 53 55 54 3 1 { 56 1 56 2 18446744073709551615 5 table 57 2 57 7 53 1 . 57 7 57 8 54 3 Put 57 8 57 11 54 1 ( 57 11 57 12 54 4 node 57 12 57 16 52 2 -> 57 16 57 18 18446744073709551615 4 name 57 18 57 22 55 1 , 57 22 57 23 54 6 Symbol 57 24 57 30 56 1 ( 57 30 57 31 56 10 SymbolKind 57 31 57 41 57 2 :: 57 41 57 43 18446744073709551615 14 FunctionSymbol 57 43 57 57 58 1 , 57 57 57 58 56 4 node 57 59 57 63 52 2 -> 57 63 57 65 18446744073709551615 4 type 57 65 57 69 59 1 ) 57 69 57 70 56 1 ) 57 70 57 71 54 1 ; 57 71 57 72 18446744073709551615 4 node 58 2 58 6 52 2 -> 58 6 58 8 18446744073709551615 4 body 58 8 58 12 60 2 -> 58 12 58 14 26 6 Accept 58 14 58 20 26 1 ( 58 20 58 21 26 4 this 58 21 58 25 18446744073709551615 1 ) 58 25 58 26 26 1 ; 58 26 58 27 18446744073709551615 1 } 59 1 59 2 18446744073709551615 4 void 60 1 60 5 18446744073709551615 17 ConstantCollector 60 6 60 23 2 2 :: 60 23 60 25 3 5 Visit 60 25 60 30 3 1 ( 60 30 60 31 3 19 ParameterExpression 60 31 60 50 61 1 * 60 50 60 51 18446744073709551615 1 ) 60 51 60 52 3 1 { 61 1 61 2 18446744073709551615 1 } 62 1 62 2 18446744073709551615 4 void 63 1 63 5 18446744073709551615 17 ConstantCollector 63 6 63 23 2 2 :: 63 23 63 25 3 5 Visit 63 25 63 30 3 1 ( 63 30 63 31 3 14 CallExpression 63 31 63 45 62 1 * 63 45 63 46 18446744073709551615 4 node 63 47 63 51 63 1 ) 63 51 63 52 3 1 { 64 1 64 2 18446744073709551615 4 node 65 2 65 6 63 2 -> 65 6 65 8 18446744073709551615 8 function 65 8 65 16 64 2 -> 65 16 65 18 26 6 Accept 65 18 65 24 26 1 ( 65 24 65 25 26 4 this 65 25 65 29 18446744073709551615 1 ) 65 29 65 30 26 1 ; 65 30 65 31 18446744073709551615 3 for 66 2 66 5 18446744073709551615 1 ( 66 6 66 7 18446744073709551615 4 auto 66 7 66 11 18446744073709551615 1 & 66 11 66 12 18446744073709551615 3 arg 66 13 66 16 65 1 : 66 17 66 18 37 4 node 66 19 66 23 63 2 -> 66 23 66 25 18446744073709551615 9 arguments 66 25 66 34 66 1 ) 66 34 66 35 18446744073709551615 1 { 67 2 67 3 18446744073709551615 3 arg 68 3 68 6 65 2 -> 68 6 68 8 26 6 Accept 68 8 68 14 26 1 ( 68 14 68 15 26 4 this 68 15 68 19 18446744073709551615 1 ) 68 19 68 20 26 1 ; 68 20 68 21 18446744073709551615 1 } 69 2 69 3 18446744073709551615 1 } 70 1 70 2 18446744073709551615 4 void 71 1 71 5 18446744073709551615 17 ConstantCollector 71 6 71 23 2 2 :: 71 23 71 25 3 5 Visit 71 25 71 30 3 1 ( 71 30 71 31 3 18 VariableExpression 71 31 71 49 67 1 * 71 49 71 50 18446744073709551615 1 ) 71 50 71 51 3 1 { 72 1 72 2 18446744073709551615 1 } 73 1 73 2 18446744073709551615 4 void 74 1 74 5 18446744073709551615 17 ConstantCollector 74 6 74 23 2 2 :: 74 23 74 25 3 5 Visit 74 25 74 30 3 1 ( 74 30 74 31 3 16 ReturnExpression 74 31 74 47 68 1 * 74 47 74 48 18446744073709551615 4 node 74 49 74 53 69 1 ) 74 53 74 54 3 1 { 75 1 75 2 18446744073709551615 4 node 76 2 76 6 69 2 -> 76 6 76 8 18446744073709551615 5 value 76 8 76 13 70 2 -> 76 13 76 15 26 6 Accept 76 15 76 21 26 1 ( 76 21 76 22 26 4 this 76 22 76 26 18446744073709551615 1 ) 76 26 76 27 26 1 ; 76 27 76 28 18446744073709551615 1 } 77 1 77 2 18446744073709551615 4 void 78 1 78 5 18446744073709551615 17 ConstantCollector 78 6 78 23 2 2 :: 78 23 78 25 3 5 Visit 78 25 78 30 3 1 ( 78 30 78 31 3 15 WhileExpression 78 31 78 46 71 1 * 78 46 78 47 18446744073709551615 4 node 78 48 78 52 72 1 ) 78 52 78 53 3 1 { 79 1 79 2 18446744073709551615 4 node 80 2 80 6 72 2 -> 80 6 80 8 18446744073709551615 9 condition 80 8 80 17 73 2 -> 80 17 80 19 26 6 Accept 80 19 80 25 26 1 ( 80 25 80 26 26 4 this 80 26 80 30 18446744073709551615 1 ) 80 30 80 31 26 1 ; 80 31 80 32 18446744073709551615 4 node 81 2 81 6 72 2 -> 81 6 81 8 18446744073709551615 4 body 81 8 81 12 74 2 -> 81 12 81 14 26 6 Accept 81 14 81 20 26 1 ( 81 20 81 21 26 4 this 81 21 81 25 18446744073709551615 1 ) 81 25 81 26 26 1 ; 81 26 81 27 18446744073709551615 1 } 82 1 82 2 18446744073709551615 0 0 75 0 0 0 22 0 0 1 3 0 3 std 49 1 3 0 8 any_cast 4 1 3 0 17 ConstantCollector 21 2 3 0 24 Visit:Visitor:Expression 23 Visit:ConstantCollector 4 1 3 0 18 ConstantExpression 10 1 3 0 82 6:51:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/ConstantCollector.cpp 4 1 3 0 7 any:std 9 1 3 0 81 8:7:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/ConstantCollector.cpp 6 1 3 0 24 value:ConstantExpression 21 1 3 0 12 type:any:std 21 1 3 0 24 operator==:type_info:std 20 1 3 0 19 wstring:__cxx11:std 9 1 3 0 83 11:11:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/ConstantCollector.cpp 8 1 3 0 12 any_cast:std 9 1 3 0 82 12:8:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/ConstantCollector.cpp 6 1 3 0 29 stringTable:ConstantCollector 21 1 3 0 22 find:unordered_map:std 8 1 3 0 23 operator!=:__detail:std 21 1 3 0 21 end:unordered_map:std 9 1 3 0 82 15:8:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/ConstantCollector.cpp 21 1 3 0 22 size:unordered_map:std 21 1 3 0 24 insert:unordered_map:std 24 1 3 0 8 pair:std 4 1 3 0 15 UnaryExpression 10 1 3 0 83 20:48:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/ConstantCollector.cpp 6 1 3 0 23 operand:UnaryExpression 21 1 3 0 17 Accept:Expression 4 1 3 0 16 BinaryExpression 10 1 3 0 83 24:49:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/ConstantCollector.cpp 6 1 3 0 21 left:BinaryExpression 6 1 3 0 22 right:BinaryExpression 4 1 3 0 16 AssignExpression 10 1 3 0 83 29:49:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/ConstantCollector.cpp 6 1 3 0 22 value:AssignExpression 4 1 3 0 15 BlockExpression 10 1 3 0 83 33:48:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/ConstantCollector.cpp 9 1 3 0 83 35:13:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/ConstantCollector.cpp 21 1 3 0 37 operator*:__normal_iterator:__gnu_cxx 6 1 3 0 27 expressions:BlockExpression 4 1 3 0 16 IfThenExpression 10 1 3 0 83 40:49:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/ConstantCollector.cpp 6 1 3 0 26 condition:IfThenExpression 6 1 3 0 23 ifTrue:IfThenExpression 4 1 3 0 20 IfThenElseExpression 10 1 3 0 83 45:53:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/ConstantCollector.cpp 6 1 3 0 30 condition:IfThenElseExpression 6 1 3 0 27 ifTrue:IfThenElseExpression 6 1 3 0 28 ifFalse:IfThenElseExpression 4 1 3 0 16 DefVarExpression 10 1 3 0 83 51:49:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/ConstantCollector.cpp 6 1 3 0 22 value:DefVarExpression 4 1 3 0 16 DefFunExpression 10 1 3 0 83 55:49:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/ConstantCollector.cpp 6 1 3 0 23 table:ConstantCollector 21 1 3 0 15 Put:SymbolTable 6 1 3 0 21 name:DefFunExpression 4 1 3 0 6 Symbol 5 1 3 0 10 SymbolKind 7 1 3 0 25 FunctionSymbol:SymbolKind 6 1 3 0 15 type:Expression 6 1 3 0 21 body:DefFunExpression 4 1 3 0 19 ParameterExpression 4 1 3 0 14 CallExpression 10 1 3 0 83 63:47:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/ConstantCollector.cpp 6 1 3 0 23 function:CallExpression 9 1 3 0 83 66:13:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/ConstantCollector.cpp 6 1 3 0 24 arguments:CallExpression 4 1 3 0 18 VariableExpression 4 1 3 0 16 ReturnExpression 10 1 3 0 83 74:49:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/ConstantCollector.cpp 6 1 3 0 22 value:ReturnExpression 4 1 3 0 15 WhileExpression 10 1 3 0 83 78:48:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/ConstantCollector.cpp 6 1 3 0 25 condition:WhileExpression 6 1 3 0 20 body:WhileExpression 0 0 5 0 0 0 77 /home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/ConstantCollector.cpp 1529891855 77 /home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/ConstantCollector.hpp 1529891835 70 /home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 1529891544 71 /home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/SymbolTable.hpp 1529836059 64 /home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Type.hpp 1529762159