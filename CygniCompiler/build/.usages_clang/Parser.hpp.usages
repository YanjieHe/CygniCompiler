22 serialization::archive 16 0 0 0 0 55 /home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler 61 /home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/build 0 0 425 0 0 0 1 # 1 1 1 2 18446744073709551615 6 ifndef 1 2 1 8 18446744073709551615 10 PARSER_HPP 1 9 1 19 18446744073709551615 1 # 2 1 2 2 18446744073709551615 6 define 2 2 2 8 18446744073709551615 10 PARSER_HPP 2 9 2 19 18446744073709551615 1 # 3 1 3 2 18446744073709551615 7 include 3 2 3 9 18446744073709551615 15 "Exception.hpp" 3 10 3 25 18446744073709551615 1 # 4 1 4 2 18446744073709551615 7 include 4 2 4 9 18446744073709551615 16 "Expression.hpp" 4 10 4 26 18446744073709551615 1 # 5 1 5 2 18446744073709551615 7 include 5 2 5 9 18446744073709551615 15 "Namespace.hpp" 5 10 5 25 18446744073709551615 1 # 6 1 6 2 18446744073709551615 7 include 6 2 6 9 18446744073709551615 11 "Token.hpp" 6 10 6 21 18446744073709551615 1 # 7 1 7 2 18446744073709551615 7 include 7 2 7 9 18446744073709551615 1 < 7 10 7 11 18446744073709551615 6 string 7 11 7 17 18446744073709551615 1 > 7 17 7 18 18446744073709551615 1 # 8 1 8 2 18446744073709551615 7 include 8 2 8 9 18446744073709551615 1 < 8 10 8 11 18446744073709551615 6 vector 8 11 8 17 18446744073709551615 1 > 8 17 8 18 18446744073709551615 5 using 9 1 9 6 18446744073709551615 3 std 9 7 9 10 0 2 :: 9 10 9 12 18446744073709551615 6 string 9 12 9 18 1 1 ; 9 18 9 19 18446744073709551615 5 using 10 1 10 6 18446744073709551615 3 std 10 7 10 10 0 2 :: 10 10 10 12 18446744073709551615 6 vector 10 12 10 18 2 1 ; 10 18 10 19 18446744073709551615 5 class 12 1 12 6 18446744073709551615 6 Parser 12 7 12 13 3 1 { 13 1 13 2 18446744073709551615 6 public 14 1 14 7 18446744073709551615 1 : 14 7 14 8 18446744073709551615 6 string 15 2 15 8 3 4 path 15 9 15 13 4 1 ; 15 13 15 14 18446744073709551615 6 vector 16 2 16 8 3 1 < 16 8 16 9 18446744073709551615 5 Token 16 9 16 14 3 1 > 16 14 16 15 18446744073709551615 1 & 16 15 16 16 18446744073709551615 6 tokens 16 17 16 23 5 1 ; 16 23 16 24 18446744073709551615 7 int32_t 17 2 17 9 3 12 tokenPointer 17 10 17 22 6 1 ; 17 22 17 23 18446744073709551615 6 Parser 19 2 19 8 3 1 ( 19 8 19 9 3 6 string 19 9 19 15 7 4 path 19 16 19 20 8 1 , 19 20 19 21 3 6 vector 19 22 19 28 9 1 < 19 28 19 29 18446744073709551615 5 Token 19 29 19 34 10 1 > 19 34 19 35 18446744073709551615 1 & 19 35 19 36 18446744073709551615 6 tokens 19 37 19 43 11 1 ) 19 43 19 44 3 1 ; 19 44 19 45 18446744073709551615 8 CodeFile 21 2 21 10 12 7 Program 21 11 21 18 13 1 ( 21 18 21 19 13 1 ) 21 19 21 20 13 1 ; 21 20 21 21 18446744073709551615 7 private 23 1 23 8 18446744073709551615 1 : 23 8 23 9 18446744073709551615 4 bool 24 2 24 6 18446744073709551615 5 IsEof 24 7 24 12 14 1 ( 24 12 24 13 14 1 ) 24 13 24 14 14 1 ; 24 14 24 15 18446744073709551615 5 Token 25 2 25 7 10 1 & 25 7 25 8 15 4 Look 25 9 25 13 15 1 ( 25 13 25 14 15 1 ) 25 14 25 15 15 1 ; 25 15 25 16 18446744073709551615 4 void 26 2 26 6 18446744073709551615 4 Move 26 7 26 11 16 1 ( 26 11 26 12 16 1 ) 26 12 26 13 16 1 ; 26 13 26 14 18446744073709551615 4 void 27 2 27 6 18446744073709551615 5 Match 27 7 27 12 17 1 ( 27 12 27 13 17 3 Tag 27 13 27 16 18 3 tag 27 17 27 20 19 1 ) 27 20 27 21 17 1 ; 27 21 27 22 18446744073709551615 7 wstring 28 2 28 9 20 15 ParseIdentifier 28 10 28 25 21 1 ( 28 25 28 26 21 1 ) 28 26 28 27 21 1 ; 28 27 28 28 18446744073709551615 14 AccessModifier 29 2 29 16 22 7 ParseAM 29 17 29 24 23 1 ( 29 24 29 25 23 5 Token 29 25 29 30 10 1 & 29 30 29 31 18446744073709551615 5 token 29 32 29 37 24 1 ) 29 37 29 38 23 1 ; 29 38 29 39 18446744073709551615 6 Module 30 2 30 8 25 9 DefModule 30 9 30 18 26 1 ( 30 18 30 19 26 14 AccessModifier 30 19 30 33 22 8 modifier 30 34 30 42 27 1 ) 30 42 30 43 26 1 ; 30 43 30 44 18446744073709551615 5 Class 31 2 31 7 28 8 DefClass 31 8 31 16 29 1 ( 31 16 31 17 29 14 AccessModifier 31 17 31 31 22 8 modifier 31 32 31 40 30 1 ) 31 40 31 41 29 1 ; 31 41 31 42 18446744073709551615 8 Function 32 2 32 10 31 11 DefFunction 32 11 32 22 32 1 ( 32 22 32 23 32 14 AccessModifier 32 23 32 37 22 8 modifier 32 38 32 46 33 1 ) 32 46 32 47 32 1 ; 32 47 32 48 18446744073709551615 9 Parameter 33 2 33 11 34 14 ParseParameter 33 12 33 26 35 1 ( 33 26 33 27 35 1 ) 33 27 33 28 35 1 ; 33 28 33 29 18446744073709551615 13 LocalVariable 34 2 34 15 36 16 DefLocalVariable 34 16 34 32 37 1 ( 34 32 34 33 37 1 ) 34 33 34 34 37 1 ; 34 34 34 35 18446744073709551615 5 Field 35 2 35 7 38 8 DefField 35 8 35 16 39 1 ( 35 16 35 17 39 14 AccessModifier 35 17 35 31 22 8 modifier 35 32 35 40 40 1 ) 35 40 35 41 39 1 ; 35 41 35 42 18446744073709551615 6 ExpPtr 37 2 37 8 41 5 Block 37 9 37 14 42 1 ( 37 14 37 15 42 1 ) 37 15 37 16 42 1 ; 37 16 37 17 18446744073709551615 6 ExpPtr 38 2 38 8 41 2 If 38 9 38 11 43 1 ( 38 11 38 12 43 1 ) 38 12 38 13 43 1 ; 38 13 38 14 18446744073709551615 6 ExpPtr 39 2 39 8 41 5 While 39 9 39 14 44 1 ( 39 14 39 15 44 1 ) 39 15 39 16 44 1 ; 39 16 39 17 18446744073709551615 6 ExpPtr 40 2 40 8 41 6 Return 40 9 40 15 45 1 ( 40 15 40 16 45 1 ) 40 16 40 17 45 1 ; 40 17 40 18 18446744073709551615 6 ExpPtr 41 2 41 8 41 9 Statement 41 9 41 18 46 1 ( 41 18 41 19 46 1 ) 41 19 41 20 46 1 ; 41 20 41 21 18446744073709551615 6 ExpPtr 42 2 42 8 41 6 Assign 42 9 42 15 47 1 ( 42 15 42 16 47 1 ) 42 16 42 17 47 1 ; 42 17 42 18 18446744073709551615 6 ExpPtr 43 2 43 8 41 2 Or 43 9 43 11 48 1 ( 43 11 43 12 48 1 ) 43 12 43 13 48 1 ; 43 13 43 14 18446744073709551615 6 ExpPtr 44 2 44 8 41 3 And 44 9 44 12 49 1 ( 44 12 44 13 49 1 ) 44 13 44 14 49 1 ; 44 14 44 15 18446744073709551615 6 ExpPtr 45 2 45 8 41 8 Equality 45 9 45 17 50 1 ( 45 17 45 18 50 1 ) 45 18 45 19 50 1 ; 45 19 45 20 18446744073709551615 6 ExpPtr 46 2 46 8 41 8 Relation 46 9 46 17 51 1 ( 46 17 46 18 51 1 ) 46 18 46 19 51 1 ; 46 19 46 20 18446744073709551615 6 ExpPtr 47 2 47 8 41 4 Expr 47 9 47 13 52 1 ( 47 13 47 14 52 1 ) 47 14 47 15 52 1 ; 47 15 47 16 18446744073709551615 6 ExpPtr 48 2 48 8 41 4 Term 48 9 48 13 53 1 ( 48 13 48 14 53 1 ) 48 14 48 15 53 1 ; 48 15 48 16 18446744073709551615 6 ExpPtr 49 2 49 8 41 5 Unary 49 9 49 14 54 1 ( 49 14 49 15 54 1 ) 49 15 49 16 54 1 ; 49 16 49 17 18446744073709551615 6 ExpPtr 50 2 50 8 41 7 Postfix 50 9 50 16 55 1 ( 50 16 50 17 55 1 ) 50 17 50 18 55 1 ; 50 18 50 19 18446744073709551615 6 ExpPtr 51 2 51 8 41 6 Factor 51 9 51 15 56 1 ( 51 15 51 16 56 1 ) 51 16 51 17 56 1 ; 51 17 51 18 18446744073709551615 4 Type 52 2 52 6 57 9 ParseType 52 7 52 16 58 1 ( 52 16 52 17 58 1 ) 52 17 52 18 58 1 ; 52 18 52 19 18446744073709551615 8 TypeKind 53 2 53 10 59 13 ParseTypeKind 53 11 53 24 60 1 ( 53 24 53 25 60 7 wstring 53 25 53 32 20 4 text 53 33 53 37 61 1 ) 53 37 53 38 60 1 ; 53 38 53 39 18446744073709551615 6 vector 54 2 54 8 9 1 < 54 8 54 9 62 7 wstring 54 9 54 16 20 1 > 54 16 54 17 62 14 ParseNamespace 54 18 54 32 62 1 ( 54 32 54 33 62 1 ) 54 33 54 34 62 1 ; 54 34 54 35 18446744073709551615 1 } 55 1 55 2 18446744073709551615 1 ; 55 2 55 3 18446744073709551615 6 inline 56 1 56 7 18446744073709551615 4 bool 56 8 56 12 18446744073709551615 6 Parser 56 13 56 19 3 2 :: 56 19 56 21 14 5 IsEof 56 21 56 26 14 1 ( 56 26 56 27 14 1 ) 56 27 56 28 14 1 { 57 1 57 2 18446744073709551615 6 return 58 2 58 8 18446744073709551615 4 Look 58 9 58 13 15 1 ( 58 13 58 14 15 1 ) 58 14 58 15 15 1 . 58 15 58 16 18446744073709551615 3 tag 58 16 58 19 63 2 == 58 20 58 22 18446744073709551615 3 Tag 58 23 58 26 18 2 :: 58 26 58 28 18446744073709551615 3 Eof 58 28 58 31 64 1 ; 58 31 58 32 18446744073709551615 1 } 59 1 59 2 18446744073709551615 6 inline 60 1 60 7 18446744073709551615 5 Token 60 8 60 13 10 1 & 60 13 60 14 15 6 Parser 60 15 60 21 3 2 :: 60 21 60 23 15 4 Look 60 23 60 27 15 1 ( 60 27 60 28 15 1 ) 60 28 60 29 15 1 { 61 1 61 2 18446744073709551615 6 return 62 2 62 8 18446744073709551615 6 tokens 62 9 62 15 5 1 . 62 15 62 16 65 2 at 62 16 62 18 65 1 ( 62 18 62 19 65 12 tokenPointer 62 19 62 31 6 1 ) 62 31 62 32 65 1 ; 62 32 62 33 18446744073709551615 1 } 63 1 63 2 18446744073709551615 6 inline 64 1 64 7 18446744073709551615 4 void 64 8 64 12 18446744073709551615 6 Parser 64 13 64 19 3 2 :: 64 19 64 21 16 4 Move 64 21 64 25 16 1 ( 64 25 64 26 16 1 ) 64 26 64 27 16 1 { 65 1 65 2 18446744073709551615 7 int32_t 66 2 66 9 66 1 n 66 10 66 11 67 1 = 66 12 66 13 18446744073709551615 6 tokens 66 14 66 20 5 1 . 66 20 66 21 68 4 size 66 21 66 25 68 1 ( 66 25 66 26 68 1 ) 66 26 66 27 68 1 - 66 28 66 29 18446744073709551615 1 1 66 30 66 31 18446744073709551615 1 ; 66 31 66 32 18446744073709551615 2 if 67 2 67 4 18446744073709551615 1 ( 67 5 67 6 18446744073709551615 12 tokenPointer 67 6 67 18 6 1 < 67 19 67 20 18446744073709551615 1 n 67 21 67 22 67 1 ) 67 22 67 23 18446744073709551615 1 { 68 2 68 3 18446744073709551615 12 tokenPointer 69 3 69 15 6 2 ++ 69 15 69 17 18446744073709551615 1 ; 69 17 69 18 18446744073709551615 1 } 70 2 70 3 18446744073709551615 4 else 71 2 71 6 18446744073709551615 1 { 72 2 72 3 18446744073709551615 5 throw 73 3 73 8 18446744073709551615 15 SyntaxException 73 9 73 24 69 1 ( 73 24 73 25 69 4 Look 73 25 73 29 15 1 ( 73 29 73 30 15 1 ) 73 30 73 31 15 1 . 73 31 73 32 18446744073709551615 4 line 73 32 73 36 70 1 , 73 36 73 37 69 4 Look 73 38 73 42 15 1 ( 73 42 73 43 15 1 ) 73 43 73 44 15 1 . 73 44 73 45 18446744073709551615 6 column 73 45 73 51 71 1 , 73 51 73 52 69 17 L"unexpected EOF" 73 53 73 70 18446744073709551615 1 ) 73 70 73 71 69 1 ; 73 71 73 72 18446744073709551615 1 } 74 2 74 3 18446744073709551615 1 } 75 1 75 2 18446744073709551615 6 inline 76 1 76 7 18446744073709551615 4 void 76 8 76 12 18446744073709551615 6 Parser 76 13 76 19 3 2 :: 76 19 76 21 17 5 Match 76 21 76 26 17 1 ( 76 26 76 27 17 3 Tag 76 27 76 30 18 3 tag 76 31 76 34 72 1 ) 76 34 76 35 17 1 { 77 1 77 2 18446744073709551615 2 if 78 2 78 4 18446744073709551615 1 ( 78 5 78 6 18446744073709551615 4 Look 78 6 78 10 15 1 ( 78 10 78 11 15 1 ) 78 11 78 12 15 1 . 78 12 78 13 18446744073709551615 3 tag 78 13 78 16 63 2 == 78 17 78 19 18446744073709551615 3 tag 78 20 78 23 72 1 ) 78 23 78 24 18446744073709551615 1 { 79 2 79 3 18446744073709551615 4 Move 80 3 80 7 16 1 ( 80 7 80 8 16 1 ) 80 8 80 9 16 1 ; 80 9 80 10 18446744073709551615 1 } 81 2 81 3 18446744073709551615 4 else 82 2 82 6 18446744073709551615 1 { 83 2 83 3 18446744073709551615 5 throw 84 3 84 8 18446744073709551615 15 SyntaxException 84 9 84 24 69 1 ( 84 24 84 25 69 4 Look 84 25 84 29 15 1 ( 84 29 84 30 15 1 ) 84 30 84 31 15 1 . 84 31 84 32 18446744073709551615 4 line 84 32 84 36 70 1 , 84 36 84 37 69 4 Look 84 38 84 42 15 1 ( 84 42 84 43 15 1 ) 84 43 84 44 15 1 . 84 44 84 45 18446744073709551615 6 column 84 45 84 51 71 1 , 84 51 84 52 69 15 L"syntax error" 84 53 84 68 18446744073709551615 1 ) 84 68 84 69 69 1 ; 84 69 84 70 18446744073709551615 1 } 85 2 85 3 18446744073709551615 1 } 86 1 86 2 18446744073709551615 6 inline 87 1 87 7 18446744073709551615 7 wstring 87 8 87 15 20 6 Parser 87 16 87 22 3 2 :: 87 22 87 24 21 15 ParseIdentifier 87 24 87 39 21 1 ( 87 39 87 40 21 1 ) 87 40 87 41 21 1 { 88 1 88 2 18446744073709551615 5 Token 89 2 89 7 10 1 & 89 7 89 8 18446744073709551615 5 token 89 9 89 14 73 1 = 89 15 89 16 18446744073709551615 4 Look 89 17 89 21 15 1 ( 89 21 89 22 15 1 ) 89 22 89 23 15 1 ; 89 23 89 24 18446744073709551615 5 Match 90 2 90 7 17 1 ( 90 7 90 8 17 3 Tag 90 8 90 11 18 2 :: 90 11 90 13 18446744073709551615 10 Identifier 90 13 90 23 74 1 ) 90 23 90 24 17 1 ; 90 24 90 25 18446744073709551615 6 return 91 2 91 8 18446744073709551615 3 std 91 9 91 12 0 2 :: 91 12 91 14 75 8 any_cast 91 14 91 22 75 1 < 91 22 91 23 75 7 wstring 91 23 91 30 20 1 > 91 30 91 31 75 1 ( 91 31 91 32 75 5 token 91 32 91 37 73 1 . 91 37 91 38 18446744073709551615 5 value 91 38 91 43 76 1 ) 91 43 91 44 75 1 ; 91 44 91 45 18446744073709551615 1 } 92 1 92 2 18446744073709551615 1 # 93 1 93 2 18446744073709551615 5 endif 93 2 93 7 18446744073709551615 13 // PARSER_HPP 93 8 93 21 18446744073709551615 0 0 77 0 0 0 22 0 0 1 3 0 3 std 49 1 3 0 6 string 49 1 3 0 6 vector 4 1 3 0 6 Parser 6 1 3 0 11 path:Parser 6 1 3 0 13 tokens:Parser 6 1 3 0 19 tokenPointer:Parser 20 1 3 0 18 string:__cxx11:std 10 1 3 0 72 19:16:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Parser.hpp 31 1 3 0 10 vector:std 4 1 3 0 5 Token 10 1 3 0 72 19:37:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Parser.hpp 4 1 3 0 8 CodeFile 21 1 3 0 14 Program:Parser 21 1 3 0 12 IsEof:Parser 21 1 3 0 11 Look:Parser 21 1 3 0 11 Move:Parser 21 1 3 0 12 Match:Parser 5 1 3 0 3 Tag 10 1 3 0 72 27:17:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Parser.hpp 20 1 3 0 19 wstring:__cxx11:std 21 1 3 0 22 ParseIdentifier:Parser 5 1 3 0 14 AccessModifier 21 1 3 0 14 ParseAM:Parser 10 1 3 0 72 29:32:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Parser.hpp 4 1 3 0 6 Module 21 1 3 0 16 DefModule:Parser 10 1 3 0 72 30:34:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Parser.hpp 4 1 3 0 5 Class 21 1 3 0 15 DefClass:Parser 10 1 3 0 72 31:32:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Parser.hpp 4 1 3 0 8 Function 21 1 3 0 18 DefFunction:Parser 10 1 3 0 72 32:38:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Parser.hpp 4 1 3 0 9 Parameter 21 1 3 0 21 ParseParameter:Parser 4 1 3 0 13 LocalVariable 21 1 3 0 23 DefLocalVariable:Parser 4 1 3 0 5 Field 21 1 3 0 15 DefField:Parser 10 1 3 0 72 35:32:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Parser.hpp 36 1 3 0 6 ExpPtr 21 1 3 0 12 Block:Parser 21 1 3 0 9 If:Parser 21 1 3 0 12 While:Parser 21 1 3 0 13 Return:Parser 21 1 3 0 16 Statement:Parser 21 1 3 0 13 Assign:Parser 21 1 3 0 9 Or:Parser 21 1 3 0 10 And:Parser 21 1 3 0 15 Equality:Parser 21 1 3 0 15 Relation:Parser 21 1 3 0 11 Expr:Parser 21 1 3 0 11 Term:Parser 21 1 3 0 12 Unary:Parser 21 1 3 0 14 Postfix:Parser 21 1 3 0 13 Factor:Parser 4 1 3 0 4 Type 21 1 3 0 16 ParseType:Parser 5 1 3 0 8 TypeKind 21 1 3 0 20 ParseTypeKind:Parser 10 1 3 0 72 53:33:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Parser.hpp 21 1 3 0 21 ParseNamespace:Parser 6 1 3 0 9 tag:Token 7 1 3 0 7 Eof:Tag 21 1 3 0 13 at:vector:std 20 1 3 0 7 int32_t 9 1 3 0 72 66:10:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Parser.hpp 21 1 3 0 15 size:vector:std 4 1 3 0 15 SyntaxException 6 1 3 0 10 line:Token 6 1 3 0 12 column:Token 10 1 3 0 72 76:31:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Parser.hpp 9 1 3 0 71 89:9:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Parser.hpp 7 1 3 0 14 Identifier:Tag 8 1 3 0 12 any_cast:std 6 1 3 0 11 value:Token 0 0 1 0 0 0 66 /home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Parser.hpp 1530953732