22 serialization::archive 16 0 0 0 0 55 /home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler 61 /home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/build 0 0 2181 0 0 0 1 # 1 1 1 2 18446744073709551615 7 include 1 2 1 9 18446744073709551615 16 "Expression.hpp" 1 10 1 26 18446744073709551615 5 using 2 1 2 6 18446744073709551615 3 std 2 7 2 10 0 2 :: 2 10 2 12 18446744073709551615 11 make_shared 2 12 2 23 1 1 ; 2 23 2 24 18446744073709551615 10 Expression 3 1 3 11 2 2 :: 3 11 3 13 2 10 Expression 3 13 3 23 2 1 ( 3 23 3 24 2 7 int32_t 3 24 3 31 3 4 line 3 32 3 36 4 1 , 3 36 3 37 2 7 int32_t 3 38 3 45 3 6 column 3 46 3 52 5 1 , 3 52 3 53 2 14 ExpressionKind 3 54 3 68 6 4 kind 3 69 3 73 7 1 ) 3 73 3 74 2 1 : 4 2 4 3 2 4 line 4 4 4 8 8 1 { 4 8 4 9 18446744073709551615 4 line 4 9 4 13 4 1 } 4 13 4 14 18446744073709551615 1 , 5 2 5 3 2 6 column 5 4 5 10 9 1 ( 5 10 5 11 2 6 column 5 11 5 17 5 1 ) 5 17 5 18 2 1 , 6 2 6 3 2 4 kind 6 4 6 8 10 1 { 6 8 6 9 18446744073709551615 4 kind 6 9 6 13 7 1 } 6 13 6 14 18446744073709551615 1 { 7 1 7 2 18446744073709551615 1 } 8 1 8 2 18446744073709551615 18 ConstantExpression 9 1 9 19 11 2 :: 9 19 9 21 11 18 ConstantExpression 9 21 9 39 11 1 ( 9 39 9 40 11 7 int32_t 9 40 9 47 3 4 line 9 48 9 52 12 1 , 9 52 9 53 11 7 int32_t 9 54 9 61 3 6 column 9 62 9 68 13 1 , 9 68 9 69 11 3 any 9 70 9 73 14 5 value 9 74 9 79 15 1 ) 9 79 9 80 11 1 : 10 2 10 3 11 10 Expression 10 4 10 14 2 1 ( 10 14 10 15 2 4 line 10 15 10 19 12 1 , 10 19 10 20 2 6 column 10 21 10 27 13 1 , 10 27 10 28 2 14 ExpressionKind 10 29 10 43 6 2 :: 10 43 10 45 18446744073709551615 8 Constant 10 45 10 53 16 1 ) 10 53 10 54 2 1 , 11 2 11 3 11 5 value 11 4 11 9 17 1 { 11 9 11 10 14 5 value 11 10 11 15 15 1 } 11 15 11 16 14 1 { 12 1 12 2 18446744073709551615 1 } 13 1 13 2 18446744073709551615 15 UnaryExpression 15 1 15 16 18 2 :: 15 16 15 18 18 15 UnaryExpression 15 18 15 33 18 1 ( 15 33 15 34 18 7 int32_t 15 34 15 41 3 4 line 15 42 15 46 19 1 , 15 46 15 47 18 7 int32_t 15 48 15 55 3 6 column 15 56 15 62 20 1 , 15 62 15 63 18 14 ExpressionKind 16 10 16 24 6 4 kind 16 25 16 29 21 1 , 16 29 16 30 18 6 ExpPtr 16 31 16 37 22 7 operand 16 38 16 45 23 1 ) 16 45 16 46 18 1 : 17 2 17 3 18 10 Expression 17 4 17 14 2 1 ( 17 14 17 15 2 4 line 17 15 17 19 19 1 , 17 19 17 20 2 6 column 17 21 17 27 20 1 , 17 27 17 28 2 4 kind 17 29 17 33 21 1 ) 17 33 17 34 2 1 , 18 2 18 3 18 7 operand 18 4 18 11 24 1 { 18 11 18 12 25 7 operand 18 12 18 19 23 1 } 18 19 18 20 25 1 { 19 1 19 2 18446744073709551615 1 } 20 1 20 2 18446744073709551615 16 BinaryExpression 22 1 22 17 26 2 :: 22 17 22 19 26 16 BinaryExpression 22 19 22 35 26 1 ( 22 35 22 36 26 7 int32_t 22 36 22 43 3 4 line 22 44 22 48 27 1 , 22 48 22 49 26 7 int32_t 22 50 22 57 3 6 column 22 58 22 64 28 1 , 22 64 22 65 26 14 ExpressionKind 23 12 23 26 6 4 kind 23 27 23 31 29 1 , 23 31 23 32 26 6 ExpPtr 23 33 23 39 22 4 left 23 40 23 44 30 1 , 23 44 23 45 26 6 ExpPtr 24 12 24 18 22 5 right 24 19 24 24 31 1 ) 24 24 24 25 26 1 : 25 2 25 3 26 10 Expression 25 4 25 14 2 1 ( 25 14 25 15 2 4 line 25 15 25 19 27 1 , 25 19 25 20 2 6 column 25 21 25 27 28 1 , 25 27 25 28 2 4 kind 25 29 25 33 29 1 ) 25 33 25 34 2 1 , 26 2 26 3 26 4 left 26 4 26 8 32 1 { 26 8 26 9 25 4 left 26 9 26 13 30 1 } 26 13 26 14 25 1 , 27 2 27 3 26 5 right 27 4 27 9 33 1 { 27 9 27 10 25 5 right 27 10 27 15 31 1 } 27 15 27 16 25 1 { 28 1 28 2 18446744073709551615 1 } 29 1 29 2 18446744073709551615 16 AssignExpression 31 1 31 17 34 2 :: 31 17 31 19 34 16 AssignExpression 31 19 31 35 34 1 ( 31 35 31 36 34 7 int32_t 31 36 31 43 3 4 line 31 44 31 48 35 1 , 31 48 31 49 34 7 int32_t 31 50 31 57 3 6 column 31 58 31 64 36 1 , 31 64 31 65 34 7 wstring 31 66 31 73 37 4 name 31 74 31 78 38 1 , 31 78 31 79 34 6 ExpPtr 32 12 32 18 22 5 value 32 19 32 24 39 1 ) 32 24 32 25 34 1 : 33 2 33 3 34 10 Expression 33 4 33 14 2 1 ( 33 14 33 15 2 4 line 33 15 33 19 35 1 , 33 19 33 20 2 6 column 33 21 33 27 36 1 , 33 27 33 28 2 14 ExpressionKind 33 29 33 43 6 2 :: 33 43 33 45 18446744073709551615 6 Assign 33 45 33 51 40 1 ) 33 51 33 52 2 1 , 34 2 34 3 34 4 name 34 4 34 8 41 1 { 34 8 34 9 42 4 name 34 9 34 13 38 1 } 34 13 34 14 42 1 , 35 2 35 3 34 5 value 35 4 35 9 43 1 { 35 9 35 10 25 5 value 35 10 35 15 39 1 } 35 15 35 16 25 1 { 36 1 36 2 18446744073709551615 1 } 37 1 37 2 18446744073709551615 15 BlockExpression 39 1 39 16 44 2 :: 39 16 39 18 44 15 BlockExpression 39 18 39 33 44 1 ( 39 33 39 34 44 7 int32_t 39 34 39 41 3 4 line 39 42 39 46 45 1 , 39 46 39 47 44 7 int32_t 39 48 39 55 3 6 column 39 56 39 62 46 1 , 39 62 39 63 44 6 vector 40 10 40 16 47 1 < 40 16 40 17 18446744073709551615 6 ExpPtr 40 17 40 23 22 1 > 40 23 40 24 18446744073709551615 11 expressions 40 25 40 36 48 1 ) 40 36 40 37 44 1 : 41 2 41 3 44 10 Expression 41 4 41 14 2 1 ( 41 14 41 15 2 4 line 41 15 41 19 45 1 , 41 19 41 20 2 6 column 41 21 41 27 46 1 , 41 27 41 28 2 14 ExpressionKind 41 29 41 43 6 2 :: 41 43 41 45 18446744073709551615 5 Block 41 45 41 50 49 1 ) 41 50 41 51 2 1 , 42 2 42 3 44 11 expressions 42 4 42 15 50 1 { 42 15 42 16 47 11 expressions 42 16 42 27 48 1 } 42 27 42 28 47 1 { 43 1 43 2 18446744073709551615 1 } 44 1 44 2 18446744073709551615 16 IfThenExpression 46 1 46 17 51 2 :: 46 17 46 19 51 16 IfThenExpression 46 19 46 35 51 1 ( 46 35 46 36 51 7 int32_t 46 36 46 43 3 4 line 46 44 46 48 52 1 , 46 48 46 49 51 7 int32_t 46 50 46 57 3 6 column 46 58 46 64 53 1 , 46 64 46 65 51 6 ExpPtr 47 12 47 18 22 9 condition 47 19 47 28 54 1 , 47 28 47 29 51 6 ExpPtr 47 30 47 36 22 6 ifTrue 47 37 47 43 55 1 ) 47 43 47 44 51 1 : 48 2 48 3 51 10 Expression 48 4 48 14 2 1 ( 48 14 48 15 2 4 line 48 15 48 19 52 1 , 48 19 48 20 2 6 column 48 21 48 27 53 1 , 48 27 48 28 2 14 ExpressionKind 48 29 48 43 6 2 :: 48 43 48 45 18446744073709551615 6 IfThen 48 45 48 51 56 1 ) 48 51 48 52 2 1 , 49 2 49 3 51 9 condition 49 4 49 13 57 1 { 49 13 49 14 25 9 condition 49 14 49 23 54 1 } 49 23 49 24 25 1 , 50 2 50 3 51 6 ifTrue 50 4 50 10 58 1 { 50 10 50 11 25 6 ifTrue 50 11 50 17 55 1 } 50 17 50 18 25 1 { 51 1 51 2 18446744073709551615 1 } 52 1 52 2 18446744073709551615 20 IfThenElseExpression 54 1 54 21 59 2 :: 54 21 54 23 59 20 IfThenElseExpression 54 23 54 43 59 1 ( 54 43 54 44 59 7 int32_t 54 44 54 51 3 4 line 54 52 54 56 60 1 , 54 56 54 57 59 7 int32_t 54 58 54 65 3 6 column 54 66 54 72 61 1 , 54 72 54 73 59 6 ExpPtr 55 14 55 20 22 9 condition 55 21 55 30 62 1 , 55 30 55 31 59 6 ExpPtr 55 32 55 38 22 6 ifTrue 55 39 55 45 63 1 , 55 45 55 46 59 6 ExpPtr 56 14 56 20 22 7 ifFalse 56 21 56 28 64 1 ) 56 28 56 29 59 1 : 57 2 57 3 59 10 Expression 57 4 57 14 2 1 ( 57 14 57 15 2 4 line 57 15 57 19 60 1 , 57 19 57 20 2 6 column 57 21 57 27 61 1 , 57 27 57 28 2 14 ExpressionKind 57 29 57 43 6 2 :: 57 43 57 45 18446744073709551615 10 IfThenElse 57 45 57 55 65 1 ) 57 55 57 56 2 1 , 58 2 58 3 59 9 condition 58 4 58 13 66 1 { 58 13 58 14 25 9 condition 58 14 58 23 62 1 } 58 23 58 24 25 1 , 59 2 59 3 59 6 ifTrue 59 4 59 10 67 1 { 59 10 59 11 25 6 ifTrue 59 11 59 17 63 1 } 59 17 59 18 25 1 , 60 2 60 3 59 7 ifFalse 60 4 60 11 68 1 { 60 11 60 12 25 7 ifFalse 60 12 60 19 64 1 } 60 19 60 20 25 1 { 61 1 61 2 18446744073709551615 1 } 62 1 62 2 18446744073709551615 16 DefVarExpression 64 1 64 17 69 2 :: 64 17 64 19 69 16 DefVarExpression 64 19 64 35 69 1 ( 64 35 64 36 69 7 int32_t 64 36 64 43 3 4 line 64 44 64 48 70 1 , 64 48 64 49 69 7 int32_t 64 50 64 57 3 6 column 64 58 64 64 71 1 , 64 64 64 65 69 7 wstring 64 66 64 73 37 4 name 64 74 64 78 72 1 , 64 78 64 79 69 4 Type 65 12 65 16 73 4 type 65 17 65 21 74 1 , 65 21 65 22 69 6 ExpPtr 65 23 65 29 22 5 value 65 30 65 35 75 1 ) 65 35 65 36 69 1 : 66 2 66 3 69 10 Expression 66 4 66 14 2 1 ( 66 14 66 15 2 4 line 66 15 66 19 70 1 , 66 19 66 20 2 6 column 66 21 66 27 71 1 , 66 27 66 28 2 14 ExpressionKind 66 29 66 43 6 2 :: 66 43 66 45 18446744073709551615 6 DefVar 66 45 66 51 76 1 ) 66 51 66 52 2 1 , 67 2 67 3 69 4 name 67 4 67 8 77 1 { 67 8 67 9 42 4 name 67 9 67 13 72 1 } 67 13 67 14 42 1 , 68 2 68 3 69 5 value 68 4 68 9 78 1 { 68 9 68 10 25 5 value 68 10 68 15 75 1 } 68 15 68 16 25 1 { 69 1 69 2 18446744073709551615 4 this 70 2 70 6 18446744073709551615 2 -> 70 6 70 8 18446744073709551615 4 type 70 8 70 12 79 1 = 70 13 70 14 80 4 type 70 15 70 19 74 1 ; 70 19 70 20 18446744073709551615 1 } 71 1 71 2 18446744073709551615 16 DefFunExpression 73 1 73 17 81 2 :: 73 17 73 19 81 16 DefFunExpression 73 19 73 35 81 1 ( 73 35 73 36 81 7 int32_t 73 36 73 43 3 4 line 73 44 73 48 82 1 , 73 48 73 49 81 7 int32_t 73 50 73 57 3 6 column 73 58 73 64 83 1 , 73 64 73 65 81 7 wstring 73 66 73 73 37 4 name 73 74 73 78 84 1 , 73 78 73 79 81 6 vector 74 12 74 18 47 1 < 74 18 74 19 18446744073709551615 15 ParameterExpPtr 74 19 74 34 85 1 > 74 34 74 35 18446744073709551615 10 parameters 74 36 74 46 86 1 , 74 46 74 47 81 6 ExpPtr 75 12 75 18 22 4 body 75 19 75 23 87 1 , 75 23 75 24 81 4 Type 75 25 75 29 73 10 returnType 75 30 75 40 88 1 ) 75 40 75 41 81 1 : 76 2 76 3 81 10 Expression 76 4 76 14 2 1 ( 76 14 76 15 2 4 line 76 15 76 19 82 1 , 76 19 76 20 2 6 column 76 21 76 27 83 1 , 76 27 76 28 2 14 ExpressionKind 76 29 76 43 6 2 :: 76 43 76 45 18446744073709551615 6 DefFun 76 45 76 51 89 1 ) 76 51 76 52 2 1 , 77 2 77 3 81 4 name 77 4 77 8 90 1 { 77 8 77 9 42 4 name 77 9 77 13 84 1 } 77 13 77 14 42 1 , 78 2 78 3 81 10 parameters 78 4 78 14 91 1 { 78 14 78 15 47 10 parameters 78 15 78 25 86 1 } 78 25 78 26 47 1 , 79 2 79 3 81 4 body 79 4 79 8 92 1 { 79 8 79 9 25 4 body 79 9 79 13 87 1 } 79 13 79 14 25 1 , 80 2 80 3 81 10 returnType 80 4 80 14 93 1 { 80 14 80 15 73 10 returnType 80 15 80 25 88 1 } 80 25 80 26 73 1 { 81 1 81 2 18446744073709551615 6 vector 82 2 82 8 47 1 < 82 8 82 9 18446744073709551615 4 Type 82 9 82 13 73 1 > 82 13 82 14 18446744073709551615 5 types 82 15 82 20 94 1 ; 82 20 82 21 18446744073709551615 5 types 83 2 83 7 94 1 . 83 7 83 8 95 7 reserve 83 8 83 15 95 1 ( 83 15 83 16 95 10 parameters 83 16 83 26 86 1 . 83 26 83 27 96 4 size 83 27 83 31 96 1 ( 83 31 83 32 96 1 ) 83 32 83 33 96 1 ) 83 33 83 34 95 1 ; 83 34 83 35 18446744073709551615 3 for 84 2 84 5 18446744073709551615 1 ( 84 6 84 7 18446744073709551615 15 ParameterExpPtr 84 7 84 22 85 1 & 84 22 84 23 18446744073709551615 1 p 84 24 84 25 97 1 : 84 26 84 27 98 10 parameters 84 28 84 38 86 1 ) 84 38 84 39 18446744073709551615 1 { 85 2 85 3 18446744073709551615 5 types 86 3 86 8 94 1 . 86 8 86 9 99 9 push_back 86 9 86 18 99 1 ( 86 18 86 19 99 1 p 86 19 86 20 97 2 -> 86 20 86 22 18446744073709551615 4 type 86 22 86 26 79 1 ) 86 26 86 27 99 1 ; 86 27 86 28 18446744073709551615 1 } 87 2 87 3 18446744073709551615 5 types 88 2 88 7 94 1 . 88 7 88 8 99 9 push_back 88 8 88 17 99 1 ( 88 17 88 18 99 10 returnType 88 18 88 28 88 1 ) 88 28 88 29 99 1 ; 88 29 88 30 18446744073709551615 4 this 89 2 89 6 18446744073709551615 2 -> 89 6 89 8 18446744073709551615 4 type 89 8 89 12 79 1 = 89 13 89 14 80 4 Type 89 15 89 19 73 1 ( 89 19 89 20 73 11 L"Function" 89 20 89 31 18446744073709551615 1 , 89 31 89 32 73 5 types 89 33 89 38 94 1 ) 89 38 89 39 73 1 ; 89 39 89 40 18446744073709551615 1 } 90 1 90 2 18446744073709551615 19 ParameterExpression 91 1 91 20 100 2 :: 91 20 91 22 100 19 ParameterExpression 91 22 91 41 100 1 ( 91 41 91 42 100 7 int32_t 91 42 91 49 3 4 line 91 50 91 54 101 1 , 91 54 91 55 100 7 int32_t 91 56 91 63 3 6 column 91 64 91 70 102 1 , 91 70 91 71 100 7 wstring 92 12 92 19 37 4 name 92 20 92 24 103 1 , 92 24 92 25 100 4 Type 92 26 92 30 73 4 type 92 31 92 35 104 1 ) 92 35 92 36 100 1 : 93 2 93 3 100 10 Expression 93 4 93 14 2 1 ( 93 14 93 15 2 4 line 93 15 93 19 101 1 , 93 19 93 20 2 6 column 93 21 93 27 102 1 , 93 27 93 28 2 14 ExpressionKind 93 29 93 43 6 2 :: 93 43 93 45 18446744073709551615 9 Parameter 93 45 93 54 105 1 ) 93 54 93 55 2 1 , 94 2 94 3 100 4 name 94 4 94 8 106 1 { 94 8 94 9 42 4 name 94 9 94 13 103 1 } 94 13 94 14 42 1 { 95 1 95 2 18446744073709551615 4 this 96 2 96 6 18446744073709551615 2 -> 96 6 96 8 18446744073709551615 4 type 96 8 96 12 79 1 = 96 13 96 14 80 4 type 96 15 96 19 104 1 ; 96 19 96 20 18446744073709551615 1 } 97 1 97 2 18446744073709551615 14 CallExpression 99 1 99 15 107 2 :: 99 15 99 17 107 14 CallExpression 99 17 99 31 107 1 ( 99 31 99 32 107 7 int32_t 99 32 99 39 3 4 line 99 40 99 44 108 1 , 99 44 99 45 107 7 int32_t 99 46 99 53 3 6 column 99 54 99 60 109 1 , 99 60 99 61 107 6 ExpPtr 99 62 99 68 22 8 function 99 69 99 77 110 1 , 99 77 99 78 107 6 vector 100 11 100 17 47 1 < 100 17 100 18 18446744073709551615 6 ExpPtr 100 18 100 24 22 1 > 100 24 100 25 18446744073709551615 9 arguments 100 26 100 35 111 1 ) 100 35 100 36 107 1 : 101 2 101 3 107 10 Expression 101 4 101 14 2 1 ( 101 14 101 15 2 4 line 101 15 101 19 108 1 , 101 19 101 20 2 6 column 101 21 101 27 109 1 , 101 27 101 28 2 14 ExpressionKind 101 29 101 43 6 2 :: 101 43 101 45 18446744073709551615 4 Call 101 45 101 49 112 1 ) 101 49 101 50 2 1 , 102 2 102 3 107 8 function 102 4 102 12 113 1 { 102 12 102 13 25 8 function 102 13 102 21 110 1 } 102 21 102 22 25 1 , 103 2 103 3 107 9 arguments 103 4 103 13 114 1 { 103 13 103 14 47 9 arguments 103 14 103 23 111 1 } 103 23 103 24 47 1 { 104 1 104 2 18446744073709551615 1 } 105 1 105 2 18446744073709551615 18 VariableExpression 107 1 107 19 115 2 :: 107 19 107 21 115 18 VariableExpression 107 21 107 39 115 1 ( 107 39 107 40 115 7 int32_t 107 40 107 47 3 4 line 107 48 107 52 116 1 , 107 52 107 53 115 7 int32_t 107 54 107 61 3 6 column 107 62 107 68 117 1 , 107 68 107 69 115 7 wstring 108 13 108 20 37 4 name 108 21 108 25 118 1 ) 108 25 108 26 115 1 : 109 2 109 3 115 10 Expression 109 4 109 14 2 1 ( 109 14 109 15 2 4 line 109 15 109 19 116 1 , 109 19 109 20 2 6 column 109 21 109 27 117 1 , 109 27 109 28 2 14 ExpressionKind 109 29 109 43 6 2 :: 109 43 109 45 18446744073709551615 8 Variable 109 45 109 53 119 1 ) 109 53 109 54 2 1 , 110 2 110 3 115 4 name 110 4 110 8 120 1 { 110 8 110 9 42 4 name 110 9 110 13 118 1 } 110 13 110 14 42 1 { 111 1 111 2 18446744073709551615 1 } 112 1 112 2 18446744073709551615 16 ReturnExpression 113 1 113 17 121 2 :: 113 17 113 19 121 16 ReturnExpression 113 19 113 35 121 1 ( 113 35 113 36 121 7 int32_t 113 36 113 43 3 4 line 113 44 113 48 122 1 , 113 48 113 49 121 7 int32_t 113 50 113 57 3 6 column 113 58 113 64 123 1 , 113 64 113 65 121 6 ExpPtr 113 66 113 72 22 5 value 113 73 113 78 124 1 ) 113 78 113 79 121 1 : 114 2 114 3 121 10 Expression 114 4 114 14 2 1 ( 114 14 114 15 2 4 line 114 15 114 19 122 1 , 114 19 114 20 2 6 column 114 21 114 27 123 1 , 114 27 114 28 2 14 ExpressionKind 114 29 114 43 6 2 :: 114 43 114 45 18446744073709551615 6 Return 114 45 114 51 125 1 ) 114 51 114 52 2 1 , 115 2 115 3 121 5 value 115 4 115 9 126 1 { 115 9 115 10 25 5 value 115 10 115 15 124 1 } 115 15 115 16 25 1 { 116 1 116 2 18446744073709551615 1 } 117 1 117 2 18446744073709551615 15 WhileExpression 118 1 118 16 127 2 :: 118 16 118 18 127 15 WhileExpression 118 18 118 33 127 1 ( 118 33 118 34 127 7 int32_t 118 34 118 41 3 4 line 118 42 118 46 128 1 , 118 46 118 47 127 7 int32_t 118 48 118 55 3 6 column 118 56 118 62 129 1 , 118 62 118 63 127 6 ExpPtr 118 64 118 70 22 9 condition 118 71 118 80 130 1 , 118 80 118 81 127 6 ExpPtr 119 10 119 16 22 4 body 119 17 119 21 131 1 ) 119 21 119 22 127 1 : 120 2 120 3 127 10 Expression 120 4 120 14 2 1 ( 120 14 120 15 2 4 line 120 15 120 19 128 1 , 120 19 120 20 2 6 column 120 21 120 27 129 1 , 120 27 120 28 2 14 ExpressionKind 120 29 120 43 6 2 :: 120 43 120 45 18446744073709551615 5 While 120 45 120 50 132 1 ) 120 50 120 51 2 1 , 121 2 121 3 127 9 condition 121 4 121 13 133 1 { 121 13 121 14 25 9 condition 121 14 121 23 130 1 } 121 23 121 24 25 1 , 122 2 122 3 127 4 body 122 4 122 8 134 1 { 122 8 122 9 25 4 body 122 9 122 13 131 1 } 122 13 122 14 25 1 { 123 1 123 2 18446744073709551615 1 } 124 1 124 2 18446744073709551615 4 void 125 1 125 5 18446744073709551615 18 ConstantExpression 125 6 125 24 11 2 :: 125 24 125 26 135 6 Accept 125 26 125 32 135 1 ( 125 32 125 33 135 10 Expression 125 33 125 43 2 2 :: 125 43 125 45 18446744073709551615 7 Visitor 125 45 125 52 136 1 * 125 52 125 53 18446744073709551615 7 visitor 125 54 125 61 137 1 ) 125 61 125 62 135 1 { 126 1 126 2 18446744073709551615 7 visitor 127 2 127 9 137 2 -> 127 9 127 11 138 5 Visit 127 11 127 16 138 1 ( 127 16 127 17 138 4 this 127 17 127 21 18446744073709551615 1 ) 127 21 127 22 138 1 ; 127 22 127 23 18446744073709551615 1 } 128 1 128 2 18446744073709551615 4 void 129 1 129 5 18446744073709551615 15 UnaryExpression 129 6 129 21 18 2 :: 129 21 129 23 135 6 Accept 129 23 129 29 135 1 ( 129 29 129 30 135 10 Expression 129 30 129 40 2 2 :: 129 40 129 42 18446744073709551615 7 Visitor 129 42 129 49 136 1 * 129 49 129 50 18446744073709551615 7 visitor 129 51 129 58 139 1 ) 129 58 129 59 135 1 { 130 1 130 2 18446744073709551615 7 visitor 131 2 131 9 139 2 -> 131 9 131 11 138 5 Visit 131 11 131 16 138 1 ( 131 16 131 17 138 4 this 131 17 131 21 18446744073709551615 1 ) 131 21 131 22 138 1 ; 131 22 131 23 18446744073709551615 1 } 132 1 132 2 18446744073709551615 4 void 133 1 133 5 18446744073709551615 16 BinaryExpression 133 6 133 22 26 2 :: 133 22 133 24 135 6 Accept 133 24 133 30 135 1 ( 133 30 133 31 135 10 Expression 133 31 133 41 2 2 :: 133 41 133 43 18446744073709551615 7 Visitor 133 43 133 50 136 1 * 133 50 133 51 18446744073709551615 7 visitor 133 52 133 59 140 1 ) 133 59 133 60 135 1 { 134 1 134 2 18446744073709551615 7 visitor 135 2 135 9 140 2 -> 135 9 135 11 138 5 Visit 135 11 135 16 138 1 ( 135 16 135 17 138 4 this 135 17 135 21 18446744073709551615 1 ) 135 21 135 22 138 1 ; 135 22 135 23 18446744073709551615 1 } 136 1 136 2 18446744073709551615 4 void 137 1 137 5 18446744073709551615 16 AssignExpression 137 6 137 22 34 2 :: 137 22 137 24 135 6 Accept 137 24 137 30 135 1 ( 137 30 137 31 135 10 Expression 137 31 137 41 2 2 :: 137 41 137 43 18446744073709551615 7 Visitor 137 43 137 50 136 1 * 137 50 137 51 18446744073709551615 7 visitor 137 52 137 59 141 1 ) 137 59 137 60 135 1 { 138 1 138 2 18446744073709551615 7 visitor 139 2 139 9 141 2 -> 139 9 139 11 138 5 Visit 139 11 139 16 138 1 ( 139 16 139 17 138 4 this 139 17 139 21 18446744073709551615 1 ) 139 21 139 22 138 1 ; 139 22 139 23 18446744073709551615 1 } 140 1 140 2 18446744073709551615 4 void 141 1 141 5 18446744073709551615 15 BlockExpression 141 6 141 21 44 2 :: 141 21 141 23 135 6 Accept 141 23 141 29 135 1 ( 141 29 141 30 135 10 Expression 141 30 141 40 2 2 :: 141 40 141 42 18446744073709551615 7 Visitor 141 42 141 49 136 1 * 141 49 141 50 18446744073709551615 7 visitor 141 51 141 58 142 1 ) 141 58 141 59 135 1 { 142 1 142 2 18446744073709551615 7 visitor 143 2 143 9 142 2 -> 143 9 143 11 138 5 Visit 143 11 143 16 138 1 ( 143 16 143 17 138 4 this 143 17 143 21 18446744073709551615 1 ) 143 21 143 22 138 1 ; 143 22 143 23 18446744073709551615 1 } 144 1 144 2 18446744073709551615 4 void 145 1 145 5 18446744073709551615 16 IfThenExpression 145 6 145 22 51 2 :: 145 22 145 24 135 6 Accept 145 24 145 30 135 1 ( 145 30 145 31 135 10 Expression 145 31 145 41 2 2 :: 145 41 145 43 18446744073709551615 7 Visitor 145 43 145 50 136 1 * 145 50 145 51 18446744073709551615 7 visitor 145 52 145 59 143 1 ) 145 59 145 60 135 1 { 146 1 146 2 18446744073709551615 7 visitor 147 2 147 9 143 2 -> 147 9 147 11 138 5 Visit 147 11 147 16 138 1 ( 147 16 147 17 138 4 this 147 17 147 21 18446744073709551615 1 ) 147 21 147 22 138 1 ; 147 22 147 23 18446744073709551615 1 } 148 1 148 2 18446744073709551615 4 void 149 1 149 5 18446744073709551615 20 IfThenElseExpression 149 6 149 26 59 2 :: 149 26 149 28 135 6 Accept 149 28 149 34 135 1 ( 149 34 149 35 135 10 Expression 149 35 149 45 2 2 :: 149 45 149 47 18446744073709551615 7 Visitor 149 47 149 54 136 1 * 149 54 149 55 18446744073709551615 7 visitor 149 56 149 63 144 1 ) 149 63 149 64 135 1 { 150 1 150 2 18446744073709551615 7 visitor 151 2 151 9 144 2 -> 151 9 151 11 138 5 Visit 151 11 151 16 138 1 ( 151 16 151 17 138 4 this 151 17 151 21 18446744073709551615 1 ) 151 21 151 22 138 1 ; 151 22 151 23 18446744073709551615 1 } 152 1 152 2 18446744073709551615 4 void 153 1 153 5 18446744073709551615 16 DefVarExpression 153 6 153 22 69 2 :: 153 22 153 24 135 6 Accept 153 24 153 30 135 1 ( 153 30 153 31 135 10 Expression 153 31 153 41 2 2 :: 153 41 153 43 18446744073709551615 7 Visitor 153 43 153 50 136 1 * 153 50 153 51 18446744073709551615 7 visitor 153 52 153 59 145 1 ) 153 59 153 60 135 1 { 154 1 154 2 18446744073709551615 7 visitor 155 2 155 9 145 2 -> 155 9 155 11 138 5 Visit 155 11 155 16 138 1 ( 155 16 155 17 138 4 this 155 17 155 21 18446744073709551615 1 ) 155 21 155 22 138 1 ; 155 22 155 23 18446744073709551615 1 } 156 1 156 2 18446744073709551615 4 void 157 1 157 5 18446744073709551615 16 DefFunExpression 157 6 157 22 81 2 :: 157 22 157 24 135 6 Accept 157 24 157 30 135 1 ( 157 30 157 31 135 10 Expression 157 31 157 41 2 2 :: 157 41 157 43 18446744073709551615 7 Visitor 157 43 157 50 136 1 * 157 50 157 51 18446744073709551615 7 visitor 157 52 157 59 146 1 ) 157 59 157 60 135 1 { 158 1 158 2 18446744073709551615 7 visitor 159 2 159 9 146 2 -> 159 9 159 11 138 5 Visit 159 11 159 16 138 1 ( 159 16 159 17 138 4 this 159 17 159 21 18446744073709551615 1 ) 159 21 159 22 138 1 ; 159 22 159 23 18446744073709551615 1 } 160 1 160 2 18446744073709551615 4 void 161 1 161 5 18446744073709551615 19 ParameterExpression 161 6 161 25 100 2 :: 161 25 161 27 135 6 Accept 161 27 161 33 135 1 ( 161 33 161 34 135 10 Expression 161 34 161 44 2 2 :: 161 44 161 46 18446744073709551615 7 Visitor 161 46 161 53 136 1 * 161 53 161 54 18446744073709551615 7 visitor 161 55 161 62 147 1 ) 161 62 161 63 135 1 { 162 1 162 2 18446744073709551615 7 visitor 163 2 163 9 147 2 -> 163 9 163 11 138 5 Visit 163 11 163 16 138 1 ( 163 16 163 17 138 4 this 163 17 163 21 18446744073709551615 1 ) 163 21 163 22 138 1 ; 163 22 163 23 18446744073709551615 1 } 164 1 164 2 18446744073709551615 4 void 165 1 165 5 18446744073709551615 14 CallExpression 165 6 165 20 107 2 :: 165 20 165 22 135 6 Accept 165 22 165 28 135 1 ( 165 28 165 29 135 10 Expression 165 29 165 39 2 2 :: 165 39 165 41 18446744073709551615 7 Visitor 165 41 165 48 136 1 * 165 48 165 49 18446744073709551615 7 visitor 165 50 165 57 148 1 ) 165 57 165 58 135 1 { 166 1 166 2 18446744073709551615 7 visitor 167 2 167 9 148 2 -> 167 9 167 11 138 5 Visit 167 11 167 16 138 1 ( 167 16 167 17 138 4 this 167 17 167 21 18446744073709551615 1 ) 167 21 167 22 138 1 ; 167 22 167 23 18446744073709551615 1 } 168 1 168 2 18446744073709551615 4 void 169 1 169 5 18446744073709551615 18 VariableExpression 169 6 169 24 115 2 :: 169 24 169 26 135 6 Accept 169 26 169 32 135 1 ( 169 32 169 33 135 10 Expression 169 33 169 43 2 2 :: 169 43 169 45 18446744073709551615 7 Visitor 169 45 169 52 136 1 * 169 52 169 53 18446744073709551615 7 visitor 169 54 169 61 149 1 ) 169 61 169 62 135 1 { 170 1 170 2 18446744073709551615 7 visitor 171 2 171 9 149 2 -> 171 9 171 11 138 5 Visit 171 11 171 16 138 1 ( 171 16 171 17 138 4 this 171 17 171 21 18446744073709551615 1 ) 171 21 171 22 138 1 ; 171 22 171 23 18446744073709551615 1 } 172 1 172 2 18446744073709551615 4 void 173 1 173 5 18446744073709551615 16 ReturnExpression 173 6 173 22 121 2 :: 173 22 173 24 135 6 Accept 173 24 173 30 135 1 ( 173 30 173 31 135 10 Expression 173 31 173 41 2 2 :: 173 41 173 43 18446744073709551615 7 Visitor 173 43 173 50 136 1 * 173 50 173 51 18446744073709551615 7 visitor 173 52 173 59 150 1 ) 173 59 173 60 135 1 { 174 1 174 2 18446744073709551615 7 visitor 175 2 175 9 150 2 -> 175 9 175 11 138 5 Visit 175 11 175 16 138 1 ( 175 16 175 17 138 4 this 175 17 175 21 18446744073709551615 1 ) 175 21 175 22 138 1 ; 175 22 175 23 18446744073709551615 1 } 176 1 176 2 18446744073709551615 4 void 177 1 177 5 18446744073709551615 15 WhileExpression 177 6 177 21 127 2 :: 177 21 177 23 135 6 Accept 177 23 177 29 135 1 ( 177 29 177 30 135 10 Expression 177 30 177 40 2 2 :: 177 40 177 42 18446744073709551615 7 Visitor 177 42 177 49 136 1 * 177 49 177 50 18446744073709551615 7 visitor 177 51 177 58 151 1 ) 177 58 177 59 135 1 { 178 1 178 2 18446744073709551615 7 visitor 179 2 179 9 18446744073709551615 2 -> 179 9 179 11 18446744073709551615 5 Visit 179 11 179 16 18446744073709551615 1 ( 179 16 179 17 18446744073709551615 4 this 179 17 179 21 18446744073709551615 1 ) 179 21 179 22 18446744073709551615 1 ; 179 22 179 23 18446744073709551615 1 } 180 1 180 2 18446744073709551615 11 UnaryExpPtr 181 1 181 12 152 3 Ast 181 13 181 16 153 2 :: 181 16 181 18 154 9 UnaryPlus 181 18 181 27 154 1 ( 181 27 181 28 154 7 int32_t 181 28 181 35 3 4 line 181 36 181 40 155 1 , 181 40 181 41 154 7 int32_t 181 42 181 49 3 6 column 181 50 181 56 156 1 , 181 56 181 57 154 6 ExpPtr 181 58 181 64 22 7 operand 181 65 181 72 157 1 ) 181 72 181 73 154 1 { 182 1 182 2 18446744073709551615 6 return 183 2 183 8 18446744073709551615 11 make_shared 183 9 183 20 158 1 < 183 20 183 21 158 15 UnaryExpression 183 21 183 36 18 1 > 183 36 183 37 158 1 ( 183 37 183 38 158 4 line 183 38 183 42 155 1 , 183 42 183 43 158 6 column 183 44 183 50 156 1 , 183 50 183 51 158 14 ExpressionKind 183 52 183 66 6 2 :: 183 66 183 68 18446744073709551615 9 UnaryPlus 183 68 183 77 159 1 , 183 77 183 78 158 7 operand 184 11 184 18 157 1 ) 184 18 184 19 158 1 ; 184 19 184 20 18446744073709551615 1 } 185 1 185 2 18446744073709551615 11 UnaryExpPtr 186 1 186 12 152 3 Ast 186 13 186 16 153 2 :: 186 16 186 18 160 10 UnaryMinus 186 18 186 28 160 1 ( 186 28 186 29 160 7 int32_t 186 29 186 36 3 4 line 186 37 186 41 161 1 , 186 41 186 42 160 7 int32_t 186 43 186 50 3 6 column 186 51 186 57 162 1 , 186 57 186 58 160 6 ExpPtr 186 59 186 65 22 7 operand 186 66 186 73 163 1 ) 186 73 186 74 160 1 { 187 1 187 2 18446744073709551615 6 return 188 2 188 8 18446744073709551615 11 make_shared 188 9 188 20 158 1 < 188 20 188 21 158 15 UnaryExpression 188 21 188 36 18 1 > 188 36 188 37 158 1 ( 188 37 188 38 158 4 line 188 38 188 42 161 1 , 188 42 188 43 158 6 column 188 44 188 50 162 1 , 188 50 188 51 158 14 ExpressionKind 189 11 189 25 6 2 :: 189 25 189 27 18446744073709551615 10 UnaryMinus 189 27 189 37 164 1 , 189 37 189 38 158 7 operand 189 39 189 46 163 1 ) 189 46 189 47 158 1 ; 189 47 189 48 18446744073709551615 1 } 190 1 190 2 18446744073709551615 11 UnaryExpPtr 191 1 191 12 152 3 Ast 191 13 191 16 153 2 :: 191 16 191 18 165 3 Not 191 18 191 21 165 1 ( 191 21 191 22 165 7 int32_t 191 22 191 29 3 4 line 191 30 191 34 166 1 , 191 34 191 35 165 7 int32_t 191 36 191 43 3 6 column 191 44 191 50 167 1 , 191 50 191 51 165 6 ExpPtr 191 52 191 58 22 7 operand 191 59 191 66 168 1 ) 191 66 191 67 165 1 { 192 1 192 2 18446744073709551615 6 return 193 2 193 8 18446744073709551615 11 make_shared 193 9 193 20 158 1 < 193 20 193 21 158 15 UnaryExpression 193 21 193 36 18 1 > 193 36 193 37 158 1 ( 193 37 193 38 158 4 line 193 38 193 42 166 1 , 193 42 193 43 158 6 column 193 44 193 50 167 1 , 193 50 193 51 158 14 ExpressionKind 193 52 193 66 6 2 :: 193 66 193 68 18446744073709551615 3 Not 193 68 193 71 169 1 , 193 71 193 72 158 7 operand 194 11 194 18 168 1 ) 194 18 194 19 158 1 ; 194 19 194 20 18446744073709551615 1 } 195 1 195 2 18446744073709551615 12 BinaryExpPtr 196 1 196 13 170 3 Ast 196 14 196 17 153 2 :: 196 17 196 19 171 3 Add 196 19 196 22 171 1 ( 196 22 196 23 171 7 int32_t 196 23 196 30 3 4 line 196 31 196 35 172 1 , 196 35 196 36 171 7 int32_t 196 37 196 44 3 6 column 196 45 196 51 173 1 , 196 51 196 52 171 6 ExpPtr 196 53 196 59 22 2 e1 196 60 196 62 174 1 , 196 62 196 63 171 6 ExpPtr 196 64 196 70 22 2 e2 196 71 196 73 175 1 ) 196 73 196 74 171 1 { 197 1 197 2 18446744073709551615 6 return 198 2 198 8 18446744073709551615 11 make_shared 198 9 198 20 158 1 < 198 20 198 21 158 16 BinaryExpression 198 21 198 37 26 1 > 198 37 198 38 158 1 ( 198 38 198 39 158 4 line 198 39 198 43 172 1 , 198 43 198 44 158 6 column 198 45 198 51 173 1 , 198 51 198 52 158 14 ExpressionKind 198 53 198 67 6 2 :: 198 67 198 69 18446744073709551615 3 Add 198 69 198 72 176 1 , 198 72 198 73 158 2 e1 198 74 198 76 174 1 , 198 76 198 77 158 2 e2 199 12 199 14 175 1 ) 199 14 199 15 158 1 ; 199 15 199 16 18446744073709551615 1 } 200 1 200 2 18446744073709551615 12 BinaryExpPtr 201 1 201 13 170 3 Ast 201 14 201 17 153 2 :: 201 17 201 19 177 8 Subtract 201 19 201 27 177 1 ( 201 27 201 28 177 7 int32_t 201 28 201 35 3 4 line 201 36 201 40 178 1 , 201 40 201 41 177 7 int32_t 201 42 201 49 3 6 column 201 50 201 56 179 1 , 201 56 201 57 177 6 ExpPtr 201 58 201 64 22 2 e1 201 65 201 67 180 1 , 201 67 201 68 177 6 ExpPtr 201 69 201 75 22 2 e2 201 76 201 78 181 1 ) 201 78 201 79 177 1 { 202 1 202 2 18446744073709551615 6 return 203 2 203 8 18446744073709551615 11 make_shared 203 9 203 20 158 1 < 203 20 203 21 158 16 BinaryExpression 203 21 203 37 26 1 > 203 37 203 38 158 1 ( 203 38 203 39 158 4 line 203 39 203 43 178 1 , 203 43 203 44 158 6 column 203 45 203 51 179 1 , 203 51 203 52 158 14 ExpressionKind 203 53 203 67 6 2 :: 203 67 203 69 18446744073709551615 8 Subtract 203 69 203 77 182 1 , 203 77 203 78 158 2 e1 204 12 204 14 180 1 , 204 14 204 15 158 2 e2 204 16 204 18 181 1 ) 204 18 204 19 158 1 ; 204 19 204 20 18446744073709551615 1 } 205 1 205 2 18446744073709551615 12 BinaryExpPtr 206 1 206 13 170 3 Ast 206 14 206 17 153 2 :: 206 17 206 19 183 8 Multiply 206 19 206 27 183 1 ( 206 27 206 28 183 7 int32_t 206 28 206 35 3 4 line 206 36 206 40 184 1 , 206 40 206 41 183 7 int32_t 206 42 206 49 3 6 column 206 50 206 56 185 1 , 206 56 206 57 183 6 ExpPtr 206 58 206 64 22 2 e1 206 65 206 67 186 1 , 206 67 206 68 183 6 ExpPtr 206 69 206 75 22 2 e2 206 76 206 78 187 1 ) 206 78 206 79 183 1 { 207 1 207 2 18446744073709551615 6 return 208 2 208 8 18446744073709551615 11 make_shared 208 9 208 20 158 1 < 208 20 208 21 158 16 BinaryExpression 208 21 208 37 26 1 > 208 37 208 38 158 1 ( 208 38 208 39 158 4 line 208 39 208 43 184 1 , 208 43 208 44 158 6 column 208 45 208 51 185 1 , 208 51 208 52 158 14 ExpressionKind 208 53 208 67 6 2 :: 208 67 208 69 18446744073709551615 8 Multiply 208 69 208 77 188 1 , 208 77 208 78 158 2 e1 209 12 209 14 186 1 , 209 14 209 15 158 2 e2 209 16 209 18 187 1 ) 209 18 209 19 158 1 ; 209 19 209 20 18446744073709551615 1 } 210 1 210 2 18446744073709551615 12 BinaryExpPtr 211 1 211 13 170 3 Ast 211 14 211 17 153 2 :: 211 17 211 19 189 6 Divide 211 19 211 25 189 1 ( 211 25 211 26 189 7 int32_t 211 26 211 33 3 4 line 211 34 211 38 190 1 , 211 38 211 39 189 7 int32_t 211 40 211 47 3 6 column 211 48 211 54 191 1 , 211 54 211 55 189 6 ExpPtr 211 56 211 62 22 2 e1 211 63 211 65 192 1 , 211 65 211 66 189 6 ExpPtr 211 67 211 73 22 2 e2 211 74 211 76 193 1 ) 211 76 211 77 189 1 { 212 1 212 2 18446744073709551615 6 return 213 2 213 8 18446744073709551615 11 make_shared 213 9 213 20 158 1 < 213 20 213 21 158 16 BinaryExpression 213 21 213 37 26 1 > 213 37 213 38 158 1 ( 213 38 213 39 158 4 line 213 39 213 43 190 1 , 213 43 213 44 158 6 column 213 45 213 51 191 1 , 213 51 213 52 158 14 ExpressionKind 213 53 213 67 6 2 :: 213 67 213 69 18446744073709551615 6 Divide 213 69 213 75 194 1 , 213 75 213 76 158 2 e1 214 12 214 14 192 1 , 214 14 214 15 158 2 e2 214 16 214 18 193 1 ) 214 18 214 19 158 1 ; 214 19 214 20 18446744073709551615 1 } 215 1 215 2 18446744073709551615 12 BinaryExpPtr 216 1 216 13 170 3 Ast 216 14 216 17 153 2 :: 216 17 216 19 195 6 Modulo 216 19 216 25 195 1 ( 216 25 216 26 195 7 int32_t 216 26 216 33 3 4 line 216 34 216 38 196 1 , 216 38 216 39 195 7 int32_t 216 40 216 47 3 6 column 216 48 216 54 197 1 , 216 54 216 55 195 6 ExpPtr 216 56 216 62 22 2 e1 216 63 216 65 198 1 , 216 65 216 66 195 6 ExpPtr 216 67 216 73 22 2 e2 216 74 216 76 199 1 ) 216 76 216 77 195 1 { 217 1 217 2 18446744073709551615 6 return 218 2 218 8 18446744073709551615 11 make_shared 218 9 218 20 158 1 < 218 20 218 21 158 16 BinaryExpression 218 21 218 37 26 1 > 218 37 218 38 158 1 ( 218 38 218 39 158 4 line 218 39 218 43 196 1 , 218 43 218 44 158 6 column 218 45 218 51 197 1 , 218 51 218 52 158 14 ExpressionKind 218 53 218 67 6 2 :: 218 67 218 69 18446744073709551615 6 Modulo 218 69 218 75 200 1 , 218 75 218 76 158 2 e1 219 12 219 14 198 1 , 219 14 219 15 158 2 e2 219 16 219 18 199 1 ) 219 18 219 19 158 1 ; 219 19 219 20 18446744073709551615 1 } 220 1 220 2 18446744073709551615 12 BinaryExpPtr 221 1 221 13 170 3 Ast 221 14 221 17 153 2 :: 221 17 221 19 201 11 GreaterThan 221 19 221 30 201 1 ( 221 30 221 31 201 7 int32_t 221 31 221 38 3 4 line 221 39 221 43 202 1 , 221 43 221 44 201 7 int32_t 221 45 221 52 3 6 column 221 53 221 59 203 1 , 221 59 221 60 201 6 ExpPtr 221 61 221 67 22 2 e1 221 68 221 70 204 1 , 221 70 221 71 201 6 ExpPtr 222 10 222 16 22 2 e2 222 17 222 19 205 1 ) 222 19 222 20 201 1 { 223 1 223 2 18446744073709551615 6 return 224 2 224 8 18446744073709551615 11 make_shared 224 9 224 20 158 1 < 224 20 224 21 158 16 BinaryExpression 224 21 224 37 26 1 > 224 37 224 38 158 1 ( 224 38 224 39 158 4 line 224 39 224 43 202 1 , 224 43 224 44 158 6 column 224 45 224 51 203 1 , 224 51 224 52 158 14 ExpressionKind 225 12 225 26 6 2 :: 225 26 225 28 18446744073709551615 11 GreaterThan 225 28 225 39 206 1 , 225 39 225 40 158 2 e1 225 41 225 43 204 1 , 225 43 225 44 158 2 e2 225 45 225 47 205 1 ) 225 47 225 48 158 1 ; 225 48 225 49 18446744073709551615 1 } 226 1 226 2 18446744073709551615 12 BinaryExpPtr 227 1 227 13 170 3 Ast 227 14 227 17 153 2 :: 227 17 227 19 207 8 LessThan 227 19 227 27 207 1 ( 227 27 227 28 207 7 int32_t 227 28 227 35 3 4 line 227 36 227 40 208 1 , 227 40 227 41 207 7 int32_t 227 42 227 49 3 6 column 227 50 227 56 209 1 , 227 56 227 57 207 6 ExpPtr 227 58 227 64 22 2 e1 227 65 227 67 210 1 , 227 67 227 68 207 6 ExpPtr 227 69 227 75 22 2 e2 227 76 227 78 211 1 ) 227 78 227 79 207 1 { 228 1 228 2 18446744073709551615 6 return 229 2 229 8 18446744073709551615 11 make_shared 229 9 229 20 158 1 < 229 20 229 21 158 16 BinaryExpression 229 21 229 37 26 1 > 229 37 229 38 158 1 ( 229 38 229 39 158 4 line 229 39 229 43 208 1 , 229 43 229 44 158 6 column 229 45 229 51 209 1 , 229 51 229 52 158 14 ExpressionKind 229 53 229 67 6 2 :: 229 67 229 69 18446744073709551615 8 LessThan 229 69 229 77 212 1 , 229 77 229 78 158 2 e1 230 12 230 14 210 1 , 230 14 230 15 158 2 e2 230 16 230 18 211 1 ) 230 18 230 19 158 1 ; 230 19 230 20 18446744073709551615 1 } 231 1 231 2 18446744073709551615 12 BinaryExpPtr 232 1 232 13 170 3 Ast 232 14 232 17 153 2 :: 232 17 232 19 213 18 GreaterThanOrEqual 232 19 232 37 213 1 ( 232 37 232 38 213 7 int32_t 232 38 232 45 3 4 line 232 46 232 50 214 1 , 232 50 232 51 213 7 int32_t 232 52 232 59 3 6 column 232 60 232 66 215 1 , 232 66 232 67 213 6 ExpPtr 232 68 232 74 22 2 e1 232 75 232 77 216 1 , 232 77 232 78 213 6 ExpPtr 233 11 233 17 22 2 e2 233 18 233 20 217 1 ) 233 20 233 21 213 1 { 234 1 234 2 18446744073709551615 6 return 235 2 235 8 18446744073709551615 11 make_shared 235 9 235 20 158 1 < 235 20 235 21 158 16 BinaryExpression 235 21 235 37 26 1 > 235 37 235 38 158 1 ( 235 38 235 39 158 4 line 236 3 236 7 214 1 , 236 7 236 8 158 6 column 236 9 236 15 215 1 , 236 15 236 16 158 14 ExpressionKind 236 17 236 31 6 2 :: 236 31 236 33 18446744073709551615 18 GreaterThanOrEqual 236 33 236 51 218 1 , 236 51 236 52 158 2 e1 236 53 236 55 216 1 , 236 55 236 56 158 2 e2 236 57 236 59 217 1 ) 236 59 236 60 158 1 ; 236 60 236 61 18446744073709551615 1 } 237 1 237 2 18446744073709551615 12 BinaryExpPtr 238 1 238 13 170 3 Ast 238 14 238 17 153 2 :: 238 17 238 19 219 15 LessThanOrEqual 238 19 238 34 219 1 ( 238 34 238 35 219 7 int32_t 238 35 238 42 3 4 line 238 43 238 47 220 1 , 238 47 238 48 219 7 int32_t 238 49 238 56 3 6 column 238 57 238 63 221 1 , 238 63 238 64 219 6 ExpPtr 238 65 238 71 22 2 e1 238 72 238 74 222 1 , 238 74 238 75 219 6 ExpPtr 239 11 239 17 22 2 e2 239 18 239 20 223 1 ) 239 20 239 21 219 1 { 240 1 240 2 18446744073709551615 6 return 241 2 241 8 18446744073709551615 11 make_shared 241 9 241 20 158 1 < 241 20 241 21 158 16 BinaryExpression 241 21 241 37 26 1 > 241 37 241 38 158 1 ( 241 38 241 39 158 4 line 242 3 242 7 220 1 , 242 7 242 8 158 6 column 242 9 242 15 221 1 , 242 15 242 16 158 14 ExpressionKind 242 17 242 31 6 2 :: 242 31 242 33 18446744073709551615 15 LessThanOrEqual 242 33 242 48 224 1 , 242 48 242 49 158 2 e1 242 50 242 52 222 1 , 242 52 242 53 158 2 e2 242 54 242 56 223 1 ) 242 56 242 57 158 1 ; 242 57 242 58 18446744073709551615 1 } 243 1 243 2 18446744073709551615 12 BinaryExpPtr 244 1 244 13 170 3 Ast 244 14 244 17 153 2 :: 244 17 244 19 225 5 Equal 244 19 244 24 225 1 ( 244 24 244 25 225 7 int32_t 244 25 244 32 3 4 line 244 33 244 37 226 1 , 244 37 244 38 225 7 int32_t 244 39 244 46 3 6 column 244 47 244 53 227 1 , 244 53 244 54 225 6 ExpPtr 244 55 244 61 22 2 e1 244 62 244 64 228 1 , 244 64 244 65 225 6 ExpPtr 244 66 244 72 22 2 e2 244 73 244 75 229 1 ) 244 75 244 76 225 1 { 245 1 245 2 18446744073709551615 6 return 246 2 246 8 18446744073709551615 11 make_shared 246 9 246 20 158 1 < 246 20 246 21 158 16 BinaryExpression 246 21 246 37 26 1 > 246 37 246 38 158 1 ( 246 38 246 39 158 4 line 246 39 246 43 226 1 , 246 43 246 44 158 6 column 246 45 246 51 227 1 , 246 51 246 52 158 14 ExpressionKind 246 53 246 67 6 2 :: 246 67 246 69 18446744073709551615 5 Equal 246 69 246 74 230 1 , 246 74 246 75 158 2 e1 247 12 247 14 228 1 , 247 14 247 15 158 2 e2 247 16 247 18 229 1 ) 247 18 247 19 158 1 ; 247 19 247 20 18446744073709551615 1 } 248 1 248 2 18446744073709551615 12 BinaryExpPtr 249 1 249 13 170 3 Ast 249 14 249 17 153 2 :: 249 17 249 19 231 8 NotEqual 249 19 249 27 231 1 ( 249 27 249 28 231 7 int32_t 249 28 249 35 3 4 line 249 36 249 40 232 1 , 249 40 249 41 231 7 int32_t 249 42 249 49 3 6 column 249 50 249 56 233 1 , 249 56 249 57 231 6 ExpPtr 249 58 249 64 22 2 e1 249 65 249 67 234 1 , 249 67 249 68 231 6 ExpPtr 249 69 249 75 22 2 e2 249 76 249 78 235 1 ) 249 78 249 79 231 1 { 250 1 250 2 18446744073709551615 6 return 251 2 251 8 18446744073709551615 11 make_shared 251 9 251 20 158 1 < 251 20 251 21 158 16 BinaryExpression 251 21 251 37 26 1 > 251 37 251 38 158 1 ( 251 38 251 39 158 4 line 251 39 251 43 232 1 , 251 43 251 44 158 6 column 251 45 251 51 233 1 , 251 51 251 52 158 14 ExpressionKind 251 53 251 67 6 2 :: 251 67 251 69 18446744073709551615 8 NotEqual 251 69 251 77 236 1 , 251 77 251 78 158 2 e1 252 12 252 14 234 1 , 252 14 252 15 158 2 e2 252 16 252 18 235 1 ) 252 18 252 19 158 1 ; 252 19 252 20 18446744073709551615 1 } 253 1 253 2 18446744073709551615 12 BinaryExpPtr 254 1 254 13 170 3 Ast 254 14 254 17 153 2 :: 254 17 254 19 237 3 And 254 19 254 22 237 1 ( 254 22 254 23 237 7 int32_t 254 23 254 30 3 4 line 254 31 254 35 238 1 , 254 35 254 36 237 7 int32_t 254 37 254 44 3 6 column 254 45 254 51 239 1 , 254 51 254 52 237 6 ExpPtr 254 53 254 59 22 2 e1 254 60 254 62 240 1 , 254 62 254 63 237 6 ExpPtr 254 64 254 70 22 2 e2 254 71 254 73 241 1 ) 254 73 254 74 237 1 { 255 1 255 2 18446744073709551615 6 return 256 2 256 8 18446744073709551615 11 make_shared 256 9 256 20 158 1 < 256 20 256 21 158 16 BinaryExpression 256 21 256 37 26 1 > 256 37 256 38 158 1 ( 256 38 256 39 158 4 line 256 39 256 43 238 1 , 256 43 256 44 158 6 column 256 45 256 51 239 1 , 256 51 256 52 158 14 ExpressionKind 256 53 256 67 6 2 :: 256 67 256 69 18446744073709551615 3 And 256 69 256 72 242 1 , 256 72 256 73 158 2 e1 256 74 256 76 240 1 , 256 76 256 77 158 2 e2 257 12 257 14 241 1 ) 257 14 257 15 158 1 ; 257 15 257 16 18446744073709551615 1 } 258 1 258 2 18446744073709551615 12 BinaryExpPtr 259 1 259 13 170 3 Ast 259 14 259 17 153 2 :: 259 17 259 19 243 2 Or 259 19 259 21 243 1 ( 259 21 259 22 243 7 int32_t 259 22 259 29 3 4 line 259 30 259 34 244 1 , 259 34 259 35 243 7 int32_t 259 36 259 43 3 6 column 259 44 259 50 245 1 , 259 50 259 51 243 6 ExpPtr 259 52 259 58 22 2 e1 259 59 259 61 246 1 , 259 61 259 62 243 6 ExpPtr 259 63 259 69 22 2 e2 259 70 259 72 247 1 ) 259 72 259 73 243 1 { 260 1 260 2 18446744073709551615 6 return 261 2 261 8 18446744073709551615 11 make_shared 261 9 261 20 158 1 < 261 20 261 21 158 16 BinaryExpression 261 21 261 37 26 1 > 261 37 261 38 158 1 ( 261 38 261 39 158 4 line 261 39 261 43 244 1 , 261 43 261 44 158 6 column 261 45 261 51 245 1 , 261 51 261 52 158 14 ExpressionKind 261 53 261 67 6 2 :: 261 67 261 69 18446744073709551615 2 Or 261 69 261 71 248 1 , 261 71 261 72 158 2 e1 261 73 261 75 246 1 , 261 75 261 76 158 2 e2 262 12 262 14 247 1 ) 262 14 262 15 158 1 ; 262 15 262 16 18446744073709551615 1 } 263 1 263 2 18446744073709551615 14 ConstantExpPtr 264 1 264 15 249 3 Ast 264 16 264 19 153 2 :: 264 19 264 21 250 8 Constant 264 21 264 29 250 1 ( 264 29 264 30 250 7 int32_t 264 30 264 37 3 4 line 264 38 264 42 251 1 , 264 42 264 43 250 7 int32_t 264 44 264 51 3 6 column 264 52 264 58 252 1 , 264 58 264 59 250 3 std 264 60 264 63 0 2 :: 264 63 264 65 18446744073709551615 3 any 264 65 264 68 14 5 value 264 69 264 74 253 1 ) 264 74 264 75 250 1 { 265 1 265 2 18446744073709551615 6 return 266 2 266 8 18446744073709551615 11 make_shared 266 9 266 20 158 1 < 266 20 266 21 158 18 ConstantExpression 266 21 266 39 11 1 > 266 39 266 40 158 1 ( 266 40 266 41 158 4 line 266 41 266 45 251 1 , 266 45 266 46 158 6 column 266 47 266 53 252 1 , 266 53 266 54 158 5 value 266 55 266 60 253 1 ) 266 60 266 61 158 1 ; 266 61 266 62 18446744073709551615 1 } 267 1 267 2 18446744073709551615 12 DefVarExpPtr 268 1 268 13 254 3 Ast 268 14 268 17 153 2 :: 268 17 268 19 255 14 DefineVariable 268 19 268 33 255 1 ( 268 33 268 34 255 7 int32_t 268 34 268 41 3 4 line 268 42 268 46 256 1 , 268 46 268 47 255 7 int32_t 268 48 268 55 3 6 column 268 56 268 62 257 1 , 268 62 268 63 255 7 wstring 268 64 268 71 37 4 name 268 72 268 76 258 1 , 268 76 268 77 255 4 Type 269 10 269 14 73 4 type 269 15 269 19 259 1 , 269 19 269 20 255 6 ExpPtr 269 21 269 27 22 5 value 269 28 269 33 260 1 ) 269 33 269 34 255 1 { 270 1 270 2 18446744073709551615 6 return 271 2 271 8 18446744073709551615 11 make_shared 271 9 271 20 158 1 < 271 20 271 21 158 16 DefVarExpression 271 21 271 37 69 1 > 271 37 271 38 158 1 ( 271 38 271 39 158 4 line 271 39 271 43 256 1 , 271 43 271 44 158 6 column 271 45 271 51 257 1 , 271 51 271 52 158 4 name 271 53 271 57 258 1 , 271 57 271 58 158 4 type 271 59 271 63 259 1 , 271 63 271 64 158 5 value 271 65 271 70 260 1 ) 271 70 271 71 158 1 ; 271 71 271 72 18446744073709551615 1 } 272 1 272 2 18446744073709551615 13 DefFuncExpPtr 273 1 273 14 261 3 Ast 273 15 273 18 153 2 :: 273 18 273 20 262 14 DefineFunction 273 20 273 34 262 1 ( 273 34 273 35 262 7 int32_t 273 35 273 42 3 4 line 273 43 273 47 263 1 , 273 47 273 48 262 7 int32_t 273 49 273 56 3 6 column 273 57 273 63 264 1 , 273 63 273 64 262 7 wstring 273 65 273 72 37 4 name 273 73 273 77 265 1 , 273 77 273 78 262 6 vector 274 11 274 17 47 1 < 274 17 274 18 18446744073709551615 15 ParameterExpPtr 274 18 274 33 85 1 > 274 33 274 34 18446744073709551615 10 parameters 274 35 274 45 266 1 , 274 45 274 46 262 6 ExpPtr 275 11 275 17 22 4 body 275 18 275 22 267 1 , 275 22 275 23 262 4 Type 275 24 275 28 73 10 returnType 275 29 275 39 268 1 ) 275 39 275 40 262 1 { 276 1 276 2 18446744073709551615 6 return 277 2 277 8 18446744073709551615 11 make_shared 277 9 277 20 158 1 < 277 20 277 21 158 16 DefFunExpression 277 21 277 37 81 1 > 277 37 277 38 158 1 ( 277 38 277 39 158 4 line 277 39 277 43 263 1 , 277 43 277 44 158 6 column 277 45 277 51 264 1 , 277 51 277 52 158 4 name 277 53 277 57 265 1 , 277 57 277 58 158 10 parameters 277 59 277 69 266 1 , 277 69 277 70 158 4 body 277 71 277 75 267 1 , 277 75 277 76 158 10 returnType 278 12 278 22 268 1 ) 278 22 278 23 158 1 ; 278 23 278 24 18446744073709551615 1 } 279 1 279 2 18446744073709551615 10 CallExpPtr 280 1 280 11 269 3 Ast 280 12 280 15 153 2 :: 280 15 280 17 270 4 Call 280 17 280 21 270 1 ( 280 21 280 22 270 7 int32_t 280 22 280 29 3 4 line 280 30 280 34 271 1 , 280 34 280 35 270 7 int32_t 280 36 280 43 3 6 column 280 44 280 50 272 1 , 280 50 280 51 270 6 ExpPtr 280 52 280 58 22 8 function 280 59 280 67 273 1 , 280 67 280 68 270 6 vector 281 7 281 13 47 1 < 281 13 281 14 18446744073709551615 6 ExpPtr 281 14 281 20 22 1 > 281 20 281 21 18446744073709551615 9 arguments 281 22 281 31 274 1 ) 281 31 281 32 270 1 { 282 1 282 2 18446744073709551615 6 return 283 2 283 8 18446744073709551615 11 make_shared 283 9 283 20 158 1 < 283 20 283 21 158 14 CallExpression 283 21 283 35 107 1 > 283 35 283 36 158 1 ( 283 36 283 37 158 4 line 283 37 283 41 271 1 , 283 41 283 42 158 6 column 283 43 283 49 272 1 , 283 49 283 50 158 8 function 283 51 283 59 273 1 , 283 59 283 60 158 9 arguments 283 61 283 70 274 1 ) 283 70 283 71 158 1 ; 283 71 283 72 18446744073709551615 1 } 284 1 284 2 18446744073709551615 14 VariableExpPtr 285 1 285 15 275 3 Ast 285 16 285 19 153 2 :: 285 19 285 21 276 8 Variable 285 21 285 29 276 1 ( 285 29 285 30 276 7 int32_t 285 30 285 37 3 4 line 285 38 285 42 277 1 , 285 42 285 43 276 7 int32_t 285 44 285 51 3 6 column 285 52 285 58 278 1 , 285 58 285 59 276 7 wstring 285 60 285 67 37 4 name 285 68 285 72 279 1 ) 285 72 285 73 276 1 { 286 1 286 2 18446744073709551615 6 return 287 2 287 8 18446744073709551615 11 make_shared 287 9 287 20 158 1 < 287 20 287 21 158 18 VariableExpression 287 21 287 39 115 1 > 287 39 287 40 158 1 ( 287 40 287 41 158 4 line 287 41 287 45 277 1 , 287 45 287 46 158 6 column 287 47 287 53 278 1 , 287 53 287 54 158 4 name 287 55 287 59 279 1 ) 287 59 287 60 158 1 ; 287 60 287 61 18446744073709551615 1 } 288 1 288 2 18446744073709551615 11 BlockExpPtr 289 1 289 12 280 3 Ast 289 13 289 16 153 2 :: 289 16 289 18 281 5 Block 289 18 289 23 281 1 ( 289 23 289 24 281 7 int32_t 289 24 289 31 3 4 line 289 32 289 36 282 1 , 289 36 289 37 281 7 int32_t 289 38 289 45 3 6 column 289 46 289 52 283 1 , 289 52 289 53 281 6 vector 289 54 289 60 47 1 < 289 60 289 61 18446744073709551615 6 ExpPtr 289 61 289 67 22 1 > 289 67 289 68 18446744073709551615 11 expressions 289 69 289 80 284 1 ) 289 80 289 81 281 1 { 290 1 290 2 18446744073709551615 6 return 291 2 291 8 18446744073709551615 11 make_shared 291 9 291 20 158 1 < 291 20 291 21 158 15 BlockExpression 291 21 291 36 44 1 > 291 36 291 37 158 1 ( 291 37 291 38 158 4 line 291 38 291 42 282 1 , 291 42 291 43 158 6 column 291 44 291 50 283 1 , 291 50 291 51 158 11 expressions 291 52 291 63 284 1 ) 291 63 291 64 158 1 ; 291 64 291 65 18446744073709551615 1 } 292 1 292 2 18446744073709551615 12 AssignExpPtr 293 1 293 13 285 3 Ast 293 14 293 17 153 2 :: 293 17 293 19 286 6 Assign 293 19 293 25 286 1 ( 293 25 293 26 286 7 int32_t 293 26 293 33 3 4 line 293 34 293 38 287 1 , 293 38 293 39 286 7 int32_t 293 40 293 47 3 6 column 293 48 293 54 288 1 , 293 54 293 55 286 7 wstring 293 56 293 63 37 4 name 293 64 293 68 289 1 , 293 68 293 69 286 6 ExpPtr 294 8 294 14 22 5 value 294 15 294 20 290 1 ) 294 20 294 21 286 1 { 295 1 295 2 18446744073709551615 6 return 296 2 296 8 18446744073709551615 11 make_shared 296 9 296 20 158 1 < 296 20 296 21 158 16 AssignExpression 296 21 296 37 34 1 > 296 37 296 38 158 1 ( 296 38 296 39 158 4 line 296 39 296 43 287 1 , 296 43 296 44 158 6 column 296 45 296 51 288 1 , 296 51 296 52 158 4 name 296 53 296 57 289 1 , 296 57 296 58 158 5 value 296 59 296 64 290 1 ) 296 64 296 65 158 1 ; 296 65 296 66 18446744073709551615 1 } 297 1 297 2 18446744073709551615 12 IfThenExpPtr 298 1 298 13 291 3 Ast 298 14 298 17 153 2 :: 298 17 298 19 292 6 IfThen 298 19 298 25 292 1 ( 298 25 298 26 292 7 int32_t 298 26 298 33 3 4 line 298 34 298 38 293 1 , 298 38 298 39 292 7 int32_t 298 40 298 47 3 6 column 298 48 298 54 294 1 , 298 54 298 55 292 6 ExpPtr 298 56 298 62 22 9 condition 298 63 298 72 295 1 , 298 72 298 73 292 6 ExpPtr 299 8 299 14 22 6 ifTrue 299 15 299 21 296 1 ) 299 21 299 22 292 1 { 300 1 300 2 18446744073709551615 6 return 301 2 301 8 18446744073709551615 11 make_shared 301 9 301 20 158 1 < 301 20 301 21 158 16 IfThenExpression 301 21 301 37 51 1 > 301 37 301 38 158 1 ( 301 38 301 39 158 4 line 301 39 301 43 293 1 , 301 43 301 44 158 6 column 301 45 301 51 294 1 , 301 51 301 52 158 9 condition 301 53 301 62 295 1 , 301 62 301 63 158 6 ifTrue 301 64 301 70 296 1 ) 301 70 301 71 158 1 ; 301 71 301 72 18446744073709551615 1 } 302 1 302 2 18446744073709551615 16 IfThenElseExpPtr 303 1 303 17 297 3 Ast 303 18 303 21 153 2 :: 303 21 303 23 298 10 IfThenElse 303 23 303 33 298 1 ( 303 33 303 34 298 7 int32_t 303 34 303 41 3 4 line 303 42 303 46 299 1 , 303 46 303 47 298 7 int32_t 303 48 303 55 3 6 column 303 56 303 62 300 1 , 303 62 303 63 298 6 ExpPtr 303 64 303 70 22 9 condition 303 71 303 80 301 1 , 303 80 303 81 298 6 ExpPtr 304 10 304 16 22 6 ifTrue 304 17 304 23 302 1 , 304 23 304 24 298 6 ExpPtr 304 25 304 31 22 7 ifFalse 304 32 304 39 303 1 ) 304 39 304 40 298 1 { 305 1 305 2 18446744073709551615 6 return 306 2 306 8 18446744073709551615 11 make_shared 306 9 306 20 158 1 < 306 20 306 21 158 20 IfThenElseExpression 306 21 306 41 59 1 > 306 41 306 42 158 1 ( 306 42 306 43 158 4 line 306 43 306 47 299 1 , 306 47 306 48 158 6 column 306 49 306 55 300 1 , 306 55 306 56 158 9 condition 306 57 306 66 301 1 , 306 66 306 67 158 6 ifTrue 306 68 306 74 302 1 , 306 74 306 75 158 7 ifFalse 307 13 307 20 303 1 ) 307 20 307 21 158 1 ; 307 21 307 22 18446744073709551615 1 } 308 1 308 2 18446744073709551615 15 ParameterExpPtr 309 1 309 16 85 3 Ast 309 17 309 20 153 2 :: 309 20 309 22 304 9 Parameter 309 22 309 31 304 1 ( 309 31 309 32 304 7 int32_t 309 32 309 39 3 4 line 309 40 309 44 305 1 , 309 44 309 45 304 7 int32_t 309 46 309 53 3 6 column 309 54 309 60 306 1 , 309 60 309 61 304 7 wstring 309 62 309 69 37 4 name 309 70 309 74 307 1 , 309 74 309 75 304 4 Type 310 11 310 15 73 4 type 310 16 310 20 308 1 ) 310 20 310 21 304 1 { 311 1 311 2 18446744073709551615 6 return 312 2 312 8 18446744073709551615 11 make_shared 312 9 312 20 158 1 < 312 20 312 21 158 19 ParameterExpression 312 21 312 40 100 1 > 312 40 312 41 158 1 ( 312 41 312 42 158 4 line 312 42 312 46 305 1 , 312 46 312 47 158 6 column 312 48 312 54 306 1 , 312 54 312 55 158 4 name 312 56 312 60 307 1 , 312 60 312 61 158 4 type 312 62 312 66 308 1 ) 312 66 312 67 158 1 ; 312 67 312 68 18446744073709551615 1 } 313 1 313 2 18446744073709551615 12 ReturnExpPtr 314 1 314 13 309 3 Ast 314 14 314 17 153 2 :: 314 17 314 19 310 6 Return 314 19 314 25 310 1 ( 314 25 314 26 310 7 int32_t 314 26 314 33 3 4 line 314 34 314 38 311 1 , 314 38 314 39 310 7 int32_t 314 40 314 47 3 6 column 314 48 314 54 312 1 , 314 54 314 55 310 6 ExpPtr 314 56 314 62 22 5 value 314 63 314 68 313 1 ) 314 68 314 69 310 1 { 315 1 315 2 18446744073709551615 6 return 316 2 316 8 18446744073709551615 11 make_shared 316 9 316 20 158 1 < 316 20 316 21 158 16 ReturnExpression 316 21 316 37 121 1 > 316 37 316 38 158 1 ( 316 38 316 39 158 4 line 316 39 316 43 311 1 , 316 43 316 44 158 6 column 316 45 316 51 312 1 , 316 51 316 52 158 5 value 316 53 316 58 313 1 ) 316 58 316 59 158 1 ; 316 59 316 60 18446744073709551615 1 } 317 1 317 2 18446744073709551615 11 WhileExpPtr 318 1 318 12 314 3 Ast 318 13 318 16 153 2 :: 318 16 318 18 315 5 While 318 18 318 23 315 1 ( 318 23 318 24 315 7 int32_t 318 24 318 31 3 4 line 318 32 318 36 316 1 , 318 36 318 37 315 7 int32_t 318 38 318 45 3 6 column 318 46 318 52 317 1 , 318 52 318 53 315 6 ExpPtr 318 54 318 60 22 9 condition 318 61 318 70 318 1 , 318 70 318 71 315 6 ExpPtr 319 9 319 15 22 4 body 319 16 319 20 319 1 ) 319 20 319 21 315 1 { 320 1 320 2 18446744073709551615 6 return 321 2 321 8 18446744073709551615 11 make_shared 321 9 321 20 158 1 < 321 20 321 21 158 15 WhileExpression 321 21 321 36 127 1 > 321 36 321 37 158 1 ( 321 37 321 38 158 4 line 321 38 321 42 316 1 , 321 42 321 43 158 6 column 321 44 321 50 317 1 , 321 50 321 51 158 9 condition 321 52 321 61 318 1 , 321 61 321 62 158 4 body 321 63 321 67 319 1 ) 321 67 321 68 158 1 ; 321 68 321 69 18446744073709551615 1 } 322 1 322 2 18446744073709551615 7 wstring 323 1 323 8 37 22 ExpressionKindToString 323 9 323 31 320 1 ( 323 31 323 32 320 14 ExpressionKind 323 32 323 46 6 4 kind 323 47 323 51 321 1 ) 323 51 323 52 320 1 { 324 1 324 2 18446744073709551615 6 switch 325 2 325 8 18446744073709551615 1 ( 325 9 325 10 18446744073709551615 4 kind 325 10 325 14 321 1 ) 325 14 325 15 18446744073709551615 1 { 326 2 326 3 18446744073709551615 4 case 327 2 327 6 18446744073709551615 14 ExpressionKind 327 7 327 21 6 2 :: 327 21 327 23 18446744073709551615 3 Add 327 23 327 26 176 1 : 327 26 327 27 18446744073709551615 6 return 328 3 328 9 18446744073709551615 6 L"Add" 328 10 328 16 18446744073709551615 1 ; 328 16 328 17 18446744073709551615 4 case 329 2 329 6 18446744073709551615 14 ExpressionKind 329 7 329 21 6 2 :: 329 21 329 23 18446744073709551615 8 Subtract 329 23 329 31 182 1 : 329 31 329 32 18446744073709551615 6 return 330 3 330 9 18446744073709551615 11 L"Subtract" 330 10 330 21 18446744073709551615 1 ; 330 21 330 22 18446744073709551615 4 case 331 2 331 6 18446744073709551615 14 ExpressionKind 331 7 331 21 6 2 :: 331 21 331 23 18446744073709551615 8 Multiply 331 23 331 31 188 1 : 331 31 331 32 18446744073709551615 6 return 332 3 332 9 18446744073709551615 11 L"Multiply" 332 10 332 21 18446744073709551615 1 ; 332 21 332 22 18446744073709551615 4 case 333 2 333 6 18446744073709551615 14 ExpressionKind 333 7 333 21 6 2 :: 333 21 333 23 18446744073709551615 6 Divide 333 23 333 29 194 1 : 333 29 333 30 18446744073709551615 6 return 334 3 334 9 18446744073709551615 9 L"Divide" 334 10 334 19 18446744073709551615 1 ; 334 19 334 20 18446744073709551615 4 case 335 2 335 6 18446744073709551615 14 ExpressionKind 335 7 335 21 6 2 :: 335 21 335 23 18446744073709551615 6 Modulo 335 23 335 29 200 1 : 335 29 335 30 18446744073709551615 6 return 336 3 336 9 18446744073709551615 9 L"Modulo" 336 10 336 19 18446744073709551615 1 ; 336 19 336 20 18446744073709551615 4 case 337 2 337 6 18446744073709551615 14 ExpressionKind 337 7 337 21 6 2 :: 337 21 337 23 18446744073709551615 11 GreaterThan 337 23 337 34 206 1 : 337 34 337 35 18446744073709551615 6 return 338 3 338 9 18446744073709551615 14 L"GreaterThan" 338 10 338 24 18446744073709551615 1 ; 338 24 338 25 18446744073709551615 4 case 339 2 339 6 18446744073709551615 14 ExpressionKind 339 7 339 21 6 2 :: 339 21 339 23 18446744073709551615 8 LessThan 339 23 339 31 212 1 : 339 31 339 32 18446744073709551615 6 return 340 3 340 9 18446744073709551615 11 L"LessThan" 340 10 340 21 18446744073709551615 1 ; 340 21 340 22 18446744073709551615 4 case 341 2 341 6 18446744073709551615 14 ExpressionKind 341 7 341 21 6 2 :: 341 21 341 23 18446744073709551615 18 GreaterThanOrEqual 341 23 341 41 218 1 : 341 41 341 42 18446744073709551615 6 return 342 3 342 9 18446744073709551615 21 L"GreaterThanOrEqual" 342 10 342 31 18446744073709551615 1 ; 342 31 342 32 18446744073709551615 4 case 343 2 343 6 18446744073709551615 14 ExpressionKind 343 7 343 21 6 2 :: 343 21 343 23 18446744073709551615 15 LessThanOrEqual 343 23 343 38 224 1 : 343 38 343 39 18446744073709551615 6 return 344 3 344 9 18446744073709551615 18 L"LessThanOrEqual" 344 10 344 28 18446744073709551615 1 ; 344 28 344 29 18446744073709551615 4 case 345 2 345 6 18446744073709551615 14 ExpressionKind 345 7 345 21 6 2 :: 345 21 345 23 18446744073709551615 5 Equal 345 23 345 28 230 1 : 345 28 345 29 18446744073709551615 6 return 346 3 346 9 18446744073709551615 8 L"Equal" 346 10 346 18 18446744073709551615 1 ; 346 18 346 19 18446744073709551615 4 case 347 2 347 6 18446744073709551615 14 ExpressionKind 347 7 347 21 6 2 :: 347 21 347 23 18446744073709551615 8 NotEqual 347 23 347 31 236 1 : 347 31 347 32 18446744073709551615 6 return 348 3 348 9 18446744073709551615 11 L"NotEqual" 348 10 348 21 18446744073709551615 1 ; 348 21 348 22 18446744073709551615 4 case 349 2 349 6 18446744073709551615 14 ExpressionKind 349 7 349 21 6 2 :: 349 21 349 23 18446744073709551615 8 Constant 349 23 349 31 16 1 : 349 31 349 32 18446744073709551615 6 return 350 3 350 9 18446744073709551615 11 L"Constant" 350 10 350 21 18446744073709551615 1 ; 350 21 350 22 18446744073709551615 4 case 351 2 351 6 18446744073709551615 14 ExpressionKind 351 7 351 21 6 2 :: 351 21 351 23 18446744073709551615 9 UnaryPlus 351 23 351 32 159 1 : 351 32 351 33 18446744073709551615 6 return 352 3 352 9 18446744073709551615 12 L"UnaryPlus" 352 10 352 22 18446744073709551615 1 ; 352 22 352 23 18446744073709551615 4 case 353 2 353 6 18446744073709551615 14 ExpressionKind 353 7 353 21 6 2 :: 353 21 353 23 18446744073709551615 10 UnaryMinus 353 23 353 33 164 1 : 353 33 353 34 18446744073709551615 6 return 354 3 354 9 18446744073709551615 13 L"UnaryMinus" 354 10 354 23 18446744073709551615 1 ; 354 23 354 24 18446744073709551615 4 case 355 2 355 6 18446744073709551615 14 ExpressionKind 355 7 355 21 6 2 :: 355 21 355 23 18446744073709551615 3 And 355 23 355 26 242 1 : 355 26 355 27 18446744073709551615 6 return 356 3 356 9 18446744073709551615 6 L"And" 356 10 356 16 18446744073709551615 1 ; 356 16 356 17 18446744073709551615 4 case 357 2 357 6 18446744073709551615 14 ExpressionKind 357 7 357 21 6 2 :: 357 21 357 23 18446744073709551615 2 Or 357 23 357 25 248 1 : 357 25 357 26 18446744073709551615 6 return 358 3 358 9 18446744073709551615 5 L"Or" 358 10 358 15 18446744073709551615 1 ; 358 15 358 16 18446744073709551615 4 case 359 2 359 6 18446744073709551615 14 ExpressionKind 359 7 359 21 6 2 :: 359 21 359 23 18446744073709551615 3 Not 359 23 359 26 169 1 : 359 26 359 27 18446744073709551615 6 return 360 3 360 9 18446744073709551615 6 L"Not" 360 10 360 16 18446744073709551615 1 ; 360 16 360 17 18446744073709551615 4 case 361 2 361 6 18446744073709551615 14 ExpressionKind 361 7 361 21 6 2 :: 361 21 361 23 18446744073709551615 6 DefVar 361 23 361 29 76 1 : 361 29 361 30 18446744073709551615 6 return 362 3 362 9 18446744073709551615 9 L"DefVar" 362 10 362 19 18446744073709551615 1 ; 362 19 362 20 18446744073709551615 4 case 363 2 363 6 18446744073709551615 14 ExpressionKind 363 7 363 21 6 2 :: 363 21 363 23 18446744073709551615 6 DefFun 363 23 363 29 89 1 : 363 29 363 30 18446744073709551615 6 return 364 3 364 9 18446744073709551615 9 L"DefFun" 364 10 364 19 18446744073709551615 1 ; 364 19 364 20 18446744073709551615 4 case 365 2 365 6 18446744073709551615 14 ExpressionKind 365 7 365 21 6 2 :: 365 21 365 23 18446744073709551615 6 IfThen 365 23 365 29 56 1 : 365 29 365 30 18446744073709551615 6 return 366 3 366 9 18446744073709551615 9 L"IfThen" 366 10 366 19 18446744073709551615 1 ; 366 19 366 20 18446744073709551615 4 case 367 2 367 6 18446744073709551615 14 ExpressionKind 367 7 367 21 6 2 :: 367 21 367 23 18446744073709551615 10 IfThenElse 367 23 367 33 65 1 : 367 33 367 34 18446744073709551615 6 return 368 3 368 9 18446744073709551615 13 L"IfThenElse" 368 10 368 23 18446744073709551615 1 ; 368 23 368 24 18446744073709551615 4 case 369 2 369 6 18446744073709551615 14 ExpressionKind 369 7 369 21 6 2 :: 369 21 369 23 18446744073709551615 9 Parameter 369 23 369 32 105 1 : 369 32 369 33 18446744073709551615 6 return 370 3 370 9 18446744073709551615 12 L"Parameter" 370 10 370 22 18446744073709551615 1 ; 370 22 370 23 18446744073709551615 4 case 371 2 371 6 18446744073709551615 14 ExpressionKind 371 7 371 21 6 2 :: 371 21 371 23 18446744073709551615 8 Variable 371 23 371 31 119 1 : 371 31 371 32 18446744073709551615 6 return 372 3 372 9 18446744073709551615 11 L"Variable" 372 10 372 21 18446744073709551615 1 ; 372 21 372 22 18446744073709551615 4 case 373 2 373 6 18446744073709551615 14 ExpressionKind 373 7 373 21 6 2 :: 373 21 373 23 18446744073709551615 4 Call 373 23 373 27 112 1 : 373 27 373 28 18446744073709551615 6 return 374 3 374 9 18446744073709551615 7 L"Call" 374 10 374 17 18446744073709551615 1 ; 374 17 374 18 18446744073709551615 4 case 375 2 375 6 18446744073709551615 14 ExpressionKind 375 7 375 21 6 2 :: 375 21 375 23 18446744073709551615 5 Block 375 23 375 28 49 1 : 375 28 375 29 18446744073709551615 6 return 376 3 376 9 18446744073709551615 8 L"Block" 376 10 376 18 18446744073709551615 1 ; 376 18 376 19 18446744073709551615 4 case 377 2 377 6 18446744073709551615 14 ExpressionKind 377 7 377 21 6 2 :: 377 21 377 23 18446744073709551615 6 Assign 377 23 377 29 40 1 : 377 29 377 30 18446744073709551615 6 return 378 3 378 9 18446744073709551615 9 L"Assign" 378 10 378 19 18446744073709551615 1 ; 378 19 378 20 18446744073709551615 4 case 379 2 379 6 18446744073709551615 14 ExpressionKind 379 7 379 21 6 2 :: 379 21 379 23 18446744073709551615 6 Return 379 23 379 29 125 1 : 379 29 379 30 18446744073709551615 6 return 380 3 380 9 18446744073709551615 9 L"Return" 380 10 380 19 18446744073709551615 1 ; 380 19 380 20 18446744073709551615 4 case 381 2 381 6 18446744073709551615 14 ExpressionKind 381 7 381 21 6 2 :: 381 21 381 23 18446744073709551615 5 While 381 23 381 28 132 1 : 381 28 381 29 18446744073709551615 6 return 382 3 382 9 18446744073709551615 8 L"While" 382 10 382 18 18446744073709551615 1 ; 382 18 382 19 18446744073709551615 7 default 383 2 383 9 18446744073709551615 1 : 383 9 383 10 18446744073709551615 5 throw 384 3 384 8 18446744073709551615 7 wstring 384 9 384 16 37 1 ( 384 16 384 17 42 8 L"error" 384 17 384 25 18446744073709551615 1 ) 384 25 384 26 42 1 ; 384 26 384 27 18446744073709551615 1 } 385 2 385 3 18446744073709551615 1 } 386 1 386 2 18446744073709551615 0 0 322 0 0 0 22 0 0 1 3 0 3 std 49 1 3 0 11 make_shared 4 1 3 0 10 Expression 20 1 3 0 7 int32_t 10 1 3 0 75 3:32:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 75 3:46:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 5 1 3 0 14 ExpressionKind 10 1 3 0 75 3:69:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 6 1 3 0 15 line:Expression 6 1 3 0 17 column:Expression 6 1 3 0 15 kind:Expression 4 1 3 0 18 ConstantExpression 10 1 3 0 75 9:48:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 75 9:62:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 4 1 3 0 7 any:std 10 1 3 0 75 9:74:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 7 1 3 0 23 Constant:ExpressionKind 6 1 3 0 24 value:ConstantExpression 4 1 3 0 15 UnaryExpression 10 1 3 0 76 15:42:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 76 15:56:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 76 16:25:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 36 1 3 0 6 ExpPtr 10 1 3 0 76 16:38:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 6 1 3 0 23 operand:UnaryExpression 24 1 3 0 14 shared_ptr:std 4 1 3 0 16 BinaryExpression 10 1 3 0 76 22:44:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 76 22:58:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 76 23:27:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 76 23:40:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 76 24:19:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 6 1 3 0 21 left:BinaryExpression 6 1 3 0 22 right:BinaryExpression 4 1 3 0 16 AssignExpression 10 1 3 0 76 31:44:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 76 31:58:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 20 1 3 0 19 wstring:__cxx11:std 10 1 3 0 76 31:74:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 76 32:19:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 7 1 3 0 21 Assign:ExpressionKind 6 1 3 0 21 name:AssignExpression 24 1 3 0 24 basic_string:__cxx11:std 6 1 3 0 22 value:AssignExpression 4 1 3 0 15 BlockExpression 10 1 3 0 76 39:42:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 76 39:56:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 31 1 3 0 10 vector:std 10 1 3 0 76 40:25:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 7 1 3 0 20 Block:ExpressionKind 6 1 3 0 27 expressions:BlockExpression 4 1 3 0 16 IfThenExpression 10 1 3 0 76 46:44:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 76 46:58:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 76 47:19:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 76 47:37:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 7 1 3 0 21 IfThen:ExpressionKind 6 1 3 0 26 condition:IfThenExpression 6 1 3 0 23 ifTrue:IfThenExpression 4 1 3 0 20 IfThenElseExpression 10 1 3 0 76 54:52:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 76 54:66:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 76 55:21:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 76 55:39:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 76 56:21:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 7 1 3 0 25 IfThenElse:ExpressionKind 6 1 3 0 30 condition:IfThenElseExpression 6 1 3 0 27 ifTrue:IfThenElseExpression 6 1 3 0 28 ifFalse:IfThenElseExpression 4 1 3 0 16 DefVarExpression 10 1 3 0 76 64:44:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 76 64:58:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 76 64:74:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 4 1 3 0 4 Type 10 1 3 0 76 65:17:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 76 65:30:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 7 1 3 0 21 DefVar:ExpressionKind 6 1 3 0 21 name:DefVarExpression 6 1 3 0 22 value:DefVarExpression 6 1 3 0 15 type:Expression 21 1 3 0 14 operator=:Type 4 1 3 0 16 DefFunExpression 10 1 3 0 76 73:44:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 76 73:58:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 76 73:74:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 36 1 3 0 15 ParameterExpPtr 10 1 3 0 76 74:36:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 76 75:19:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 76 75:30:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 7 1 3 0 21 DefFun:ExpressionKind 6 1 3 0 21 name:DefFunExpression 6 1 3 0 27 parameters:DefFunExpression 6 1 3 0 21 body:DefFunExpression 6 1 3 0 27 returnType:DefFunExpression 9 1 3 0 76 82:15:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 21 1 3 0 18 reserve:vector:std 21 1 3 0 15 size:vector:std 9 1 3 0 76 84:24:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 21 1 3 0 37 operator*:__normal_iterator:__gnu_cxx 21 1 3 0 20 push_back:vector:std 4 1 3 0 19 ParameterExpression 10 1 3 0 76 91:50:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 76 91:64:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 76 92:20:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 76 92:31:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 7 1 3 0 24 Parameter:ExpressionKind 6 1 3 0 24 name:ParameterExpression 4 1 3 0 14 CallExpression 10 1 3 0 76 99:40:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 76 99:54:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 76 99:69:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 100:26:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 7 1 3 0 19 Call:ExpressionKind 6 1 3 0 23 function:CallExpression 6 1 3 0 24 arguments:CallExpression 4 1 3 0 18 VariableExpression 10 1 3 0 77 107:48:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 107:62:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 108:21:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 7 1 3 0 23 Variable:ExpressionKind 6 1 3 0 23 name:VariableExpression 4 1 3 0 16 ReturnExpression 10 1 3 0 77 113:44:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 113:58:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 113:73:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 7 1 3 0 21 Return:ExpressionKind 6 1 3 0 22 value:ReturnExpression 4 1 3 0 15 WhileExpression 10 1 3 0 77 118:42:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 118:56:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 118:71:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 119:17:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 7 1 3 0 20 While:ExpressionKind 6 1 3 0 25 condition:WhileExpression 6 1 3 0 20 body:WhileExpression 21 2 3 0 17 Accept:Expression 25 Accept:ConstantExpression 4 1 3 0 18 Visitor:Expression 10 1 3 0 77 125:54:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 21 1 3 0 24 Visit:Visitor:Expression 10 1 3 0 77 129:51:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 133:52:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 137:52:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 141:51:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 145:52:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 149:56:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 153:52:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 157:52:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 161:55:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 165:50:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 169:54:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 173:52:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 177:51:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 36 1 3 0 11 UnaryExpPtr 22 1 3 0 3 Ast 8 1 3 0 13 UnaryPlus:Ast 10 1 3 0 77 181:36:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 181:50:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 181:65:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 8 1 3 0 15 make_shared:std 7 1 3 0 24 UnaryPlus:ExpressionKind 8 1 3 0 14 UnaryMinus:Ast 10 1 3 0 77 186:37:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 186:51:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 186:66:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 7 1 3 0 25 UnaryMinus:ExpressionKind 8 1 3 0 7 Not:Ast 10 1 3 0 77 191:30:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 191:44:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 191:59:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 7 1 3 0 18 Not:ExpressionKind 36 1 3 0 12 BinaryExpPtr 8 1 3 0 7 Add:Ast 10 1 3 0 77 196:31:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 196:45:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 196:60:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 196:71:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 7 1 3 0 18 Add:ExpressionKind 8 1 3 0 12 Subtract:Ast 10 1 3 0 77 201:36:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 201:50:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 201:65:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 201:76:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 7 1 3 0 23 Subtract:ExpressionKind 8 1 3 0 12 Multiply:Ast 10 1 3 0 77 206:36:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 206:50:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 206:65:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 206:76:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 7 1 3 0 23 Multiply:ExpressionKind 8 1 3 0 10 Divide:Ast 10 1 3 0 77 211:34:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 211:48:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 211:63:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 211:74:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 7 1 3 0 21 Divide:ExpressionKind 8 1 3 0 10 Modulo:Ast 10 1 3 0 77 216:34:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 216:48:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 216:63:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 216:74:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 7 1 3 0 21 Modulo:ExpressionKind 8 1 3 0 15 GreaterThan:Ast 10 1 3 0 77 221:39:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 221:53:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 221:68:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 222:17:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 7 1 3 0 26 GreaterThan:ExpressionKind 8 1 3 0 12 LessThan:Ast 10 1 3 0 77 227:36:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 227:50:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 227:65:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 227:76:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 7 1 3 0 23 LessThan:ExpressionKind 8 1 3 0 22 GreaterThanOrEqual:Ast 10 1 3 0 77 232:46:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 232:60:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 232:75:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 233:18:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 7 1 3 0 33 GreaterThanOrEqual:ExpressionKind 8 1 3 0 19 LessThanOrEqual:Ast 10 1 3 0 77 238:43:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 238:57:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 238:72:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 239:18:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 7 1 3 0 30 LessThanOrEqual:ExpressionKind 8 1 3 0 9 Equal:Ast 10 1 3 0 77 244:33:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 244:47:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 244:62:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 244:73:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 7 1 3 0 20 Equal:ExpressionKind 8 1 3 0 12 NotEqual:Ast 10 1 3 0 77 249:36:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 249:50:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 249:65:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 249:76:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 7 1 3 0 23 NotEqual:ExpressionKind 8 1 3 0 7 And:Ast 10 1 3 0 77 254:31:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 254:45:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 254:60:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 254:71:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 7 1 3 0 18 And:ExpressionKind 8 1 3 0 6 Or:Ast 10 1 3 0 77 259:30:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 259:44:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 259:59:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 259:70:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 7 1 3 0 17 Or:ExpressionKind 36 1 3 0 14 ConstantExpPtr 8 1 3 0 12 Constant:Ast 10 1 3 0 77 264:38:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 264:52:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 264:69:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 36 1 3 0 12 DefVarExpPtr 8 1 3 0 18 DefineVariable:Ast 10 1 3 0 77 268:42:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 268:56:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 268:72:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 269:15:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 269:28:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 36 1 3 0 13 DefFuncExpPtr 8 1 3 0 18 DefineFunction:Ast 10 1 3 0 77 273:43:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 273:57:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 273:73:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 274:35:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 275:18:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 275:29:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 36 1 3 0 10 CallExpPtr 8 1 3 0 8 Call:Ast 10 1 3 0 77 280:30:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 280:44:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 280:59:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 281:22:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 36 1 3 0 14 VariableExpPtr 8 1 3 0 12 Variable:Ast 10 1 3 0 77 285:38:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 285:52:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 285:68:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 36 1 3 0 11 BlockExpPtr 8 1 3 0 9 Block:Ast 10 1 3 0 77 289:32:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 289:46:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 289:69:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 36 1 3 0 12 AssignExpPtr 8 1 3 0 10 Assign:Ast 10 1 3 0 77 293:34:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 293:48:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 293:64:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 294:15:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 36 1 3 0 12 IfThenExpPtr 8 1 3 0 10 IfThen:Ast 10 1 3 0 77 298:34:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 298:48:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 298:63:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 299:15:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 36 1 3 0 16 IfThenElseExpPtr 8 1 3 0 14 IfThenElse:Ast 10 1 3 0 77 303:42:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 303:56:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 303:71:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 304:17:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 304:32:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 8 1 3 0 13 Parameter:Ast 10 1 3 0 77 309:40:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 309:54:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 309:70:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 310:16:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 36 1 3 0 12 ReturnExpPtr 8 1 3 0 10 Return:Ast 10 1 3 0 77 314:34:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 314:48:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 314:63:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 36 1 3 0 11 WhileExpPtr 8 1 3 0 9 While:Ast 10 1 3 0 77 318:32:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 318:46:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 318:61:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 10 1 3 0 77 319:16:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 8 1 3 0 22 ExpressionKindToString 10 1 3 0 77 323:47:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 0 0 3 0 0 0 70 /home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.cpp 1529891521 70 /home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 1529891390 64 /home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Type.hpp 1529762159