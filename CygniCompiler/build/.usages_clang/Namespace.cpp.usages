22 serialization::archive 16 0 0 0 0 55 /home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler 61 /home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/build 0 0 823 0 0 0 1 # 1 1 1 2 18446744073709551615 7 include 1 2 1 9 18446744073709551615 15 "Namespace.hpp" 1 10 1 25 18446744073709551615 5 using 2 1 2 6 18446744073709551615 3 std 2 7 2 10 0 2 :: 2 10 2 12 18446744073709551615 11 make_shared 2 12 2 23 1 1 ; 2 23 2 24 18446744073709551615 13 LocalVariable 3 1 3 14 2 2 :: 3 14 3 16 2 13 LocalVariable 3 16 3 29 2 1 ( 3 29 3 30 2 1 ) 3 30 3 31 2 1 { 4 1 4 2 18446744073709551615 1 } 5 1 5 2 18446744073709551615 13 LocalVariable 6 1 6 14 2 2 :: 6 14 6 16 2 13 LocalVariable 6 16 6 29 2 1 ( 6 29 6 30 2 7 wstring 6 30 6 37 3 4 name 6 38 6 42 4 1 , 6 42 6 43 2 4 Type 6 44 6 48 5 4 type 6 49 6 53 6 1 , 6 53 6 54 2 6 ExpPtr 6 55 6 61 7 5 value 6 62 6 67 8 1 ) 6 67 6 68 2 1 : 7 2 7 3 2 4 name 7 4 7 8 9 1 { 7 8 7 9 10 4 name 7 9 7 13 4 1 } 7 13 7 14 10 1 , 8 2 8 3 2 4 type 8 4 8 8 11 1 { 8 8 8 9 5 4 type 8 9 8 13 6 1 } 8 13 8 14 5 1 , 9 2 9 3 2 5 value 9 4 9 9 12 1 { 9 9 9 10 13 5 value 9 10 9 15 8 1 } 9 15 9 16 13 1 { 10 1 10 2 18446744073709551615 1 } 11 1 11 2 18446744073709551615 5 Field 12 1 12 6 14 2 :: 12 6 12 8 14 5 Field 12 8 12 13 14 1 ( 12 13 12 14 14 1 ) 12 14 12 15 14 1 { 13 1 13 2 18446744073709551615 1 } 14 1 14 2 18446744073709551615 5 Field 15 1 15 6 14 2 :: 15 6 15 8 14 5 Field 15 8 15 13 14 1 ( 15 13 15 14 14 14 AccessModifier 15 14 15 28 15 8 modifier 15 29 15 37 16 1 , 15 37 15 38 14 7 wstring 15 39 15 46 3 4 name 15 47 15 51 17 1 , 15 51 15 52 14 4 Type 15 53 15 57 5 4 type 15 58 15 62 18 1 , 15 62 15 63 14 6 ExpPtr 15 64 15 70 7 5 value 15 71 15 76 19 1 ) 15 76 15 77 14 1 : 16 2 16 3 14 8 modifier 16 4 16 12 20 1 { 16 12 16 13 18446744073709551615 8 modifier 16 13 16 21 16 1 } 16 21 16 22 18446744073709551615 1 , 17 2 17 3 14 4 name 17 4 17 8 21 1 { 17 8 17 9 10 4 name 17 9 17 13 17 1 } 17 13 17 14 10 1 , 18 2 18 3 14 4 type 18 4 18 8 22 1 { 18 8 18 9 5 4 type 18 9 18 13 18 1 } 18 13 18 14 5 1 , 19 2 19 3 14 5 value 19 4 19 9 23 1 { 19 9 19 10 13 5 value 19 10 19 15 19 1 } 19 15 19 16 13 1 { 20 1 20 2 18446744073709551615 1 } 21 1 21 2 18446744073709551615 9 Parameter 22 1 22 10 24 2 :: 22 10 22 12 24 9 Parameter 22 12 22 21 24 1 ( 22 21 22 22 24 1 ) 22 22 22 23 24 1 { 23 1 23 2 18446744073709551615 1 } 24 1 24 2 18446744073709551615 9 Parameter 25 1 25 10 24 2 :: 25 10 25 12 24 9 Parameter 25 12 25 21 24 1 ( 25 21 25 22 24 7 wstring 25 22 25 29 3 4 name 25 30 25 34 25 1 , 25 34 25 35 24 4 Type 25 36 25 40 5 4 type 25 41 25 45 26 1 ) 25 45 25 46 24 1 : 26 2 26 3 24 4 name 26 4 26 8 27 1 { 26 8 26 9 10 4 name 26 9 26 13 25 1 } 26 13 26 14 10 1 , 27 2 27 3 24 4 type 27 4 27 8 28 1 { 27 8 27 9 5 4 type 27 9 27 13 26 1 } 27 13 27 14 5 1 { 28 1 28 2 18446744073709551615 1 } 29 1 29 2 18446744073709551615 8 Function 30 1 30 9 29 2 :: 30 9 30 11 29 8 Function 30 11 30 19 29 1 ( 30 19 30 20 29 1 ) 30 20 30 21 29 1 { 31 1 31 2 18446744073709551615 1 } 32 1 32 2 18446744073709551615 8 Function 33 1 33 9 29 2 :: 33 9 33 11 29 8 Function 33 11 33 19 29 1 ( 33 19 33 20 29 14 AccessModifier 33 20 33 34 15 8 modifier 33 35 33 43 30 1 , 33 43 33 44 29 7 wstring 33 45 33 52 3 4 name 33 53 33 57 31 1 , 33 57 33 58 29 6 vector 34 8 34 14 32 1 < 34 14 34 15 18446744073709551615 9 Parameter 34 15 34 24 24 1 > 34 24 34 25 18446744073709551615 10 parameters 34 26 34 36 33 1 , 34 36 34 37 29 6 vector 35 8 35 14 32 1 < 35 14 35 15 18446744073709551615 13 LocalVariable 35 15 35 28 2 1 > 35 28 35 29 18446744073709551615 9 variables 35 30 35 39 34 1 , 35 39 35 40 29 6 vector 35 41 35 47 32 1 < 35 47 35 48 18446744073709551615 6 ExpPtr 35 48 35 54 7 1 > 35 54 35 55 18446744073709551615 11 expressions 35 56 35 67 35 1 , 35 67 35 68 29 4 Type 36 8 36 12 5 10 returnType 36 13 36 23 36 1 ) 36 23 36 24 29 1 : 37 2 37 3 29 8 modifier 37 4 37 12 37 1 { 37 12 37 13 18446744073709551615 8 modifier 37 13 37 21 30 1 } 37 21 37 22 18446744073709551615 1 , 38 2 38 3 29 4 name 38 4 38 8 38 1 { 38 8 38 9 10 4 name 38 9 38 13 31 1 } 38 13 38 14 10 1 , 39 2 39 3 29 10 parameters 39 4 39 14 39 1 { 39 14 39 15 32 10 parameters 39 15 39 25 33 1 } 39 25 39 26 32 1 , 40 2 40 3 29 9 variables 40 4 40 13 40 1 { 40 13 40 14 32 9 variables 40 14 40 23 34 1 } 40 23 40 24 32 1 , 41 2 41 3 29 11 expressions 41 4 41 15 41 1 { 41 15 41 16 32 11 expressions 41 16 41 27 35 1 } 41 27 41 28 32 1 , 42 2 42 3 29 10 returnType 42 4 42 14 42 1 { 42 14 42 15 5 10 returnType 42 15 42 25 36 1 } 42 25 42 26 5 1 { 43 1 43 2 18446744073709551615 6 vector 44 2 44 8 32 1 < 44 8 44 9 18446744073709551615 4 Type 44 9 44 13 5 1 > 44 13 44 14 18446744073709551615 5 types 44 15 44 20 43 1 ; 44 20 44 21 18446744073709551615 5 types 45 2 45 7 43 1 . 45 7 45 8 44 7 reserve 45 8 45 15 44 1 ( 45 15 45 16 44 10 parameters 45 16 45 26 33 1 . 45 26 45 27 45 4 size 45 27 45 31 45 1 ( 45 31 45 32 45 1 ) 45 32 45 33 45 1 + 45 34 45 35 18446744073709551615 1 1 45 36 45 37 18446744073709551615 1 ) 45 37 45 38 44 1 ; 45 38 45 39 18446744073709551615 3 for 46 2 46 5 18446744073709551615 1 ( 46 6 46 7 18446744073709551615 3 int 46 7 46 10 18446744073709551615 1 i 46 11 46 12 46 1 = 46 13 46 14 18446744073709551615 1 0 46 15 46 16 18446744073709551615 1 , 46 16 46 17 18446744073709551615 1 n 46 18 46 19 47 1 = 46 20 46 21 18446744073709551615 10 parameters 46 22 46 32 33 1 . 46 32 46 33 45 4 size 46 33 46 37 45 1 ( 46 37 46 38 45 1 ) 46 38 46 39 45 1 ; 46 39 46 40 18446744073709551615 1 i 46 41 46 42 46 1 < 46 43 46 44 18446744073709551615 1 n 46 45 46 46 47 1 ; 46 46 46 47 18446744073709551615 1 i 46 48 46 49 46 2 ++ 46 49 46 51 18446744073709551615 1 ) 46 51 46 52 18446744073709551615 1 { 47 2 47 3 18446744073709551615 5 types 48 3 48 8 43 1 . 48 8 48 9 48 9 push_back 48 9 48 18 48 1 ( 48 18 48 19 48 10 parameters 48 19 48 29 33 1 . 48 29 48 30 49 2 at 48 30 48 32 49 1 ( 48 32 48 33 49 1 i 48 33 48 34 46 1 ) 48 34 48 35 49 1 . 48 35 48 36 18446744073709551615 4 type 48 36 48 40 28 1 ) 48 40 48 41 48 1 ; 48 41 48 42 18446744073709551615 1 } 49 2 49 3 18446744073709551615 5 types 50 2 50 7 43 1 . 50 7 50 8 48 9 push_back 50 8 50 17 48 1 ( 50 17 50 18 48 10 returnType 50 18 50 28 36 1 ) 50 28 50 29 48 1 ; 50 29 50 30 18446744073709551615 4 this 51 2 51 6 18446744073709551615 2 -> 51 6 51 8 18446744073709551615 12 functionType 51 8 51 20 50 1 = 51 21 51 22 51 4 Type 51 23 51 27 5 2 :: 51 27 51 29 52 8 Function 51 29 51 37 52 1 ( 51 37 51 38 52 5 types 51 38 51 43 43 1 ) 51 43 51 44 52 1 ; 51 44 51 45 18446744073709551615 1 } 52 1 52 2 18446744073709551615 6 Module 53 1 53 7 53 2 :: 53 7 53 9 53 6 Module 53 9 53 15 53 1 ( 53 15 53 16 53 1 ) 53 16 53 17 53 1 { 54 1 54 2 18446744073709551615 1 } 55 1 55 2 18446744073709551615 6 Module 56 1 56 7 53 2 :: 56 7 56 9 53 6 Module 56 9 56 15 53 1 ( 56 15 56 16 53 14 AccessModifier 56 16 56 30 15 8 modifier 56 31 56 39 54 1 , 56 39 56 40 53 4 Type 56 41 56 45 5 4 type 56 46 56 50 55 1 , 56 50 56 51 53 6 vector 56 52 56 58 32 1 < 56 58 56 59 18446744073709551615 5 Field 56 59 56 64 14 1 > 56 64 56 65 18446744073709551615 6 fields 56 66 56 72 56 1 , 56 72 56 73 53 13 unordered_map 57 7 57 20 57 1 < 57 20 57 21 18446744073709551615 7 wstring 57 21 57 28 3 1 , 57 28 57 29 18446744073709551615 8 Function 57 30 57 38 29 1 > 57 38 57 39 18446744073709551615 9 functions 57 40 57 49 58 1 ) 57 49 57 50 53 1 : 58 2 58 3 53 8 modifier 58 4 58 12 59 1 { 58 12 58 13 18446744073709551615 8 modifier 58 13 58 21 54 1 } 58 21 58 22 18446744073709551615 1 , 59 2 59 3 53 4 type 59 4 59 8 60 1 { 59 8 59 9 5 4 type 59 9 59 13 55 1 } 59 13 59 14 5 1 , 60 2 60 3 53 6 fields 60 4 60 10 61 1 { 60 10 60 11 32 6 fields 60 11 60 17 56 1 } 60 17 60 18 32 1 , 61 2 61 3 53 9 functions 61 4 61 13 62 1 { 61 13 61 14 57 9 functions 61 14 61 23 58 1 } 61 23 61 24 57 1 { 62 1 62 2 18446744073709551615 3 for 63 2 63 5 18446744073709551615 1 ( 63 6 63 7 18446744073709551615 5 Field 63 7 63 12 14 5 field 63 13 63 18 63 1 : 63 19 63 20 64 6 fields 63 21 63 27 56 1 ) 63 27 63 28 18446744073709551615 1 { 64 2 64 3 18446744073709551615 8 fieldMap 65 3 65 11 65 1 . 65 11 65 12 66 6 insert 65 12 65 18 66 1 ( 65 18 65 19 66 1 { 65 19 65 20 67 5 field 65 20 65 25 63 1 . 65 25 65 26 18446744073709551615 4 name 65 26 65 30 21 1 , 65 30 65 31 67 5 field 65 32 65 37 63 1 } 65 37 65 38 67 1 ) 65 38 65 39 66 1 ; 65 39 65 40 18446744073709551615 1 } 66 2 66 3 18446744073709551615 1 } 67 1 67 2 18446744073709551615 5 Class 68 1 68 6 68 2 :: 68 6 68 8 68 5 Class 68 8 68 13 68 1 ( 68 13 68 14 68 1 ) 68 14 68 15 68 1 { 69 1 69 2 18446744073709551615 1 } 70 1 70 2 18446744073709551615 5 Class 71 1 71 6 68 2 :: 71 6 71 8 68 5 Class 71 8 71 13 68 1 ( 71 13 71 14 68 14 AccessModifier 71 14 71 28 15 8 modifier 71 29 71 37 69 1 , 71 37 71 38 68 4 Type 71 39 71 43 5 4 type 71 44 71 48 70 1 , 71 48 71 49 68 6 vector 71 50 71 56 32 1 < 71 56 71 57 18446744073709551615 5 Field 71 57 71 62 14 1 > 71 62 71 63 18446744073709551615 6 fields 71 64 71 70 71 1 , 71 70 71 71 68 13 unordered_map 72 5 72 18 57 1 < 72 18 72 19 18446744073709551615 7 wstring 72 19 72 26 3 1 , 72 26 72 27 18446744073709551615 8 Function 72 28 72 36 29 1 > 72 36 72 37 18446744073709551615 9 functions 72 38 72 47 72 1 , 72 47 72 48 68 13 unordered_map 73 5 73 18 57 1 < 73 18 73 19 18446744073709551615 7 wstring 73 19 73 26 3 1 , 73 26 73 27 18446744073709551615 8 Function 73 28 73 36 29 1 > 73 36 73 37 18446744073709551615 12 constructors 73 38 73 50 73 1 ) 73 50 73 51 68 1 : 74 2 74 3 68 8 modifier 74 4 74 12 74 1 { 74 12 74 13 18446744073709551615 8 modifier 74 13 74 21 69 1 } 74 21 74 22 18446744073709551615 1 , 75 2 75 3 68 4 type 75 4 75 8 75 1 { 75 8 75 9 5 4 type 75 9 75 13 70 1 } 75 13 75 14 5 1 , 76 2 76 3 68 6 fields 76 4 76 10 76 1 { 76 10 76 11 32 6 fields 76 11 76 17 71 1 } 76 17 76 18 32 1 , 77 2 77 3 68 9 functions 77 4 77 13 77 1 { 77 13 77 14 57 9 functions 77 14 77 23 72 1 } 77 23 77 24 57 1 , 78 2 78 3 68 12 constructors 78 4 78 16 78 1 { 78 16 78 17 57 12 constructors 78 17 78 29 73 1 } 78 29 78 30 57 1 { 79 1 79 2 18446744073709551615 3 for 80 2 80 5 18446744073709551615 1 ( 80 6 80 7 18446744073709551615 5 Field 80 7 80 12 14 5 field 80 13 80 18 79 1 : 80 19 80 20 64 6 fields 80 21 80 27 71 1 ) 80 27 80 28 18446744073709551615 1 { 81 2 81 3 18446744073709551615 8 fieldMap 82 3 82 11 80 1 . 82 11 82 12 66 6 insert 82 12 82 18 66 1 ( 82 18 82 19 66 1 { 82 19 82 20 67 5 field 82 20 82 25 79 1 . 82 25 82 26 18446744073709551615 4 name 82 26 82 30 21 1 , 82 30 82 31 67 5 field 82 32 82 37 79 1 } 82 37 82 38 67 1 ) 82 38 82 39 66 1 ; 82 39 82 40 18446744073709551615 1 } 83 2 83 3 18446744073709551615 1 } 84 1 84 2 18446744073709551615 9 Namespace 85 1 85 10 81 2 :: 85 10 85 12 81 9 Namespace 85 12 85 21 81 1 ( 85 21 85 22 81 1 ) 85 22 85 23 81 1 { 86 1 86 2 18446744073709551615 1 } 87 1 87 2 18446744073709551615 8 CodeFile 88 1 88 9 82 2 :: 88 9 88 11 82 8 CodeFile 88 11 88 19 82 1 ( 88 19 88 20 82 6 string 88 20 88 26 83 4 path 88 27 88 31 84 1 , 88 31 88 32 82 6 vector 88 33 88 39 32 1 < 88 39 88 40 18446744073709551615 7 wstring 88 40 88 47 3 1 > 88 47 88 48 18446744073709551615 2 ns 88 49 88 51 85 1 , 88 51 88 52 82 13 unordered_map 89 8 89 21 57 1 < 89 21 89 22 18446744073709551615 7 wstring 89 22 89 29 3 1 , 89 29 89 30 18446744073709551615 6 Module 89 31 89 37 53 1 > 89 37 89 38 18446744073709551615 7 modules 89 39 89 46 86 1 , 89 46 89 47 82 13 unordered_map 90 8 90 21 57 1 < 90 21 90 22 18446744073709551615 7 wstring 90 22 90 29 3 1 , 90 29 90 30 18446744073709551615 5 Class 90 31 90 36 68 1 > 90 36 90 37 18446744073709551615 7 classes 90 38 90 45 87 1 , 90 45 90 46 82 13 unordered_map 91 8 91 21 57 1 < 91 21 91 22 18446744073709551615 7 wstring 91 22 91 29 3 1 , 91 29 91 30 18446744073709551615 10 shared_ptr 91 31 91 41 13 1 < 91 41 91 42 18446744073709551615 9 Namespace 91 42 91 51 81 2 >> 91 51 91 53 18446744073709551615 4 uses 91 54 91 58 88 1 ) 91 58 91 59 82 1 : 92 2 92 3 82 4 path 92 4 92 8 89 1 { 92 8 92 9 10 4 path 92 9 92 13 84 1 } 92 13 92 14 10 1 , 93 2 93 3 82 2 ns 93 4 93 6 90 1 { 93 6 93 7 32 2 ns 93 7 93 9 85 1 } 93 9 93 10 32 1 , 94 2 94 3 82 7 modules 94 4 94 11 91 1 { 94 11 94 12 57 7 modules 94 12 94 19 86 1 } 94 19 94 20 57 1 , 95 2 95 3 82 7 classes 95 4 95 11 92 1 { 95 11 95 12 57 7 classes 95 12 95 19 87 1 } 95 19 95 20 57 1 , 96 2 96 3 82 4 uses 96 4 96 8 93 1 { 96 8 96 9 57 4 uses 96 9 96 13 88 1 } 96 13 96 14 57 1 { 97 1 97 2 18446744073709551615 1 } 98 1 98 2 18446744073709551615 15 NamespaceRecord 99 1 99 16 94 2 :: 99 16 99 18 94 15 NamespaceRecord 99 18 99 33 94 1 ( 99 33 99 34 94 1 ) 99 34 99 35 94 1 { 100 1 100 2 18446744073709551615 1 } 101 1 101 2 18446744073709551615 4 void 102 1 102 5 18446744073709551615 15 NamespaceRecord 102 6 102 21 94 2 :: 102 21 102 23 95 7 AddFile 102 23 102 30 95 1 ( 102 30 102 31 95 8 CodeFile 102 31 102 39 82 1 & 102 39 102 40 18446744073709551615 4 file 102 41 102 45 96 1 ) 102 45 102 46 95 1 { 103 1 103 2 18446744073709551615 4 bool 104 2 104 6 18446744073709551615 5 found 104 7 104 12 97 1 = 104 13 104 14 18446744073709551615 6 record 104 15 104 21 98 1 . 104 21 104 22 99 4 find 104 22 104 26 99 1 ( 104 26 104 27 99 4 file 104 27 104 31 96 1 . 104 31 104 32 18446744073709551615 2 ns 104 32 104 34 90 1 . 104 34 104 35 100 5 front 104 35 104 40 100 1 ( 104 40 104 41 100 1 ) 104 41 104 42 100 1 ) 104 42 104 43 99 2 != 104 44 104 46 101 6 record 104 47 104 53 98 1 . 104 53 104 54 102 3 end 104 54 104 57 102 1 ( 104 57 104 58 102 1 ) 104 58 104 59 102 1 ; 104 59 104 60 18446744073709551615 2 if 105 2 105 4 18446744073709551615 1 ( 105 5 105 6 18446744073709551615 5 found 105 6 105 11 97 1 ) 105 11 105 12 18446744073709551615 1 { 106 2 106 3 18446744073709551615 10 shared_ptr 107 3 107 13 13 1 < 107 13 107 14 18446744073709551615 9 Namespace 107 14 107 23 81 1 > 107 23 107 24 18446744073709551615 5 nsPtr 107 25 107 30 103 1 = 107 31 107 32 18446744073709551615 6 record 107 33 107 39 98 1 [ 107 39 107 40 104 4 file 107 40 107 44 96 1 . 107 44 107 45 18446744073709551615 2 ns 107 45 107 47 90 1 . 107 47 107 48 100 5 front 107 48 107 53 100 1 ( 107 53 107 54 100 1 ) 107 54 107 55 100 1 ] 107 55 107 56 104 1 ; 107 56 107 57 18446744073709551615 3 for 108 3 108 6 18446744073709551615 1 ( 108 7 108 8 18446744073709551615 3 int 108 8 108 11 18446744073709551615 1 i 108 12 108 13 105 1 = 108 14 108 15 18446744073709551615 1 1 108 16 108 17 18446744073709551615 1 , 108 17 108 18 18446744073709551615 4 size 108 19 108 23 106 1 = 108 24 108 25 18446744073709551615 4 file 108 26 108 30 96 1 . 108 30 108 31 18446744073709551615 2 ns 108 31 108 33 90 1 . 108 33 108 34 45 4 size 108 34 108 38 45 1 ( 108 38 108 39 45 1 ) 108 39 108 40 45 1 ; 108 40 108 41 18446744073709551615 1 i 108 42 108 43 105 1 < 108 44 108 45 18446744073709551615 4 size 108 46 108 50 106 1 ; 108 50 108 51 18446744073709551615 1 i 108 52 108 53 105 2 ++ 108 53 108 55 18446744073709551615 1 ) 108 55 108 56 18446744073709551615 1 { 109 3 109 4 18446744073709551615 7 wstring 110 4 110 11 3 5 subNs 110 12 110 17 107 1 = 110 18 110 19 18446744073709551615 4 file 110 20 110 24 96 1 . 110 24 110 25 18446744073709551615 2 ns 110 25 110 27 90 1 . 110 27 110 28 49 2 at 110 28 110 30 49 1 ( 110 30 110 31 49 1 i 110 31 110 32 105 1 ) 110 32 110 33 49 1 ; 110 33 110 34 18446744073709551615 5 found 111 4 111 9 97 1 = 111 10 111 11 18446744073709551615 5 nsPtr 112 5 112 10 103 2 -> 112 10 112 12 18446744073709551615 13 subNamespaces 112 12 112 25 108 1 . 112 25 112 26 99 4 find 112 26 112 30 99 1 ( 112 30 112 31 99 5 subNs 112 31 112 36 107 1 ) 112 36 112 37 99 2 != 112 38 112 40 101 5 nsPtr 112 41 112 46 103 2 -> 112 46 112 48 18446744073709551615 13 subNamespaces 112 48 112 61 108 1 . 112 61 112 62 102 3 end 112 62 112 65 102 1 ( 112 65 112 66 102 1 ) 112 66 112 67 102 1 ; 112 67 112 68 18446744073709551615 2 if 113 4 113 6 18446744073709551615 1 ( 113 7 113 8 18446744073709551615 5 found 113 8 113 13 97 1 ) 113 13 113 14 18446744073709551615 1 { 114 4 114 5 18446744073709551615 5 nsPtr 115 5 115 10 103 1 = 115 11 115 12 109 5 nsPtr 115 13 115 18 103 2 -> 115 18 115 20 18446744073709551615 13 subNamespaces 115 20 115 33 108 1 [ 115 33 115 34 104 5 subNs 115 34 115 39 107 1 ] 115 39 115 40 104 1 ; 115 40 115 41 18446744073709551615 1 } 116 4 116 5 18446744073709551615 4 else 117 4 117 8 18446744073709551615 1 { 118 4 118 5 18446744073709551615 10 shared_ptr 119 5 119 15 13 1 < 119 15 119 16 18446744073709551615 9 Namespace 119 16 119 25 81 1 > 119 25 119 26 18446744073709551615 8 subNsPtr 119 27 119 35 110 1 = 119 36 119 37 18446744073709551615 11 make_shared 119 38 119 49 111 1 < 119 49 119 50 111 9 Namespace 119 50 119 59 81 1 > 119 59 119 60 111 1 ( 119 60 119 61 111 1 ) 119 61 119 62 111 1 ; 119 62 119 63 18446744073709551615 8 subNsPtr 120 5 120 13 110 2 -> 120 13 120 15 18446744073709551615 6 parent 120 15 120 21 112 1 = 120 22 120 23 113 5 nsPtr 120 24 120 29 103 1 ; 120 29 120 30 18446744073709551615 8 subNsPtr 121 5 121 13 110 2 -> 121 13 121 15 18446744073709551615 4 name 121 15 121 19 114 1 = 121 20 121 21 115 5 subNs 121 22 121 27 107 1 ; 121 27 121 28 18446744073709551615 5 nsPtr 122 5 122 10 103 1 = 122 11 122 12 109 8 subNsPtr 122 13 122 21 110 1 ; 122 21 122 22 18446744073709551615 1 } 123 4 123 5 18446744073709551615 1 } 124 3 124 4 18446744073709551615 5 nsPtr 125 3 125 8 103 2 -> 125 8 125 10 18446744073709551615 7 modules 125 10 125 17 116 1 = 125 18 125 19 117 4 file 125 20 125 24 96 1 . 125 24 125 25 18446744073709551615 7 modules 125 25 125 32 91 1 ; 125 32 125 33 18446744073709551615 5 nsPtr 126 3 126 8 103 2 -> 126 8 126 10 18446744073709551615 7 classes 126 10 126 17 118 1 = 126 18 126 19 117 4 file 126 20 126 24 96 1 . 126 24 126 25 18446744073709551615 7 classes 126 25 126 32 92 1 ; 126 32 126 33 18446744073709551615 5 nsPtr 127 3 127 8 103 2 -> 127 8 127 10 18446744073709551615 4 uses 127 10 127 14 119 1 = 127 15 127 16 117 4 file 127 17 127 21 96 1 . 127 21 127 22 18446744073709551615 4 uses 127 22 127 26 93 1 ; 127 26 127 27 18446744073709551615 1 } 128 2 128 3 18446744073709551615 4 else 129 2 129 6 18446744073709551615 1 { 130 2 130 3 18446744073709551615 10 shared_ptr 131 3 131 13 13 1 < 131 13 131 14 18446744073709551615 9 Namespace 131 14 131 23 81 1 > 131 23 131 24 18446744073709551615 5 nsPtr 131 25 131 30 120 1 = 131 31 131 32 18446744073709551615 11 make_shared 131 33 131 44 111 1 < 131 44 131 45 111 9 Namespace 131 45 131 54 81 1 > 131 54 131 55 111 1 ( 131 55 131 56 111 1 ) 131 56 131 57 111 1 ; 131 57 131 58 18446744073709551615 5 nsPtr 132 3 132 8 120 2 -> 132 8 132 10 18446744073709551615 4 name 132 10 132 14 114 1 = 132 15 132 16 115 4 file 132 17 132 21 96 1 . 132 21 132 22 18446744073709551615 2 ns 132 22 132 24 90 1 . 132 24 132 25 100 5 front 132 25 132 30 100 1 ( 132 30 132 31 100 1 ) 132 31 132 32 100 1 ; 132 32 132 33 18446744073709551615 3 for 133 3 133 6 18446744073709551615 1 ( 133 7 133 8 18446744073709551615 3 int 133 8 133 11 18446744073709551615 1 i 133 12 133 13 121 1 = 133 14 133 15 18446744073709551615 1 1 133 16 133 17 18446744073709551615 1 , 133 17 133 18 18446744073709551615 4 size 133 19 133 23 122 1 = 133 24 133 25 18446744073709551615 4 file 133 26 133 30 96 1 . 133 30 133 31 18446744073709551615 2 ns 133 31 133 33 90 1 . 133 33 133 34 45 4 size 133 34 133 38 45 1 ( 133 38 133 39 45 1 ) 133 39 133 40 45 1 ; 133 40 133 41 18446744073709551615 1 i 133 42 133 43 121 1 < 133 44 133 45 18446744073709551615 4 size 133 46 133 50 122 1 ; 133 50 133 51 18446744073709551615 1 i 133 52 133 53 121 2 ++ 133 53 133 55 18446744073709551615 1 ) 133 55 133 56 18446744073709551615 1 { 134 3 134 4 18446744073709551615 7 wstring 135 4 135 11 3 5 subNs 135 12 135 17 123 1 = 135 18 135 19 18446744073709551615 4 file 135 20 135 24 96 1 . 135 24 135 25 18446744073709551615 2 ns 135 25 135 27 90 1 . 135 27 135 28 49 2 at 135 28 135 30 49 1 ( 135 30 135 31 49 1 i 135 31 135 32 121 1 ) 135 32 135 33 49 1 ; 135 33 135 34 18446744073709551615 10 shared_ptr 136 4 136 14 13 1 < 136 14 136 15 18446744073709551615 9 Namespace 136 15 136 24 81 1 > 136 24 136 25 18446744073709551615 8 subNsPtr 136 26 136 34 124 1 = 136 35 136 36 18446744073709551615 11 make_shared 136 37 136 48 111 1 < 136 48 136 49 111 9 Namespace 136 49 136 58 81 1 > 136 58 136 59 111 1 ( 136 59 136 60 111 1 ) 136 60 136 61 111 1 ; 136 61 136 62 18446744073709551615 8 subNsPtr 137 4 137 12 124 2 -> 137 12 137 14 18446744073709551615 6 parent 137 14 137 20 112 1 = 137 21 137 22 113 5 nsPtr 137 23 137 28 120 1 ; 137 28 137 29 18446744073709551615 8 subNsPtr 138 4 138 12 124 2 -> 138 12 138 14 18446744073709551615 4 name 138 14 138 18 114 1 = 138 19 138 20 115 5 subNs 138 21 138 26 123 1 ; 138 26 138 27 18446744073709551615 5 nsPtr 139 4 139 9 120 1 = 139 10 139 11 109 8 subNsPtr 139 12 139 20 124 1 ; 139 20 139 21 18446744073709551615 1 } 140 3 140 4 18446744073709551615 5 nsPtr 141 3 141 8 120 2 -> 141 8 141 10 18446744073709551615 7 modules 141 10 141 17 116 1 = 141 18 141 19 117 4 file 141 20 141 24 96 1 . 141 24 141 25 18446744073709551615 7 modules 141 25 141 32 91 1 ; 141 32 141 33 18446744073709551615 5 nsPtr 142 3 142 8 120 2 -> 142 8 142 10 18446744073709551615 7 classes 142 10 142 17 118 1 = 142 18 142 19 117 4 file 142 20 142 24 96 1 . 142 24 142 25 18446744073709551615 7 classes 142 25 142 32 92 1 ; 142 32 142 33 18446744073709551615 5 nsPtr 143 3 143 8 120 2 -> 143 8 143 10 18446744073709551615 4 uses 143 10 143 14 119 1 = 143 15 143 16 117 4 file 143 17 143 21 96 1 . 143 21 143 22 18446744073709551615 4 uses 143 22 143 26 93 1 ; 143 26 143 27 18446744073709551615 6 record 144 3 144 9 98 1 . 144 9 144 10 66 6 insert 144 10 144 16 66 1 ( 144 16 144 17 66 1 { 144 17 144 18 67 5 nsPtr 144 18 144 23 120 2 -> 144 23 144 25 18446744073709551615 4 name 144 25 144 29 114 1 , 144 29 144 30 67 5 nsPtr 144 31 144 36 120 1 } 144 36 144 37 67 1 ) 144 37 144 38 66 1 ; 144 38 144 39 18446744073709551615 1 } 145 2 145 3 18446744073709551615 1 } 146 1 146 2 18446744073709551615 0 0 125 0 0 0 22 0 0 1 3 0 3 std 49 1 3 0 11 make_shared 4 1 3 0 13 LocalVariable 20 1 3 0 19 wstring:__cxx11:std 10 1 3 0 74 6:38:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Namespace.cpp 4 1 3 0 4 Type 10 1 3 0 74 6:49:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Namespace.cpp 36 1 3 0 6 ExpPtr 10 1 3 0 74 6:62:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Namespace.cpp 6 1 3 0 18 name:LocalVariable 24 1 3 0 24 basic_string:__cxx11:std 6 1 3 0 18 type:LocalVariable 6 1 3 0 19 value:LocalVariable 24 1 3 0 14 shared_ptr:std 4 1 3 0 5 Field 5 1 3 0 14 AccessModifier 10 1 3 0 75 15:29:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Namespace.cpp 10 1 3 0 75 15:47:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Namespace.cpp 10 1 3 0 75 15:58:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Namespace.cpp 10 1 3 0 75 15:71:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Namespace.cpp 6 1 3 0 14 modifier:Field 6 1 3 0 10 name:Field 6 1 3 0 10 type:Field 6 1 3 0 11 value:Field 4 1 3 0 9 Parameter 10 1 3 0 75 25:30:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Namespace.cpp 10 1 3 0 75 25:41:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Namespace.cpp 6 1 3 0 14 name:Parameter 6 1 3 0 14 type:Parameter 4 1 3 0 8 Function 10 1 3 0 75 33:35:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Namespace.cpp 10 1 3 0 75 33:53:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Namespace.cpp 31 1 3 0 10 vector:std 10 1 3 0 75 34:26:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Namespace.cpp 10 1 3 0 75 35:30:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Namespace.cpp 10 1 3 0 75 35:56:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Namespace.cpp 10 1 3 0 75 36:13:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Namespace.cpp 6 1 3 0 17 modifier:Function 6 1 3 0 13 name:Function 6 1 3 0 19 parameters:Function 6 1 3 0 18 variables:Function 6 1 3 0 20 expressions:Function 6 1 3 0 19 returnType:Function 9 1 3 0 75 44:15:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Namespace.cpp 21 1 3 0 18 reserve:vector:std 21 1 3 0 15 size:vector:std 9 1 3 0 75 46:11:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Namespace.cpp 9 1 3 0 75 46:18:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Namespace.cpp 21 1 3 0 20 push_back:vector:std 21 1 3 0 13 at:vector:std 6 1 3 0 21 functionType:Function 21 1 3 0 14 operator=:Type 21 1 3 0 13 Function:Type 4 1 3 0 6 Module 10 1 3 0 75 56:31:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Namespace.cpp 10 1 3 0 75 56:46:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Namespace.cpp 10 1 3 0 75 56:66:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Namespace.cpp 31 1 3 0 17 unordered_map:std 10 1 3 0 75 57:40:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Namespace.cpp 6 1 3 0 15 modifier:Module 6 1 3 0 11 type:Module 6 1 3 0 13 fields:Module 6 1 3 0 16 functions:Module 9 1 3 0 75 63:13:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Namespace.cpp 21 1 3 0 37 operator*:__normal_iterator:__gnu_cxx 6 1 3 0 15 fieldMap:Module 21 1 3 0 24 insert:unordered_map:std 24 1 3 0 8 pair:std 4 1 3 0 5 Class 10 1 3 0 75 71:29:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Namespace.cpp 10 1 3 0 75 71:44:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Namespace.cpp 10 1 3 0 75 71:64:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Namespace.cpp 10 1 3 0 75 72:38:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Namespace.cpp 10 1 3 0 75 73:38:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Namespace.cpp 6 1 3 0 14 modifier:Class 6 1 3 0 10 type:Class 6 1 3 0 12 fields:Class 6 1 3 0 15 functions:Class 6 1 3 0 18 constructors:Class 9 1 3 0 75 80:13:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Namespace.cpp 6 1 3 0 14 fieldMap:Class 4 1 3 0 9 Namespace 4 1 3 0 8 CodeFile 20 1 3 0 18 string:__cxx11:std 10 1 3 0 75 88:27:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Namespace.cpp 10 1 3 0 75 88:49:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Namespace.cpp 10 1 3 0 75 89:39:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Namespace.cpp 10 1 3 0 75 90:38:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Namespace.cpp 10 1 3 0 75 91:54:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Namespace.cpp 6 1 3 0 13 path:CodeFile 6 1 3 0 11 ns:CodeFile 6 1 3 0 16 modules:CodeFile 6 1 3 0 16 classes:CodeFile 6 1 3 0 13 uses:CodeFile 4 1 3 0 15 NamespaceRecord 21 1 3 0 23 AddFile:NamespaceRecord 10 1 3 0 76 102:41:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Namespace.cpp 9 1 3 0 75 104:7:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Namespace.cpp 6 1 3 0 22 record:NamespaceRecord 21 1 3 0 22 find:unordered_map:std 21 1 3 0 16 front:vector:std 8 1 3 0 23 operator!=:__detail:std 21 1 3 0 21 end:unordered_map:std 9 1 3 0 76 107:25:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Namespace.cpp 21 1 3 0 28 operator[]:unordered_map:std 9 1 3 0 76 108:12:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Namespace.cpp 9 1 3 0 76 108:19:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Namespace.cpp 9 1 3 0 76 110:12:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Namespace.cpp 6 1 3 0 23 subNamespaces:Namespace 21 1 3 0 24 operator=:shared_ptr:std 9 1 3 0 76 119:27:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Namespace.cpp 8 1 3 0 15 make_shared:std 6 1 3 0 16 parent:Namespace 21 1 3 0 22 operator=:weak_ptr:std 6 1 3 0 14 name:Namespace 21 1 3 0 34 operator=:basic_string:__cxx11:std 6 1 3 0 17 modules:Namespace 21 1 3 0 27 operator=:unordered_map:std 6 1 3 0 17 classes:Namespace 6 1 3 0 14 uses:Namespace 9 1 3 0 76 131:25:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Namespace.cpp 9 1 3 0 76 133:12:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Namespace.cpp 9 1 3 0 76 133:19:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Namespace.cpp 9 1 3 0 76 135:12:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Namespace.cpp 9 1 3 0 76 136:26:/home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Namespace.cpp 0 0 4 0 0 0 70 /home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Expression.hpp 1530592503 69 /home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Namespace.cpp 1530719878 69 /home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Namespace.hpp 1530611193 64 /home/jasonhe/Documents/MyCode/CPP/JuCi++/CygniCompiler/Type.hpp 1530591912