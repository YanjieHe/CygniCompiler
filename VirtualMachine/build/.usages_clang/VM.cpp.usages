22 serialization::archive 16 0 0 0 0 56 /home/jasonhe/Documents/MyCode/CPP/JuCi++/VirtualMachine 62 /home/jasonhe/Documents/MyCode/CPP/JuCi++/VirtualMachine/build 0 0 3527 0 0 0 1 # 1 1 1 2 18446744073709551615 7 include 1 2 1 9 18446744073709551615 8 "VM.hpp" 1 10 1 18 18446744073709551615 1 # 2 1 2 2 18446744073709551615 7 include 2 2 2 9 18446744073709551615 17 "Instruction.hpp" 2 10 2 27 18446744073709551615 1 # 3 1 3 2 18446744073709551615 7 include 3 2 3 9 18446744073709551615 1 < 3 10 3 11 18446744073709551615 8 iostream 3 11 3 19 18446744073709551615 1 > 3 19 3 20 18446744073709551615 5 using 4 1 4 6 18446744073709551615 3 std 4 7 4 10 0 2 :: 4 10 4 12 18446744073709551615 4 endl 4 12 4 16 1 1 ; 4 16 4 17 18446744073709551615 5 using 5 1 5 6 18446744073709551615 3 std 5 7 5 10 0 2 :: 5 10 5 12 18446744073709551615 5 wcout 5 12 5 17 2 1 ; 5 17 5 18 18446744073709551615 2 VM 6 1 6 3 3 2 :: 6 3 6 5 3 2 VM 6 5 6 7 3 1 ( 6 7 6 8 3 1 ) 6 8 6 9 3 1 : 7 2 7 3 3 5 stack 7 4 7 9 4 1 ( 7 9 7 10 5 14 MAX_STACK_SIZE 7 10 7 24 5 1 ) 7 24 7 25 5 1 { 8 1 8 2 18446744073709551615 1 } 9 1 9 2 18446744073709551615 4 void 10 1 10 5 18446744073709551615 2 VM 10 6 10 8 3 2 :: 10 8 10 10 6 4 Load 10 10 10 14 6 1 ( 10 14 10 15 6 14 ByteCodeReader 10 15 10 29 7 1 & 10 29 10 30 18446744073709551615 6 reader 10 31 10 37 8 1 ) 10 37 10 38 6 1 { 11 1 11 2 18446744073709551615 7 modules 12 2 12 9 9 1 . 12 9 12 10 10 5 clear 12 10 12 15 10 1 ( 12 15 12 16 10 1 ) 12 16 12 17 10 1 ; 12 17 12 18 18446744073709551615 7 classes 13 2 13 9 11 1 . 13 9 13 10 10 5 clear 13 10 13 15 10 1 ( 13 15 13 16 10 1 ) 13 16 13 17 10 1 ; 13 17 13 18 18446744073709551615 7 int32_t 14 2 14 9 12 10 mainModule 14 10 14 20 13 1 = 14 21 14 22 18446744073709551615 6 reader 14 23 14 29 8 1 . 14 29 14 30 14 7 ReadInt 14 30 14 37 14 1 ( 14 37 14 38 14 1 ) 14 38 14 39 14 1 ; 14 39 14 40 18446744073709551615 7 int32_t 15 2 15 9 12 12 mainFunction 15 10 15 22 15 1 = 15 23 15 24 18446744073709551615 6 reader 15 25 15 31 8 1 . 15 31 15 32 16 4 Read 15 32 15 36 16 1 ( 15 36 15 37 16 1 ) 15 37 15 38 16 1 ; 15 38 15 39 18446744073709551615 5 while 16 2 16 7 18446744073709551615 1 ( 16 8 16 9 18446744073709551615 1 ! 16 9 16 10 18446744073709551615 6 reader 16 10 16 16 8 1 . 16 16 16 17 17 5 IsEof 16 17 16 22 17 1 ( 16 22 16 23 17 1 ) 16 23 16 24 17 1 ) 16 24 16 25 18446744073709551615 1 { 17 2 17 3 18446744073709551615 7 int32_t 18 3 18 10 12 1 b 18 11 18 12 18 1 = 18 13 18 14 18446744073709551615 6 reader 18 15 18 21 8 1 . 18 21 18 22 16 4 Read 18 22 18 26 16 1 ( 18 26 18 27 16 1 ) 18 27 18 28 16 1 ; 18 28 18 29 18446744073709551615 2 if 19 3 19 5 18446744073709551615 1 ( 19 6 19 7 18446744073709551615 1 b 19 7 19 8 18 2 == 19 9 19 11 18446744073709551615 1 0 19 12 19 13 18446744073709551615 1 ) 19 13 19 14 18446744073709551615 1 { 20 3 20 4 18446744073709551615 7 modules 21 4 21 11 9 1 . 21 11 21 12 19 9 push_back 21 12 21 21 19 1 ( 21 21 21 22 19 10 LoadModule 21 22 21 32 20 1 ( 21 32 21 33 20 6 reader 21 33 21 39 8 1 ) 21 39 21 40 20 1 ) 21 40 21 41 19 1 ; 21 41 21 42 18446744073709551615 1 } 22 3 22 4 18446744073709551615 4 else 23 3 23 7 18446744073709551615 2 if 23 8 23 10 18446744073709551615 1 ( 23 11 23 12 18446744073709551615 1 b 23 12 23 13 18 2 == 23 14 23 16 18446744073709551615 1 1 23 17 23 18 18446744073709551615 1 ) 23 18 23 19 18446744073709551615 1 { 24 3 24 4 18446744073709551615 5 throw 25 4 25 9 18446744073709551615 7 wstring 25 10 25 17 21 1 ( 25 17 25 18 22 9 L"error1" 25 18 25 27 18446744073709551615 1 ) 25 27 25 28 22 1 ; 25 28 25 29 18446744073709551615 1 } 26 3 26 4 18446744073709551615 4 else 27 3 27 7 18446744073709551615 1 { 28 3 28 4 18446744073709551615 5 throw 29 4 29 9 18446744073709551615 7 wstring 29 10 29 17 21 1 ( 29 17 29 18 22 9 L"error2" 29 18 29 27 18446744073709551615 1 ) 29 27 29 28 22 1 ; 29 28 29 29 18446744073709551615 1 } 30 3 30 4 18446744073709551615 1 } 31 2 31 3 18446744073709551615 4 main 32 2 32 6 23 1 = 32 7 32 8 24 7 modules 32 9 32 16 9 1 . 32 16 32 17 25 2 at 32 17 32 19 25 1 ( 32 19 32 20 25 10 mainModule 32 20 32 30 13 1 ) 32 30 32 31 25 1 . 32 31 32 32 18446744073709551615 9 functions 32 32 32 41 26 1 . 32 41 32 42 25 2 at 32 42 32 44 25 1 ( 32 44 32 45 25 12 mainFunction 32 45 32 57 15 1 ) 32 57 32 58 25 1 ; 32 58 32 59 18446744073709551615 4 code 33 2 33 6 27 1 = 33 7 33 8 18446744073709551615 1 & 33 9 33 10 18446744073709551615 1 ( 33 10 33 11 18446744073709551615 4 main 33 11 33 15 23 1 . 33 15 33 16 18446744073709551615 4 code 33 16 33 20 28 1 ) 33 20 33 21 18446744073709551615 1 ; 33 21 33 22 18446744073709551615 12 constantPool 34 2 34 14 29 1 = 34 15 34 16 18446744073709551615 1 & 34 17 34 18 18446744073709551615 1 ( 34 18 34 19 18446744073709551615 4 main 34 19 34 23 23 1 . 34 23 34 24 18446744073709551615 9 constants 34 24 34 33 30 1 ) 34 33 34 34 18446744073709551615 1 ; 34 34 34 35 18446744073709551615 1 } 35 1 35 2 18446744073709551615 6 Module 36 1 36 7 31 2 VM 36 8 36 10 3 2 :: 36 10 36 12 20 10 LoadModule 36 12 36 22 20 1 ( 36 22 36 23 20 14 ByteCodeReader 36 23 36 37 7 1 & 36 37 36 38 18446744073709551615 6 reader 36 39 36 45 32 1 ) 36 45 36 46 20 1 { 37 1 37 2 18446744073709551615 7 int32_t 38 2 38 9 12 5 index 38 10 38 15 33 1 = 38 16 38 17 18446744073709551615 6 reader 38 18 38 24 32 1 . 38 24 38 25 14 7 ReadInt 38 25 38 32 14 1 ( 38 32 38 33 14 1 ) 38 33 38 34 14 1 ; 38 34 38 35 18446744073709551615 7 int32_t 39 2 39 9 12 10 fieldCount 39 10 39 20 34 1 = 39 21 39 22 18446744073709551615 6 reader 39 23 39 29 32 1 . 39 29 39 30 16 4 Read 39 30 39 34 16 1 ( 39 34 39 35 16 1 ) 39 35 39 36 16 1 ; 39 36 39 37 18446744073709551615 7 int32_t 40 2 40 9 12 13 functionCount 40 10 40 23 35 1 = 40 24 40 25 18446744073709551615 6 reader 40 26 40 32 32 1 . 40 32 40 33 16 4 Read 40 33 40 37 16 1 ( 40 37 40 38 16 1 ) 40 38 40 39 16 1 ; 40 39 40 40 18446744073709551615 5 wcout 41 2 41 7 36 2 << 41 8 41 10 37 18 L"module index = " 41 11 41 29 18446744073709551615 2 << 41 30 41 32 38 5 index 41 33 41 38 33 2 << 41 39 41 41 38 4 endl 41 42 41 46 39 1 ; 41 46 41 47 18446744073709551615 5 wcout 42 2 42 7 36 2 << 42 8 42 10 37 17 L"field count = " 42 11 42 28 18446744073709551615 2 << 42 29 42 31 38 10 fieldCount 42 32 42 42 34 2 << 42 43 42 45 38 4 endl 42 46 42 50 39 1 ; 42 50 42 51 18446744073709551615 5 wcout 43 2 43 7 36 2 << 43 8 43 10 37 20 L"function count = " 43 11 43 31 18446744073709551615 2 << 43 32 43 34 38 13 functionCount 43 35 43 48 35 2 << 43 49 43 51 38 4 endl 43 52 43 56 39 1 ; 43 56 43 57 18446744073709551615 6 vector 44 2 44 8 5 1 < 44 8 44 9 18446744073709551615 8 Function 44 9 44 17 40 1 > 44 17 44 18 18446744073709551615 9 functions 44 19 44 28 41 1 ; 44 28 44 29 18446744073709551615 9 functions 45 2 45 11 41 1 . 45 11 45 12 42 7 reserve 45 12 45 19 42 1 ( 45 19 45 20 42 13 functionCount 45 20 45 33 35 1 ) 45 33 45 34 42 1 ; 45 34 45 35 18446744073709551615 3 for 46 2 46 5 18446744073709551615 1 ( 46 6 46 7 18446744073709551615 7 int32_t 46 7 46 14 12 1 i 46 15 46 16 43 1 = 46 17 46 18 18446744073709551615 1 0 46 19 46 20 18446744073709551615 1 ; 46 20 46 21 18446744073709551615 1 i 46 22 46 23 43 1 < 46 24 46 25 18446744073709551615 13 functionCount 46 26 46 39 35 1 ; 46 39 46 40 18446744073709551615 1 i 46 41 46 42 43 2 ++ 46 42 46 44 18446744073709551615 1 ) 46 44 46 45 18446744073709551615 1 { 47 2 47 3 18446744073709551615 9 functions 48 3 48 12 41 1 . 48 12 48 13 19 9 push_back 48 13 48 22 19 1 ( 48 22 48 23 19 12 LoadFunction 48 23 48 35 44 1 ( 48 35 48 36 44 6 reader 48 36 48 42 32 1 ) 48 42 48 43 44 1 ) 48 43 48 44 19 1 ; 48 44 48 45 18446744073709551615 1 } 49 2 49 3 18446744073709551615 6 return 50 2 50 8 18446744073709551615 6 Module 50 9 50 15 31 1 ( 50 15 50 16 31 5 index 50 16 50 21 33 1 , 50 21 50 22 31 10 fieldCount 50 23 50 33 34 1 , 50 33 50 34 31 9 functions 50 35 50 44 41 1 ) 50 44 50 45 31 1 ; 50 45 50 46 18446744073709551615 1 } 51 1 51 2 18446744073709551615 8 Function 52 1 52 9 40 2 VM 52 10 52 12 3 2 :: 52 12 52 14 44 12 LoadFunction 52 14 52 26 44 1 ( 52 26 52 27 44 14 ByteCodeReader 52 27 52 41 7 1 & 52 41 52 42 18446744073709551615 6 reader 52 43 52 49 45 1 ) 52 49 52 50 44 1 { 53 1 53 2 18446744073709551615 7 int32_t 54 2 54 9 12 5 index 54 10 54 15 46 1 = 54 16 54 17 18446744073709551615 6 reader 54 18 54 24 45 1 . 54 24 54 25 16 4 Read 54 25 54 29 16 1 ( 54 29 54 30 16 1 ) 54 30 54 31 16 1 ; 54 31 54 32 18446744073709551615 7 int32_t 55 2 55 9 12 9 stackSize 55 10 55 19 47 1 = 55 20 55 21 18446744073709551615 6 reader 55 22 55 28 45 1 . 55 28 55 29 14 7 ReadInt 55 29 55 36 14 1 ( 55 36 55 37 14 1 ) 55 37 55 38 14 1 ; 55 38 55 39 18446744073709551615 7 int32_t 56 2 56 9 12 4 args 56 10 56 14 48 1 = 56 15 56 16 18446744073709551615 6 reader 56 17 56 23 45 1 . 56 23 56 24 16 4 Read 56 24 56 28 16 1 ( 56 28 56 29 16 1 ) 56 29 56 30 16 1 ; 56 30 56 31 18446744073709551615 7 int32_t 57 2 57 9 12 6 locals 57 10 57 16 49 1 = 57 17 57 18 18446744073709551615 6 reader 57 19 57 25 45 1 . 57 25 57 26 16 4 Read 57 26 57 30 16 1 ( 57 30 57 31 16 1 ) 57 31 57 32 16 1 ; 57 32 57 33 18446744073709551615 7 int32_t 58 2 58 9 12 13 constantCount 58 10 58 23 50 1 = 58 24 58 25 18446744073709551615 6 reader 58 26 58 32 45 1 . 58 32 58 33 16 4 Read 58 33 58 37 16 1 ( 58 37 58 38 16 1 ) 58 38 58 39 16 1 ; 58 39 58 40 18446744073709551615 7 int32_t 59 2 59 9 12 18 functionCodeLength 59 10 59 28 51 1 = 59 29 59 30 18446744073709551615 6 reader 59 31 59 37 45 1 . 59 37 59 38 52 10 ReadUShort 59 38 59 48 52 1 ( 59 48 59 49 52 1 ) 59 49 59 50 52 1 ; 59 50 59 51 18446744073709551615 5 wcout 60 2 60 7 36 2 << 60 8 60 10 37 11 L"index = " 60 11 60 22 18446744073709551615 2 << 60 23 60 25 38 5 index 60 26 60 31 46 2 << 60 32 60 34 38 4 endl 60 35 60 39 39 1 ; 60 39 60 40 18446744073709551615 5 wcout 61 2 61 7 36 2 << 61 8 61 10 37 16 L"stack size = " 61 11 61 27 18446744073709551615 2 << 61 28 61 30 38 9 stackSize 61 31 61 40 47 2 << 61 41 61 43 38 4 endl 61 44 61 48 39 1 ; 61 48 61 49 18446744073709551615 5 wcout 62 2 62 7 36 2 << 62 8 62 10 37 10 L"args = " 62 11 62 21 18446744073709551615 2 << 62 22 62 24 38 4 args 62 25 62 29 48 2 << 62 30 62 32 38 4 endl 62 33 62 37 39 1 ; 62 37 62 38 18446744073709551615 5 wcout 63 2 63 7 36 2 << 63 8 63 10 37 12 L"locals = " 63 11 63 23 18446744073709551615 2 << 63 24 63 26 38 6 locals 63 27 63 33 49 2 << 63 34 63 36 38 4 endl 63 37 63 41 39 1 ; 63 41 63 42 18446744073709551615 5 wcout 64 2 64 7 36 2 << 64 8 64 10 37 20 L"constant count = " 64 11 64 31 18446744073709551615 2 << 64 32 64 34 38 13 constantCount 64 35 64 48 50 2 << 64 49 64 51 38 4 endl 64 52 64 56 39 1 ; 64 56 64 57 18446744073709551615 5 wcout 65 2 65 7 36 2 << 65 8 65 10 37 26 L"function code length = " 65 11 65 37 18446744073709551615 2 << 65 38 65 40 38 18 functionCodeLength 65 41 65 59 51 2 << 65 60 65 62 38 4 endl 65 63 65 67 39 1 ; 65 67 65 68 18446744073709551615 12 ConstantPool 66 2 66 14 53 4 pool 66 15 66 19 54 1 = 66 20 66 21 18446744073709551615 16 LoadConstantPool 66 22 66 38 55 1 ( 66 38 66 39 55 6 reader 66 39 66 45 45 1 , 66 45 66 46 55 13 constantCount 66 47 66 60 50 1 ) 66 60 66 61 55 1 ; 66 61 66 62 18446744073709551615 8 ByteCode 67 2 67 10 56 12 functionCode 67 11 67 23 57 1 ; 67 23 67 24 18446744073709551615 12 functionCode 68 2 68 14 57 1 . 68 14 68 15 42 7 reserve 68 15 68 22 42 1 ( 68 22 68 23 42 18 functionCodeLength 68 23 68 41 51 1 ) 68 41 68 42 42 1 ; 68 42 68 43 18446744073709551615 3 for 69 2 69 5 18446744073709551615 1 ( 69 6 69 7 18446744073709551615 7 int32_t 69 7 69 14 12 1 i 69 15 69 16 58 1 = 69 17 69 18 18446744073709551615 1 0 69 19 69 20 18446744073709551615 1 ; 69 20 69 21 18446744073709551615 1 i 69 22 69 23 58 1 < 69 24 69 25 18446744073709551615 18 functionCodeLength 69 26 69 44 51 1 ; 69 44 69 45 18446744073709551615 1 i 69 46 69 47 58 2 ++ 69 47 69 49 18446744073709551615 1 ) 69 49 69 50 18446744073709551615 1 { 70 2 70 3 18446744073709551615 12 functionCode 71 3 71 15 57 1 . 71 15 71 16 19 9 push_back 71 16 71 25 19 1 ( 71 25 71 26 19 6 reader 71 26 71 32 45 1 . 71 32 71 33 16 4 Read 71 33 71 37 16 1 ( 71 37 71 38 16 1 ) 71 38 71 39 16 1 ) 71 39 71 40 19 1 ; 71 40 71 41 18446744073709551615 1 } 72 2 72 3 18446744073709551615 6 return 73 2 73 8 18446744073709551615 8 Function 73 9 73 17 40 1 ( 73 17 73 18 40 5 index 73 18 73 23 46 1 , 73 23 73 24 40 9 stackSize 73 25 73 34 47 1 , 73 34 73 35 40 4 args 73 36 73 40 48 1 , 73 40 73 41 40 6 locals 73 42 73 48 49 1 , 73 48 73 49 40 4 pool 73 50 73 54 54 1 , 73 54 73 55 40 12 functionCode 73 56 73 68 57 1 ) 73 68 73 69 40 1 ; 73 69 73 70 18446744073709551615 1 } 74 1 74 2 18446744073709551615 12 ConstantPool 75 1 75 13 53 2 VM 75 14 75 16 3 2 :: 75 16 75 18 55 16 LoadConstantPool 75 18 75 34 55 1 ( 75 34 75 35 55 14 ByteCodeReader 75 35 75 49 7 1 & 75 49 75 50 18446744073709551615 6 reader 75 51 75 57 59 1 , 75 57 75 58 55 7 int32_t 75 59 75 66 12 13 constantCount 75 67 75 80 60 1 ) 75 80 75 81 55 1 { 76 1 76 2 18446744073709551615 12 ConstantPool 77 2 77 14 53 4 pool 77 15 77 19 61 1 ; 77 19 77 20 18446744073709551615 3 for 78 2 78 5 18446744073709551615 1 ( 78 6 78 7 18446744073709551615 7 int32_t 78 7 78 14 12 1 i 78 15 78 16 62 1 = 78 17 78 18 18446744073709551615 1 0 78 19 78 20 18446744073709551615 1 ; 78 20 78 21 18446744073709551615 1 i 78 22 78 23 62 1 < 78 24 78 25 18446744073709551615 13 constantCount 78 26 78 39 60 1 ; 78 39 78 40 18446744073709551615 1 i 78 41 78 42 62 2 ++ 78 42 78 44 18446744073709551615 1 ) 78 44 78 45 18446744073709551615 1 { 79 2 79 3 18446744073709551615 7 int32_t 80 3 80 10 12 1 b 80 11 80 12 63 1 = 80 13 80 14 18446744073709551615 6 reader 80 15 80 21 59 1 . 80 21 80 22 16 4 Read 80 22 80 26 16 1 ( 80 26 80 27 16 1 ) 80 27 80 28 16 1 ; 80 28 80 29 18446744073709551615 5 Value 81 3 81 8 64 5 value 81 9 81 14 65 1 ; 81 14 81 15 18446744073709551615 6 switch 82 3 82 9 18446744073709551615 1 ( 82 10 82 11 18446744073709551615 1 b 82 11 82 12 63 1 ) 82 12 82 13 18446744073709551615 1 { 83 3 83 4 18446744073709551615 4 case 84 3 84 7 18446744073709551615 12 constant_int 84 8 84 20 66 1 : 84 20 84 21 18446744073709551615 1 { 85 3 85 4 18446744073709551615 5 value 86 4 86 9 65 1 . 86 9 86 10 18446744073709551615 5 int_v 86 10 86 15 67 1 = 86 16 86 17 18446744073709551615 6 reader 86 18 86 24 59 1 . 86 24 86 25 14 7 ReadInt 86 25 86 32 14 1 ( 86 32 86 33 14 1 ) 86 33 86 34 14 1 ; 86 34 86 35 18446744073709551615 4 pool 87 4 87 8 61 1 . 87 8 87 9 19 9 push_back 87 9 87 18 19 1 ( 87 18 87 19 19 5 value 87 19 87 24 65 1 ) 87 24 87 25 19 1 ; 87 25 87 26 18446744073709551615 5 break 88 4 88 9 18446744073709551615 1 ; 88 9 88 10 18446744073709551615 1 } 89 3 89 4 18446744073709551615 4 case 90 3 90 7 18446744073709551615 13 constant_long 90 8 90 21 68 1 : 90 21 90 22 18446744073709551615 1 { 91 3 91 4 18446744073709551615 5 value 92 4 92 9 65 1 . 92 9 92 10 18446744073709551615 6 long_v 92 10 92 16 69 1 = 92 17 92 18 18446744073709551615 6 reader 92 19 92 25 59 1 . 92 25 92 26 70 8 ReadLong 92 26 92 34 70 1 ( 92 34 92 35 70 1 ) 92 35 92 36 70 1 ; 92 36 92 37 18446744073709551615 4 pool 93 4 93 8 61 1 . 93 8 93 9 19 9 push_back 93 9 93 18 19 1 ( 93 18 93 19 19 5 value 93 19 93 24 65 1 ) 93 24 93 25 19 1 ; 93 25 93 26 18446744073709551615 5 break 94 4 94 9 18446744073709551615 1 ; 94 9 94 10 18446744073709551615 1 } 95 3 95 4 18446744073709551615 4 case 96 3 96 7 18446744073709551615 14 constant_float 96 8 96 22 71 1 : 96 22 96 23 18446744073709551615 1 { 97 3 97 4 18446744073709551615 5 value 98 4 98 9 65 1 . 98 9 98 10 18446744073709551615 7 float_v 98 10 98 17 72 1 = 98 18 98 19 18446744073709551615 6 reader 98 20 98 26 59 1 . 98 26 98 27 73 9 ReadFloat 98 27 98 36 73 1 ( 98 36 98 37 73 1 ) 98 37 98 38 73 1 ; 98 38 98 39 18446744073709551615 4 pool 99 4 99 8 61 1 . 99 8 99 9 19 9 push_back 99 9 99 18 19 1 ( 99 18 99 19 19 5 value 99 19 99 24 65 1 ) 99 24 99 25 19 1 ; 99 25 99 26 18446744073709551615 5 break 100 4 100 9 18446744073709551615 1 ; 100 9 100 10 18446744073709551615 1 } 101 3 101 4 18446744073709551615 4 case 102 3 102 7 18446744073709551615 15 constant_double 102 8 102 23 74 1 : 102 23 102 24 18446744073709551615 1 { 103 3 103 4 18446744073709551615 5 value 104 4 104 9 65 1 . 104 9 104 10 18446744073709551615 8 double_v 104 10 104 18 75 1 = 104 19 104 20 18446744073709551615 6 reader 104 21 104 27 59 1 . 104 27 104 28 76 10 ReadDouble 104 28 104 38 76 1 ( 104 38 104 39 76 1 ) 104 39 104 40 76 1 ; 104 40 104 41 18446744073709551615 4 pool 105 4 105 8 61 1 . 105 8 105 9 19 9 push_back 105 9 105 18 19 1 ( 105 18 105 19 19 5 value 105 19 105 24 65 1 ) 105 24 105 25 19 1 ; 105 25 105 26 18446744073709551615 5 break 106 4 106 9 18446744073709551615 1 ; 106 9 106 10 18446744073709551615 1 } 107 3 107 4 18446744073709551615 7 default 108 3 108 10 18446744073709551615 1 : 108 10 108 11 18446744073709551615 5 throw 109 4 109 9 18446744073709551615 7 wstring 109 10 109 17 21 1 ( 109 17 109 18 22 25 L"not supported constant" 109 18 109 43 18446744073709551615 1 ) 109 43 109 44 22 1 ; 109 44 109 45 18446744073709551615 1 } 110 3 110 4 18446744073709551615 1 } 111 2 111 3 18446744073709551615 6 return 112 2 112 8 18446744073709551615 4 pool 112 9 112 13 61 1 ; 112 13 112 14 18446744073709551615 1 } 113 1 113 2 18446744073709551615 4 void 114 1 114 5 18446744073709551615 2 VM 114 6 114 8 3 2 :: 114 8 114 10 77 3 Run 114 10 114 13 77 1 ( 114 13 114 14 77 1 ) 114 14 114 15 77 1 { 115 1 115 2 18446744073709551615 5 wcout 116 2 116 7 36 2 << 116 8 116 10 38 4 endl 116 11 116 15 39 1 ; 116 15 116 16 18446744073709551615 5 wcout 117 2 117 7 36 2 << 117 8 117 10 37 45 L"**************** start vm ****************" 117 11 117 56 18446744073709551615 2 << 117 57 117 59 38 4 endl 117 60 117 64 39 1 ; 117 64 117 65 18446744073709551615 5 wcout 118 2 118 7 36 2 << 118 8 118 10 38 4 endl 118 11 118 15 39 1 ; 118 15 118 16 18446744073709551615 7 int32_t 120 2 120 9 12 2 pc 120 10 120 12 78 1 = 120 13 120 14 18446744073709551615 1 0 120 15 120 16 18446744073709551615 1 ; 120 16 120 17 18446744073709551615 7 int32_t 121 2 121 9 12 2 fp 121 10 121 12 79 1 = 121 13 121 14 18446744073709551615 1 0 121 15 121 16 18446744073709551615 1 ; 121 16 121 17 18446744073709551615 4 code 122 2 122 6 27 1 = 122 7 122 8 18446744073709551615 1 & 122 9 122 10 18446744073709551615 1 ( 122 10 122 11 18446744073709551615 4 main 122 11 122 15 23 1 . 122 15 122 16 18446744073709551615 4 code 122 16 122 20 28 1 ) 122 20 122 21 18446744073709551615 1 ; 122 21 122 22 18446744073709551615 2 sp 123 2 123 4 80 1 = 123 5 123 6 18446744073709551615 2 sp 123 7 123 9 80 1 + 123 10 123 11 18446744073709551615 4 main 123 12 123 16 23 1 . 123 16 123 17 18446744073709551615 4 args 123 17 123 21 81 1 + 123 22 123 23 18446744073709551615 4 main 123 24 123 28 23 1 . 123 28 123 29 18446744073709551615 6 locals 123 29 123 35 82 1 ; 123 35 123 36 18446744073709551615 2 sp 124 2 124 4 80 2 ++ 124 4 124 6 18446744073709551615 1 ; 124 6 124 7 18446744073709551615 5 stack 125 2 125 7 4 1 [ 125 7 125 8 83 2 sp 125 8 125 10 80 1 ] 125 10 125 11 83 1 . 125 11 125 12 18446744073709551615 5 int_v 125 12 125 17 67 1 = 125 18 125 19 18446744073709551615 1 0 125 20 125 21 18446744073709551615 1 ; 125 21 125 22 18446744073709551615 2 sp 126 2 126 4 80 2 ++ 126 4 126 6 18446744073709551615 1 ; 126 6 126 7 18446744073709551615 5 stack 127 2 127 7 4 1 [ 127 7 127 8 83 2 sp 127 8 127 10 80 1 ] 127 10 127 11 83 1 . 127 11 127 12 18446744073709551615 6 object 127 12 127 18 84 1 = 127 19 127 20 18446744073709551615 7 nullptr 127 21 127 28 18446744073709551615 1 ; 127 28 127 29 18446744073709551615 2 sp 128 2 128 4 80 2 ++ 128 4 128 6 18446744073709551615 1 ; 128 6 128 7 18446744073709551615 5 stack 129 2 129 7 4 1 [ 129 7 129 8 83 2 sp 129 8 129 10 80 1 ] 129 10 129 11 83 1 . 129 11 129 12 18446744073709551615 5 int_v 129 12 129 17 67 1 = 129 18 129 19 18446744073709551615 1 0 129 20 129 21 18446744073709551615 1 ; 129 21 129 22 18446744073709551615 8 function 131 2 131 10 85 1 = 131 11 131 12 18446744073709551615 1 & 131 13 131 14 18446744073709551615 1 ( 131 14 131 15 18446744073709551615 4 main 131 15 131 19 23 1 ) 131 19 131 20 18446744073709551615 1 ; 131 20 131 21 18446744073709551615 7 int32_t 133 2 133 9 12 10 codeLength 133 10 133 20 86 1 = 133 21 133 22 18446744073709551615 4 code 133 23 133 27 27 2 -> 133 27 133 29 87 4 size 133 29 133 33 87 1 ( 133 33 133 34 87 1 ) 133 34 133 35 87 1 ; 133 35 133 36 18446744073709551615 5 while 134 2 134 7 18446744073709551615 1 ( 134 8 134 9 18446744073709551615 2 pc 134 9 134 11 78 1 < 134 12 134 13 18446744073709551615 10 codeLength 134 14 134 24 86 1 ) 134 24 134 25 18446744073709551615 1 { 135 2 135 3 18446744073709551615 7 int32_t 136 3 136 10 12 6 opcode 136 11 136 17 88 1 = 136 18 136 19 18446744073709551615 1 ( 136 20 136 21 18446744073709551615 1 * 136 21 136 22 18446744073709551615 4 code 136 22 136 26 27 1 ) 136 26 136 27 18446744073709551615 1 [ 136 27 136 28 83 2 pc 136 28 136 30 78 1 ] 136 30 136 31 83 1 ; 136 31 136 32 18446744073709551615 6 switch 137 3 137 9 18446744073709551615 1 ( 137 10 137 11 18446744073709551615 6 opcode 137 11 137 17 88 1 ) 137 17 137 18 18446744073709551615 1 { 138 3 138 4 18446744073709551615 4 case 139 3 139 7 18446744073709551615 17 push_constant_int 139 8 139 25 89 1 : 139 25 139 26 18446744073709551615 1 { 140 3 140 4 18446744073709551615 7 int32_t 141 4 141 11 12 5 index 141 12 141 17 90 1 = 141 18 141 19 18446744073709551615 1 ( 141 20 141 21 18446744073709551615 1 * 141 21 141 22 18446744073709551615 4 code 141 22 141 26 27 1 ) 141 26 141 27 18446744073709551615 1 [ 141 27 141 28 83 2 pc 141 28 141 30 78 1 + 141 31 141 32 18446744073709551615 1 1 141 33 141 34 18446744073709551615 1 ] 141 34 141 35 83 1 ; 141 35 141 36 18446744073709551615 2 sp 142 4 142 6 80 2 ++ 142 6 142 8 18446744073709551615 1 ; 142 8 142 9 18446744073709551615 5 stack 143 4 143 9 4 1 [ 143 9 143 10 83 2 sp 143 10 143 12 80 1 ] 143 12 143 13 83 1 . 143 13 143 14 18446744073709551615 5 int_v 143 14 143 19 67 1 = 143 20 143 21 18446744073709551615 1 ( 143 22 143 23 18446744073709551615 1 * 143 23 143 24 18446744073709551615 12 constantPool 143 24 143 36 29 1 ) 143 36 143 37 18446744073709551615 1 [ 143 37 143 38 83 5 index 143 38 143 43 90 1 ] 143 43 143 44 83 1 . 143 44 143 45 18446744073709551615 5 int_v 143 45 143 50 67 1 ; 143 50 143 51 18446744073709551615 2 pc 144 4 144 6 78 2 += 144 7 144 9 18446744073709551615 1 2 144 10 144 11 18446744073709551615 1 ; 144 11 144 12 18446744073709551615 5 break 145 4 145 9 18446744073709551615 1 ; 145 9 145 10 18446744073709551615 1 } 146 3 146 4 18446744073709551615 4 case 147 3 147 7 18446744073709551615 18 push_constant_long 147 8 147 26 91 1 : 147 26 147 27 18446744073709551615 1 { 148 3 148 4 18446744073709551615 7 int32_t 149 4 149 11 12 5 index 149 12 149 17 92 1 = 149 18 149 19 18446744073709551615 1 ( 149 20 149 21 18446744073709551615 1 * 149 21 149 22 18446744073709551615 4 code 149 22 149 26 27 1 ) 149 26 149 27 18446744073709551615 1 [ 149 27 149 28 83 2 pc 149 28 149 30 78 1 + 149 31 149 32 18446744073709551615 1 1 149 33 149 34 18446744073709551615 1 ] 149 34 149 35 83 1 ; 149 35 149 36 18446744073709551615 2 sp 150 4 150 6 80 2 ++ 150 6 150 8 18446744073709551615 1 ; 150 8 150 9 18446744073709551615 5 stack 151 4 151 9 4 1 [ 151 9 151 10 83 2 sp 151 10 151 12 80 1 ] 151 12 151 13 83 1 . 151 13 151 14 18446744073709551615 6 long_v 151 14 151 20 69 1 = 151 21 151 22 18446744073709551615 1 ( 151 23 151 24 18446744073709551615 1 * 151 24 151 25 18446744073709551615 12 constantPool 151 25 151 37 29 1 ) 151 37 151 38 18446744073709551615 1 [ 151 38 151 39 83 5 index 151 39 151 44 92 1 ] 151 44 151 45 83 1 . 151 45 151 46 18446744073709551615 6 long_v 151 46 151 52 69 1 ; 151 52 151 53 18446744073709551615 2 pc 152 4 152 6 78 2 += 152 7 152 9 18446744073709551615 1 2 152 10 152 11 18446744073709551615 1 ; 152 11 152 12 18446744073709551615 5 break 153 4 153 9 18446744073709551615 1 ; 153 9 153 10 18446744073709551615 1 } 154 3 154 4 18446744073709551615 4 case 155 3 155 7 18446744073709551615 19 push_constant_float 155 8 155 27 93 1 : 155 27 155 28 18446744073709551615 1 { 156 3 156 4 18446744073709551615 7 int32_t 157 4 157 11 12 5 index 157 12 157 17 94 1 = 157 18 157 19 18446744073709551615 1 ( 157 20 157 21 18446744073709551615 1 * 157 21 157 22 18446744073709551615 4 code 157 22 157 26 27 1 ) 157 26 157 27 18446744073709551615 1 [ 157 27 157 28 83 2 pc 157 28 157 30 78 1 + 157 31 157 32 18446744073709551615 1 1 157 33 157 34 18446744073709551615 1 ] 157 34 157 35 83 1 ; 157 35 157 36 18446744073709551615 2 sp 158 4 158 6 80 2 ++ 158 6 158 8 18446744073709551615 1 ; 158 8 158 9 18446744073709551615 5 stack 159 4 159 9 4 1 [ 159 9 159 10 83 2 sp 159 10 159 12 80 1 ] 159 12 159 13 83 1 . 159 13 159 14 18446744073709551615 7 float_v 159 14 159 21 72 1 = 159 22 159 23 18446744073709551615 1 ( 159 24 159 25 18446744073709551615 1 * 159 25 159 26 18446744073709551615 12 constantPool 159 26 159 38 29 1 ) 159 38 159 39 18446744073709551615 1 [ 159 39 159 40 83 5 index 159 40 159 45 94 1 ] 159 45 159 46 83 1 . 159 46 159 47 18446744073709551615 7 float_v 159 47 159 54 72 1 ; 159 54 159 55 18446744073709551615 2 pc 160 4 160 6 78 2 += 160 7 160 9 18446744073709551615 1 2 160 10 160 11 18446744073709551615 1 ; 160 11 160 12 18446744073709551615 5 break 161 4 161 9 18446744073709551615 1 ; 161 9 161 10 18446744073709551615 1 } 162 3 162 4 18446744073709551615 4 case 163 3 163 7 18446744073709551615 20 push_constant_double 163 8 163 28 95 1 : 163 28 163 29 18446744073709551615 1 { 164 3 164 4 18446744073709551615 7 int32_t 165 4 165 11 12 5 index 165 12 165 17 96 1 = 165 18 165 19 18446744073709551615 1 ( 165 20 165 21 18446744073709551615 1 * 165 21 165 22 18446744073709551615 4 code 165 22 165 26 27 1 ) 165 26 165 27 18446744073709551615 1 [ 165 27 165 28 83 2 pc 165 28 165 30 78 1 + 165 31 165 32 18446744073709551615 1 1 165 33 165 34 18446744073709551615 1 ] 165 34 165 35 83 1 ; 165 35 165 36 18446744073709551615 2 sp 166 4 166 6 80 2 ++ 166 6 166 8 18446744073709551615 1 ; 166 8 166 9 18446744073709551615 5 stack 167 4 167 9 4 1 [ 167 9 167 10 83 2 sp 167 10 167 12 80 1 ] 167 12 167 13 83 1 . 167 13 167 14 18446744073709551615 8 double_v 167 14 167 22 75 1 = 167 23 167 24 18446744073709551615 1 ( 167 25 167 26 18446744073709551615 1 * 167 26 167 27 18446744073709551615 12 constantPool 167 27 167 39 29 1 ) 167 39 167 40 18446744073709551615 1 [ 167 40 167 41 83 5 index 167 41 167 46 96 1 ] 167 46 167 47 83 1 . 167 47 167 48 18446744073709551615 8 double_v 167 48 167 56 75 1 ; 167 56 167 57 18446744073709551615 2 pc 168 4 168 6 78 2 += 168 7 168 9 18446744073709551615 1 2 168 10 168 11 18446744073709551615 1 ; 168 11 168 12 18446744073709551615 5 break 169 4 169 9 18446744073709551615 1 ; 169 9 169 10 18446744073709551615 1 } 170 3 170 4 18446744073709551615 4 case 171 3 171 7 18446744073709551615 20 push_constant_string 171 8 171 28 97 1 : 171 28 171 29 18446744073709551615 1 { 172 3 172 4 18446744073709551615 7 int32_t 173 4 173 11 12 5 index 173 12 173 17 98 1 = 173 18 173 19 18446744073709551615 1 ( 173 20 173 21 18446744073709551615 1 * 173 21 173 22 18446744073709551615 4 code 173 22 173 26 27 1 ) 173 26 173 27 18446744073709551615 1 [ 173 27 173 28 83 2 pc 173 28 173 30 78 1 + 173 31 173 32 18446744073709551615 1 1 173 33 173 34 18446744073709551615 1 ] 173 34 173 35 83 1 ; 173 35 173 36 18446744073709551615 2 sp 174 4 174 6 80 2 ++ 174 6 174 8 18446744073709551615 1 ; 174 8 174 9 18446744073709551615 5 stack 175 4 175 9 4 1 [ 175 9 175 10 83 2 sp 175 10 175 12 80 1 ] 175 12 175 13 83 1 . 175 13 175 14 18446744073709551615 6 object 175 14 175 20 84 1 = 175 21 175 22 18446744073709551615 1 ( 175 23 175 24 18446744073709551615 1 * 175 24 175 25 18446744073709551615 12 constantPool 175 25 175 37 29 1 ) 175 37 175 38 18446744073709551615 1 [ 175 38 175 39 83 5 index 175 39 175 44 98 1 ] 175 44 175 45 83 1 . 175 45 175 46 18446744073709551615 6 object 175 46 175 52 84 1 ; 175 52 175 53 18446744073709551615 2 pc 176 4 176 6 78 2 += 176 7 176 9 18446744073709551615 1 2 176 10 176 11 18446744073709551615 1 ; 176 11 176 12 18446744073709551615 5 break 177 4 177 9 18446744073709551615 1 ; 177 9 177 10 18446744073709551615 1 } 178 3 178 4 18446744073709551615 4 case 179 3 179 7 18446744073709551615 14 push_local_int 179 8 179 22 99 1 : 179 22 179 23 18446744073709551615 1 { 180 3 180 4 18446744073709551615 7 int32_t 181 4 181 11 12 5 index 181 12 181 17 100 1 = 181 18 181 19 18446744073709551615 1 ( 181 20 181 21 18446744073709551615 1 * 181 21 181 22 18446744073709551615 4 code 181 22 181 26 27 1 ) 181 26 181 27 18446744073709551615 1 [ 181 27 181 28 83 2 pc 181 28 181 30 78 1 + 181 31 181 32 18446744073709551615 1 1 181 33 181 34 18446744073709551615 1 ] 181 34 181 35 83 1 ; 181 35 181 36 18446744073709551615 2 sp 182 4 182 6 80 2 ++ 182 6 182 8 18446744073709551615 1 ; 182 8 182 9 18446744073709551615 5 stack 183 4 183 9 4 1 [ 183 9 183 10 83 2 sp 183 10 183 12 80 1 ] 183 12 183 13 83 1 . 183 13 183 14 18446744073709551615 5 int_v 183 14 183 19 67 1 = 183 20 183 21 18446744073709551615 5 stack 183 22 183 27 4 1 [ 183 27 183 28 83 2 fp 183 28 183 30 79 1 + 183 31 183 32 18446744073709551615 5 index 183 33 183 38 100 1 ] 183 38 183 39 83 1 . 183 39 183 40 18446744073709551615 5 int_v 183 40 183 45 67 1 ; 183 45 183 46 18446744073709551615 60 // wcout << L"push local int = " << stack[sp].int_v << endl; 184 4 184 64 18446744073709551615 2 pc 185 4 185 6 78 2 += 185 7 185 9 18446744073709551615 1 2 185 10 185 11 18446744073709551615 1 ; 185 11 185 12 18446744073709551615 5 break 186 4 186 9 18446744073709551615 1 ; 186 9 186 10 18446744073709551615 1 } 187 3 187 4 18446744073709551615 4 case 188 3 188 7 18446744073709551615 15 push_local_long 188 8 188 23 101 1 : 188 23 188 24 18446744073709551615 1 { 189 3 189 4 18446744073709551615 7 int32_t 190 4 190 11 12 5 index 190 12 190 17 102 1 = 190 18 190 19 18446744073709551615 1 ( 190 20 190 21 18446744073709551615 1 * 190 21 190 22 18446744073709551615 4 code 190 22 190 26 27 1 ) 190 26 190 27 18446744073709551615 1 [ 190 27 190 28 83 2 pc 190 28 190 30 78 1 + 190 31 190 32 18446744073709551615 1 1 190 33 190 34 18446744073709551615 1 ] 190 34 190 35 83 1 ; 190 35 190 36 18446744073709551615 2 sp 191 4 191 6 80 2 ++ 191 6 191 8 18446744073709551615 1 ; 191 8 191 9 18446744073709551615 5 stack 192 4 192 9 4 1 [ 192 9 192 10 83 2 sp 192 10 192 12 80 1 ] 192 12 192 13 83 1 . 192 13 192 14 18446744073709551615 6 long_v 192 14 192 20 69 1 = 192 21 192 22 18446744073709551615 5 stack 192 23 192 28 4 1 [ 192 28 192 29 83 2 fp 192 29 192 31 79 1 + 192 32 192 33 18446744073709551615 5 index 192 34 192 39 102 1 ] 192 39 192 40 83 1 . 192 40 192 41 18446744073709551615 6 long_v 192 41 192 47 69 1 ; 192 47 192 48 18446744073709551615 2 pc 193 4 193 6 78 2 += 193 7 193 9 18446744073709551615 1 2 193 10 193 11 18446744073709551615 1 ; 193 11 193 12 18446744073709551615 5 break 194 4 194 9 18446744073709551615 1 ; 194 9 194 10 18446744073709551615 1 } 195 3 195 4 18446744073709551615 4 case 196 3 196 7 18446744073709551615 16 push_local_float 196 8 196 24 103 1 : 196 24 196 25 18446744073709551615 1 { 197 3 197 4 18446744073709551615 7 int32_t 198 4 198 11 12 5 index 198 12 198 17 104 1 = 198 18 198 19 18446744073709551615 1 ( 198 20 198 21 18446744073709551615 1 * 198 21 198 22 18446744073709551615 4 code 198 22 198 26 27 1 ) 198 26 198 27 18446744073709551615 1 [ 198 27 198 28 83 2 pc 198 28 198 30 78 1 + 198 31 198 32 18446744073709551615 1 1 198 33 198 34 18446744073709551615 1 ] 198 34 198 35 83 1 ; 198 35 198 36 18446744073709551615 2 sp 199 4 199 6 80 2 ++ 199 6 199 8 18446744073709551615 1 ; 199 8 199 9 18446744073709551615 5 stack 200 4 200 9 4 1 [ 200 9 200 10 83 2 sp 200 10 200 12 80 1 ] 200 12 200 13 83 1 . 200 13 200 14 18446744073709551615 7 float_v 200 14 200 21 72 1 = 200 22 200 23 18446744073709551615 5 stack 200 24 200 29 4 1 [ 200 29 200 30 83 2 fp 200 30 200 32 79 1 + 200 33 200 34 18446744073709551615 5 index 200 35 200 40 104 1 ] 200 40 200 41 83 1 . 200 41 200 42 18446744073709551615 7 float_v 200 42 200 49 72 1 ; 200 49 200 50 18446744073709551615 2 pc 201 4 201 6 78 2 += 201 7 201 9 18446744073709551615 1 2 201 10 201 11 18446744073709551615 1 ; 201 11 201 12 18446744073709551615 5 break 202 4 202 9 18446744073709551615 1 ; 202 9 202 10 18446744073709551615 1 } 203 3 203 4 18446744073709551615 4 case 204 3 204 7 18446744073709551615 17 push_local_double 204 8 204 25 105 1 : 204 25 204 26 18446744073709551615 1 { 205 3 205 4 18446744073709551615 7 int32_t 206 4 206 11 12 5 index 206 12 206 17 106 1 = 206 18 206 19 18446744073709551615 1 ( 206 20 206 21 18446744073709551615 1 * 206 21 206 22 18446744073709551615 4 code 206 22 206 26 27 1 ) 206 26 206 27 18446744073709551615 1 [ 206 27 206 28 83 2 pc 206 28 206 30 78 1 + 206 31 206 32 18446744073709551615 1 1 206 33 206 34 18446744073709551615 1 ] 206 34 206 35 83 1 ; 206 35 206 36 18446744073709551615 2 sp 207 4 207 6 80 2 ++ 207 6 207 8 18446744073709551615 1 ; 207 8 207 9 18446744073709551615 5 stack 208 4 208 9 4 1 [ 208 9 208 10 83 2 sp 208 10 208 12 80 1 ] 208 12 208 13 83 1 . 208 13 208 14 18446744073709551615 8 double_v 208 14 208 22 75 1 = 208 23 208 24 18446744073709551615 5 stack 208 25 208 30 4 1 [ 208 30 208 31 83 2 fp 208 31 208 33 79 1 + 208 34 208 35 18446744073709551615 5 index 208 36 208 41 106 1 ] 208 41 208 42 83 1 . 208 42 208 43 18446744073709551615 8 double_v 208 43 208 51 75 1 ; 208 51 208 52 18446744073709551615 2 pc 209 4 209 6 78 2 += 209 7 209 9 18446744073709551615 1 2 209 10 209 11 18446744073709551615 1 ; 209 11 209 12 18446744073709551615 5 break 210 4 210 9 18446744073709551615 1 ; 210 9 210 10 18446744073709551615 1 } 211 3 211 4 18446744073709551615 4 case 212 3 212 7 18446744073709551615 17 push_local_object 212 8 212 25 107 1 : 212 25 212 26 18446744073709551615 1 { 213 3 213 4 18446744073709551615 7 int32_t 214 4 214 11 12 5 index 214 12 214 17 108 1 = 214 18 214 19 18446744073709551615 1 ( 214 20 214 21 18446744073709551615 1 * 214 21 214 22 18446744073709551615 4 code 214 22 214 26 27 1 ) 214 26 214 27 18446744073709551615 1 [ 214 27 214 28 83 2 pc 214 28 214 30 78 1 + 214 31 214 32 18446744073709551615 1 1 214 33 214 34 18446744073709551615 1 ] 214 34 214 35 83 1 ; 214 35 214 36 18446744073709551615 2 sp 215 4 215 6 80 2 ++ 215 6 215 8 18446744073709551615 1 ; 215 8 215 9 18446744073709551615 5 stack 216 4 216 9 4 1 [ 216 9 216 10 83 2 sp 216 10 216 12 80 1 ] 216 12 216 13 83 1 . 216 13 216 14 18446744073709551615 6 object 216 14 216 20 84 1 = 216 21 216 22 18446744073709551615 5 stack 216 23 216 28 4 1 [ 216 28 216 29 83 2 fp 216 29 216 31 79 1 + 216 32 216 33 18446744073709551615 5 index 216 34 216 39 108 1 ] 216 39 216 40 83 1 . 216 40 216 41 18446744073709551615 6 object 216 41 216 47 84 1 ; 216 47 216 48 18446744073709551615 2 pc 217 4 217 6 78 2 += 217 7 217 9 18446744073709551615 1 2 217 10 217 11 18446744073709551615 1 ; 217 11 217 12 18446744073709551615 5 break 218 4 218 9 18446744073709551615 1 ; 218 9 218 10 18446744073709551615 1 } 219 3 219 4 18446744073709551615 4 case 220 3 220 7 18446744073709551615 13 pop_local_int 220 8 220 21 109 1 : 220 21 220 22 18446744073709551615 1 { 221 3 221 4 18446744073709551615 7 int32_t 222 4 222 11 12 5 index 222 12 222 17 110 1 = 222 18 222 19 18446744073709551615 1 ( 222 20 222 21 18446744073709551615 1 * 222 21 222 22 18446744073709551615 4 code 222 22 222 26 27 1 ) 222 26 222 27 18446744073709551615 1 [ 222 27 222 28 83 2 pc 222 28 222 30 78 1 + 222 31 222 32 18446744073709551615 1 1 222 33 222 34 18446744073709551615 1 ] 222 34 222 35 83 1 ; 222 35 222 36 18446744073709551615 5 stack 223 4 223 9 4 1 [ 223 9 223 10 83 2 fp 223 10 223 12 79 1 + 223 13 223 14 18446744073709551615 5 index 223 15 223 20 110 1 ] 223 20 223 21 83 1 . 223 21 223 22 18446744073709551615 5 int_v 223 22 223 27 67 1 = 223 28 223 29 18446744073709551615 5 stack 223 30 223 35 4 1 [ 223 35 223 36 83 2 sp 223 36 223 38 80 1 ] 223 38 223 39 83 1 . 223 39 223 40 18446744073709551615 5 int_v 223 40 223 45 67 1 ; 223 45 223 46 18446744073709551615 2 sp 224 4 224 6 80 2 -- 224 6 224 8 18446744073709551615 1 ; 224 8 224 9 18446744073709551615 2 pc 225 4 225 6 78 2 += 225 7 225 9 18446744073709551615 1 2 225 10 225 11 18446744073709551615 1 ; 225 11 225 12 18446744073709551615 5 break 226 4 226 9 18446744073709551615 1 ; 226 9 226 10 18446744073709551615 1 } 227 3 227 4 18446744073709551615 4 case 228 3 228 7 18446744073709551615 14 pop_local_long 228 8 228 22 111 1 : 228 22 228 23 18446744073709551615 1 { 229 3 229 4 18446744073709551615 7 int32_t 230 4 230 11 12 5 index 230 12 230 17 112 1 = 230 18 230 19 18446744073709551615 1 ( 230 20 230 21 18446744073709551615 1 * 230 21 230 22 18446744073709551615 4 code 230 22 230 26 27 1 ) 230 26 230 27 18446744073709551615 1 [ 230 27 230 28 83 2 pc 230 28 230 30 78 1 + 230 31 230 32 18446744073709551615 1 1 230 33 230 34 18446744073709551615 1 ] 230 34 230 35 83 1 ; 230 35 230 36 18446744073709551615 5 stack 231 4 231 9 4 1 [ 231 9 231 10 83 2 fp 231 10 231 12 79 1 + 231 13 231 14 18446744073709551615 5 index 231 15 231 20 112 1 ] 231 20 231 21 83 1 . 231 21 231 22 18446744073709551615 6 long_v 231 22 231 28 69 1 = 231 29 231 30 18446744073709551615 5 stack 231 31 231 36 4 1 [ 231 36 231 37 83 2 sp 231 37 231 39 80 1 ] 231 39 231 40 83 1 . 231 40 231 41 18446744073709551615 6 long_v 231 41 231 47 69 1 ; 231 47 231 48 18446744073709551615 2 sp 232 4 232 6 80 2 -- 232 6 232 8 18446744073709551615 1 ; 232 8 232 9 18446744073709551615 2 pc 233 4 233 6 78 2 += 233 7 233 9 18446744073709551615 1 2 233 10 233 11 18446744073709551615 1 ; 233 11 233 12 18446744073709551615 5 break 234 4 234 9 18446744073709551615 1 ; 234 9 234 10 18446744073709551615 1 } 235 3 235 4 18446744073709551615 4 case 236 3 236 7 18446744073709551615 15 pop_local_float 236 8 236 23 113 1 : 236 23 236 24 18446744073709551615 1 { 237 3 237 4 18446744073709551615 7 int32_t 238 4 238 11 12 5 index 238 12 238 17 114 1 = 238 18 238 19 18446744073709551615 1 ( 238 20 238 21 18446744073709551615 1 * 238 21 238 22 18446744073709551615 4 code 238 22 238 26 27 1 ) 238 26 238 27 18446744073709551615 1 [ 238 27 238 28 83 2 pc 238 28 238 30 78 1 + 238 31 238 32 18446744073709551615 1 1 238 33 238 34 18446744073709551615 1 ] 238 34 238 35 83 1 ; 238 35 238 36 18446744073709551615 5 stack 239 4 239 9 4 1 [ 239 9 239 10 83 2 fp 239 10 239 12 79 1 + 239 13 239 14 18446744073709551615 5 index 239 15 239 20 114 1 ] 239 20 239 21 83 1 . 239 21 239 22 18446744073709551615 7 float_v 239 22 239 29 72 1 = 239 30 239 31 18446744073709551615 5 stack 239 32 239 37 4 1 [ 239 37 239 38 83 2 sp 239 38 239 40 80 1 ] 239 40 239 41 83 1 . 239 41 239 42 18446744073709551615 7 float_v 239 42 239 49 72 1 ; 239 49 239 50 18446744073709551615 2 sp 240 4 240 6 80 2 -- 240 6 240 8 18446744073709551615 1 ; 240 8 240 9 18446744073709551615 2 pc 241 4 241 6 78 2 += 241 7 241 9 18446744073709551615 1 2 241 10 241 11 18446744073709551615 1 ; 241 11 241 12 18446744073709551615 5 break 242 4 242 9 18446744073709551615 1 ; 242 9 242 10 18446744073709551615 1 } 243 3 243 4 18446744073709551615 4 case 244 3 244 7 18446744073709551615 16 pop_local_double 244 8 244 24 115 1 : 244 24 244 25 18446744073709551615 1 { 245 3 245 4 18446744073709551615 7 int32_t 246 4 246 11 12 5 index 246 12 246 17 116 1 = 246 18 246 19 18446744073709551615 1 ( 246 20 246 21 18446744073709551615 1 * 246 21 246 22 18446744073709551615 4 code 246 22 246 26 27 1 ) 246 26 246 27 18446744073709551615 1 [ 246 27 246 28 83 2 pc 246 28 246 30 78 1 + 246 31 246 32 18446744073709551615 1 1 246 33 246 34 18446744073709551615 1 ] 246 34 246 35 83 1 ; 246 35 246 36 18446744073709551615 5 stack 247 4 247 9 4 1 [ 247 9 247 10 83 2 fp 247 10 247 12 79 1 + 247 13 247 14 18446744073709551615 5 index 247 15 247 20 116 1 ] 247 20 247 21 83 1 . 247 21 247 22 18446744073709551615 8 double_v 247 22 247 30 75 1 = 247 31 247 32 18446744073709551615 5 stack 247 33 247 38 4 1 [ 247 38 247 39 83 2 sp 247 39 247 41 80 1 ] 247 41 247 42 83 1 . 247 42 247 43 18446744073709551615 8 double_v 247 43 247 51 75 1 ; 247 51 247 52 18446744073709551615 2 sp 248 4 248 6 80 2 -- 248 6 248 8 18446744073709551615 1 ; 248 8 248 9 18446744073709551615 2 pc 249 4 249 6 78 2 += 249 7 249 9 18446744073709551615 1 2 249 10 249 11 18446744073709551615 1 ; 249 11 249 12 18446744073709551615 5 break 250 4 250 9 18446744073709551615 1 ; 250 9 250 10 18446744073709551615 1 } 251 3 251 4 18446744073709551615 4 case 252 3 252 7 18446744073709551615 16 pop_local_object 252 8 252 24 117 1 : 252 24 252 25 18446744073709551615 1 { 253 3 253 4 18446744073709551615 7 int32_t 254 4 254 11 12 5 index 254 12 254 17 118 1 = 254 18 254 19 18446744073709551615 1 ( 254 20 254 21 18446744073709551615 1 * 254 21 254 22 18446744073709551615 4 code 254 22 254 26 27 1 ) 254 26 254 27 18446744073709551615 1 [ 254 27 254 28 83 2 pc 254 28 254 30 78 1 + 254 31 254 32 18446744073709551615 1 1 254 33 254 34 18446744073709551615 1 ] 254 34 254 35 83 1 ; 254 35 254 36 18446744073709551615 5 stack 255 4 255 9 4 1 [ 255 9 255 10 83 2 fp 255 10 255 12 79 1 + 255 13 255 14 18446744073709551615 5 index 255 15 255 20 118 1 ] 255 20 255 21 83 1 . 255 21 255 22 18446744073709551615 6 object 255 22 255 28 84 1 = 255 29 255 30 18446744073709551615 5 stack 255 31 255 36 4 1 [ 255 36 255 37 83 2 sp 255 37 255 39 80 1 ] 255 39 255 40 83 1 . 255 40 255 41 18446744073709551615 6 object 255 41 255 47 84 1 ; 255 47 255 48 18446744073709551615 2 sp 256 4 256 6 80 2 -- 256 6 256 8 18446744073709551615 1 ; 256 8 256 9 18446744073709551615 2 pc 257 4 257 6 78 2 += 257 7 257 9 18446744073709551615 1 2 257 10 257 11 18446744073709551615 1 ; 257 11 257 12 18446744073709551615 5 break 258 4 258 9 18446744073709551615 1 ; 258 9 258 10 18446744073709551615 1 } 259 3 259 4 18446744073709551615 4 case 260 3 260 7 18446744073709551615 7 add_int 260 8 260 15 119 1 : 260 15 260 16 18446744073709551615 1 { 261 3 261 4 18446744073709551615 5 stack 262 4 262 9 4 1 [ 262 9 262 10 83 2 sp 262 10 262 12 80 1 - 262 13 262 14 18446744073709551615 1 1 262 15 262 16 18446744073709551615 1 ] 262 16 262 17 83 1 . 262 17 262 18 18446744073709551615 5 int_v 262 18 262 23 67 1 = 262 24 262 25 18446744073709551615 5 stack 262 26 262 31 4 1 [ 262 31 262 32 83 2 sp 262 32 262 34 80 1 - 262 35 262 36 18446744073709551615 1 1 262 37 262 38 18446744073709551615 1 ] 262 38 262 39 83 1 . 262 39 262 40 18446744073709551615 5 int_v 262 40 262 45 67 1 + 262 46 262 47 18446744073709551615 5 stack 262 48 262 53 4 1 [ 262 53 262 54 83 2 sp 262 54 262 56 80 1 ] 262 56 262 57 83 1 . 262 57 262 58 18446744073709551615 5 int_v 262 58 262 63 67 1 ; 262 63 262 64 18446744073709551615 2 sp 263 4 263 6 80 2 -- 263 6 263 8 18446744073709551615 1 ; 263 8 263 9 18446744073709551615 2 pc 264 4 264 6 78 2 ++ 264 6 264 8 18446744073709551615 1 ; 264 8 264 9 18446744073709551615 5 break 265 4 265 9 18446744073709551615 1 ; 265 9 265 10 18446744073709551615 1 } 266 3 266 4 18446744073709551615 4 case 267 3 267 7 18446744073709551615 7 sub_int 267 8 267 15 120 1 : 267 15 267 16 18446744073709551615 1 { 268 3 268 4 18446744073709551615 5 stack 269 4 269 9 4 1 [ 269 9 269 10 83 2 sp 269 10 269 12 80 1 - 269 13 269 14 18446744073709551615 1 1 269 15 269 16 18446744073709551615 1 ] 269 16 269 17 83 1 . 269 17 269 18 18446744073709551615 5 int_v 269 18 269 23 67 1 = 269 24 269 25 18446744073709551615 5 stack 269 26 269 31 4 1 [ 269 31 269 32 83 2 sp 269 32 269 34 80 1 - 269 35 269 36 18446744073709551615 1 1 269 37 269 38 18446744073709551615 1 ] 269 38 269 39 83 1 . 269 39 269 40 18446744073709551615 5 int_v 269 40 269 45 67 1 - 269 46 269 47 18446744073709551615 5 stack 269 48 269 53 4 1 [ 269 53 269 54 83 2 sp 269 54 269 56 80 1 ] 269 56 269 57 83 1 . 269 57 269 58 18446744073709551615 5 int_v 269 58 269 63 67 1 ; 269 63 269 64 18446744073709551615 2 sp 270 4 270 6 80 2 -- 270 6 270 8 18446744073709551615 1 ; 270 8 270 9 18446744073709551615 2 pc 271 4 271 6 78 2 ++ 271 6 271 8 18446744073709551615 1 ; 271 8 271 9 18446744073709551615 5 break 272 4 272 9 18446744073709551615 1 ; 272 9 272 10 18446744073709551615 1 } 273 3 273 4 18446744073709551615 4 case 274 3 274 7 18446744073709551615 7 mul_int 274 8 274 15 121 1 : 274 15 274 16 18446744073709551615 1 { 275 3 275 4 18446744073709551615 5 stack 276 4 276 9 4 1 [ 276 9 276 10 83 2 sp 276 10 276 12 80 1 - 276 13 276 14 18446744073709551615 1 1 276 15 276 16 18446744073709551615 1 ] 276 16 276 17 83 1 . 276 17 276 18 18446744073709551615 5 int_v 276 18 276 23 67 1 = 276 24 276 25 18446744073709551615 5 stack 276 26 276 31 4 1 [ 276 31 276 32 83 2 sp 276 32 276 34 80 1 - 276 35 276 36 18446744073709551615 1 1 276 37 276 38 18446744073709551615 1 ] 276 38 276 39 83 1 . 276 39 276 40 18446744073709551615 5 int_v 276 40 276 45 67 1 * 276 46 276 47 18446744073709551615 5 stack 276 48 276 53 4 1 [ 276 53 276 54 83 2 sp 276 54 276 56 80 1 ] 276 56 276 57 83 1 . 276 57 276 58 18446744073709551615 5 int_v 276 58 276 63 67 1 ; 276 63 276 64 18446744073709551615 2 sp 277 4 277 6 80 2 -- 277 6 277 8 18446744073709551615 1 ; 277 8 277 9 18446744073709551615 2 pc 278 4 278 6 78 2 ++ 278 6 278 8 18446744073709551615 1 ; 278 8 278 9 18446744073709551615 5 break 279 4 279 9 18446744073709551615 1 ; 279 9 279 10 18446744073709551615 1 } 280 3 280 4 18446744073709551615 4 case 281 3 281 7 18446744073709551615 7 div_int 281 8 281 15 122 1 : 281 15 281 16 18446744073709551615 1 { 282 3 282 4 18446744073709551615 5 stack 283 4 283 9 4 1 [ 283 9 283 10 83 2 sp 283 10 283 12 80 1 - 283 13 283 14 18446744073709551615 1 1 283 15 283 16 18446744073709551615 1 ] 283 16 283 17 83 1 . 283 17 283 18 18446744073709551615 5 int_v 283 18 283 23 67 1 = 283 24 283 25 18446744073709551615 5 stack 283 26 283 31 4 1 [ 283 31 283 32 83 2 sp 283 32 283 34 80 1 - 283 35 283 36 18446744073709551615 1 1 283 37 283 38 18446744073709551615 1 ] 283 38 283 39 83 1 . 283 39 283 40 18446744073709551615 5 int_v 283 40 283 45 67 1 / 283 46 283 47 18446744073709551615 5 stack 283 48 283 53 4 1 [ 283 53 283 54 83 2 sp 283 54 283 56 80 1 ] 283 56 283 57 83 1 . 283 57 283 58 18446744073709551615 5 int_v 283 58 283 63 67 1 ; 283 63 283 64 18446744073709551615 2 sp 284 4 284 6 80 2 -- 284 6 284 8 18446744073709551615 1 ; 284 8 284 9 18446744073709551615 2 pc 285 4 285 6 78 2 ++ 285 6 285 8 18446744073709551615 1 ; 285 8 285 9 18446744073709551615 5 break 286 4 286 9 18446744073709551615 1 ; 286 9 286 10 18446744073709551615 1 } 287 3 287 4 18446744073709551615 4 case 288 3 288 7 18446744073709551615 7 mod_int 288 8 288 15 123 1 : 288 15 288 16 18446744073709551615 1 { 289 3 289 4 18446744073709551615 5 stack 290 4 290 9 4 1 [ 290 9 290 10 83 2 sp 290 10 290 12 80 1 - 290 13 290 14 18446744073709551615 1 1 290 15 290 16 18446744073709551615 1 ] 290 16 290 17 83 1 . 290 17 290 18 18446744073709551615 5 int_v 290 18 290 23 67 1 = 290 24 290 25 18446744073709551615 5 stack 290 26 290 31 4 1 [ 290 31 290 32 83 2 sp 290 32 290 34 80 1 - 290 35 290 36 18446744073709551615 1 1 290 37 290 38 18446744073709551615 1 ] 290 38 290 39 83 1 . 290 39 290 40 18446744073709551615 5 int_v 290 40 290 45 67 1 % 290 46 290 47 18446744073709551615 5 stack 290 48 290 53 4 1 [ 290 53 290 54 83 2 sp 290 54 290 56 80 1 ] 290 56 290 57 83 1 . 290 57 290 58 18446744073709551615 5 int_v 290 58 290 63 67 1 ; 290 63 290 64 18446744073709551615 2 sp 291 4 291 6 80 2 -- 291 6 291 8 18446744073709551615 1 ; 291 8 291 9 18446744073709551615 2 pc 292 4 292 6 78 2 ++ 292 6 292 8 18446744073709551615 1 ; 292 8 292 9 18446744073709551615 5 break 293 4 293 9 18446744073709551615 1 ; 293 9 293 10 18446744073709551615 1 } 294 3 294 4 18446744073709551615 4 case 295 3 295 7 18446744073709551615 6 gt_int 295 8 295 14 124 1 : 295 14 295 15 18446744073709551615 1 { 296 3 296 4 18446744073709551615 5 stack 297 4 297 9 4 1 [ 297 9 297 10 83 2 sp 297 10 297 12 80 1 - 297 13 297 14 18446744073709551615 1 1 297 15 297 16 18446744073709551615 1 ] 297 16 297 17 83 1 . 297 17 297 18 18446744073709551615 5 int_v 297 18 297 23 67 1 = 297 24 297 25 18446744073709551615 5 stack 297 26 297 31 4 1 [ 297 31 297 32 83 2 sp 297 32 297 34 80 1 - 297 35 297 36 18446744073709551615 1 1 297 37 297 38 18446744073709551615 1 ] 297 38 297 39 83 1 . 297 39 297 40 18446744073709551615 5 int_v 297 40 297 45 67 1 > 297 46 297 47 18446744073709551615 5 stack 297 48 297 53 4 1 [ 297 53 297 54 83 2 sp 297 54 297 56 80 1 ] 297 56 297 57 83 1 . 297 57 297 58 18446744073709551615 5 int_v 297 58 297 63 67 1 ; 297 63 297 64 18446744073709551615 2 sp 298 4 298 6 80 2 -- 298 6 298 8 18446744073709551615 1 ; 298 8 298 9 18446744073709551615 2 pc 299 4 299 6 78 2 ++ 299 6 299 8 18446744073709551615 1 ; 299 8 299 9 18446744073709551615 5 break 300 4 300 9 18446744073709551615 1 ; 300 9 300 10 18446744073709551615 1 } 301 3 301 4 18446744073709551615 4 case 302 3 302 7 18446744073709551615 6 lt_int 302 8 302 14 125 1 : 302 14 302 15 18446744073709551615 1 { 303 3 303 4 18446744073709551615 5 stack 304 4 304 9 4 1 [ 304 9 304 10 83 2 sp 304 10 304 12 80 1 - 304 13 304 14 18446744073709551615 1 1 304 15 304 16 18446744073709551615 1 ] 304 16 304 17 83 1 . 304 17 304 18 18446744073709551615 5 int_v 304 18 304 23 67 1 = 304 24 304 25 18446744073709551615 5 stack 304 26 304 31 4 1 [ 304 31 304 32 83 2 sp 304 32 304 34 80 1 - 304 35 304 36 18446744073709551615 1 1 304 37 304 38 18446744073709551615 1 ] 304 38 304 39 83 1 . 304 39 304 40 18446744073709551615 5 int_v 304 40 304 45 67 1 < 304 46 304 47 18446744073709551615 5 stack 304 48 304 53 4 1 [ 304 53 304 54 83 2 sp 304 54 304 56 80 1 ] 304 56 304 57 83 1 . 304 57 304 58 18446744073709551615 5 int_v 304 58 304 63 67 1 ; 304 63 304 64 18446744073709551615 2 sp 305 4 305 6 80 2 -- 305 6 305 8 18446744073709551615 1 ; 305 8 305 9 18446744073709551615 2 pc 306 4 306 6 78 2 ++ 306 6 306 8 18446744073709551615 1 ; 306 8 306 9 18446744073709551615 5 break 307 4 307 9 18446744073709551615 1 ; 307 9 307 10 18446744073709551615 1 } 308 3 308 4 18446744073709551615 4 case 309 3 309 7 18446744073709551615 6 ge_int 309 8 309 14 126 1 : 309 14 309 15 18446744073709551615 1 { 310 3 310 4 18446744073709551615 5 stack 311 4 311 9 4 1 [ 311 9 311 10 83 2 sp 311 10 311 12 80 1 - 311 13 311 14 18446744073709551615 1 1 311 15 311 16 18446744073709551615 1 ] 311 16 311 17 83 1 . 311 17 311 18 18446744073709551615 5 int_v 311 18 311 23 67 1 = 311 24 311 25 18446744073709551615 5 stack 311 26 311 31 4 1 [ 311 31 311 32 83 2 sp 311 32 311 34 80 1 - 311 35 311 36 18446744073709551615 1 1 311 37 311 38 18446744073709551615 1 ] 311 38 311 39 83 1 . 311 39 311 40 18446744073709551615 5 int_v 311 40 311 45 67 2 >= 311 46 311 48 18446744073709551615 5 stack 311 49 311 54 4 1 [ 311 54 311 55 83 2 sp 311 55 311 57 80 1 ] 311 57 311 58 83 1 . 311 58 311 59 18446744073709551615 5 int_v 311 59 311 64 67 1 ; 311 64 311 65 18446744073709551615 2 sp 312 4 312 6 80 2 -- 312 6 312 8 18446744073709551615 1 ; 312 8 312 9 18446744073709551615 2 pc 313 4 313 6 78 2 ++ 313 6 313 8 18446744073709551615 1 ; 313 8 313 9 18446744073709551615 5 break 314 4 314 9 18446744073709551615 1 ; 314 9 314 10 18446744073709551615 1 } 315 3 315 4 18446744073709551615 4 case 316 3 316 7 18446744073709551615 6 le_int 316 8 316 14 127 1 : 316 14 316 15 18446744073709551615 1 { 317 3 317 4 18446744073709551615 5 stack 318 4 318 9 4 1 [ 318 9 318 10 83 2 sp 318 10 318 12 80 1 - 318 13 318 14 18446744073709551615 1 1 318 15 318 16 18446744073709551615 1 ] 318 16 318 17 83 1 . 318 17 318 18 18446744073709551615 5 int_v 318 18 318 23 67 1 = 318 24 318 25 18446744073709551615 5 stack 318 26 318 31 4 1 [ 318 31 318 32 83 2 sp 318 32 318 34 80 1 - 318 35 318 36 18446744073709551615 1 1 318 37 318 38 18446744073709551615 1 ] 318 38 318 39 83 1 . 318 39 318 40 18446744073709551615 5 int_v 318 40 318 45 67 2 <= 318 46 318 48 18446744073709551615 5 stack 318 49 318 54 4 1 [ 318 54 318 55 83 2 sp 318 55 318 57 80 1 ] 318 57 318 58 83 1 . 318 58 318 59 18446744073709551615 5 int_v 318 59 318 64 67 1 ; 318 64 318 65 18446744073709551615 2 sp 319 4 319 6 80 2 -- 319 6 319 8 18446744073709551615 1 ; 319 8 319 9 18446744073709551615 2 pc 320 4 320 6 78 2 ++ 320 6 320 8 18446744073709551615 1 ; 320 8 320 9 18446744073709551615 5 break 321 4 321 9 18446744073709551615 1 ; 321 9 321 10 18446744073709551615 1 } 322 3 322 4 18446744073709551615 4 case 323 3 323 7 18446744073709551615 6 eq_int 323 8 323 14 128 1 : 323 14 323 15 18446744073709551615 1 { 324 3 324 4 18446744073709551615 5 stack 325 4 325 9 4 1 [ 325 9 325 10 83 2 sp 325 10 325 12 80 1 - 325 13 325 14 18446744073709551615 1 1 325 15 325 16 18446744073709551615 1 ] 325 16 325 17 83 1 . 325 17 325 18 18446744073709551615 5 int_v 325 18 325 23 67 1 = 325 24 325 25 18446744073709551615 5 stack 325 26 325 31 4 1 [ 325 31 325 32 83 2 sp 325 32 325 34 80 1 - 325 35 325 36 18446744073709551615 1 1 325 37 325 38 18446744073709551615 1 ] 325 38 325 39 83 1 . 325 39 325 40 18446744073709551615 5 int_v 325 40 325 45 67 2 == 325 46 325 48 18446744073709551615 5 stack 325 49 325 54 4 1 [ 325 54 325 55 83 2 sp 325 55 325 57 80 1 ] 325 57 325 58 83 1 . 325 58 325 59 18446744073709551615 5 int_v 325 59 325 64 67 1 ; 325 64 325 65 18446744073709551615 2 sp 326 4 326 6 80 2 -- 326 6 326 8 18446744073709551615 1 ; 326 8 326 9 18446744073709551615 2 pc 327 4 327 6 78 2 ++ 327 6 327 8 18446744073709551615 1 ; 327 8 327 9 18446744073709551615 5 break 328 4 328 9 18446744073709551615 1 ; 328 9 328 10 18446744073709551615 1 } 329 3 329 4 18446744073709551615 4 case 330 3 330 7 18446744073709551615 6 ne_int 330 8 330 14 129 1 : 330 14 330 15 18446744073709551615 1 { 331 3 331 4 18446744073709551615 5 stack 332 4 332 9 4 1 [ 332 9 332 10 83 2 sp 332 10 332 12 80 1 - 332 13 332 14 18446744073709551615 1 1 332 15 332 16 18446744073709551615 1 ] 332 16 332 17 83 1 . 332 17 332 18 18446744073709551615 5 int_v 332 18 332 23 67 1 = 332 24 332 25 18446744073709551615 5 stack 332 26 332 31 4 1 [ 332 31 332 32 83 2 sp 332 32 332 34 80 1 - 332 35 332 36 18446744073709551615 1 1 332 37 332 38 18446744073709551615 1 ] 332 38 332 39 83 1 . 332 39 332 40 18446744073709551615 5 int_v 332 40 332 45 67 2 != 332 46 332 48 18446744073709551615 5 stack 332 49 332 54 4 1 [ 332 54 332 55 83 2 sp 332 55 332 57 80 1 ] 332 57 332 58 83 1 . 332 58 332 59 18446744073709551615 5 int_v 332 59 332 64 67 1 ; 332 64 332 65 18446744073709551615 2 sp 333 4 333 6 80 2 -- 333 6 333 8 18446744073709551615 1 ; 333 8 333 9 18446744073709551615 2 pc 334 4 334 6 78 2 ++ 334 6 334 8 18446744073709551615 1 ; 334 8 334 9 18446744073709551615 5 break 335 4 335 9 18446744073709551615 1 ; 335 9 335 10 18446744073709551615 1 } 336 3 336 4 18446744073709551615 4 case 337 3 337 7 18446744073709551615 8 add_long 337 8 337 16 130 1 : 337 16 337 17 18446744073709551615 1 { 338 3 338 4 18446744073709551615 5 stack 339 4 339 9 4 1 [ 339 9 339 10 83 2 sp 339 10 339 12 80 1 - 339 13 339 14 18446744073709551615 1 1 339 15 339 16 18446744073709551615 1 ] 339 16 339 17 83 1 . 339 17 339 18 18446744073709551615 6 long_v 339 18 339 24 69 1 = 339 25 339 26 18446744073709551615 5 stack 339 27 339 32 4 1 [ 339 32 339 33 83 2 sp 339 33 339 35 80 1 - 339 36 339 37 18446744073709551615 1 1 339 38 339 39 18446744073709551615 1 ] 339 39 339 40 83 1 . 339 40 339 41 18446744073709551615 6 long_v 339 41 339 47 69 1 + 339 48 339 49 18446744073709551615 5 stack 339 50 339 55 4 1 [ 339 55 339 56 83 2 sp 339 56 339 58 80 1 ] 339 58 339 59 83 1 . 339 59 339 60 18446744073709551615 6 long_v 339 60 339 66 69 1 ; 339 66 339 67 18446744073709551615 2 sp 340 4 340 6 80 2 -- 340 6 340 8 18446744073709551615 1 ; 340 8 340 9 18446744073709551615 2 pc 341 4 341 6 78 2 ++ 341 6 341 8 18446744073709551615 1 ; 341 8 341 9 18446744073709551615 5 break 342 4 342 9 18446744073709551615 1 ; 342 9 342 10 18446744073709551615 1 } 343 3 343 4 18446744073709551615 4 case 344 3 344 7 18446744073709551615 8 sub_long 344 8 344 16 131 1 : 344 16 344 17 18446744073709551615 1 { 345 3 345 4 18446744073709551615 5 stack 346 4 346 9 4 1 [ 346 9 346 10 83 2 sp 346 10 346 12 80 1 - 346 13 346 14 18446744073709551615 1 1 346 15 346 16 18446744073709551615 1 ] 346 16 346 17 83 1 . 346 17 346 18 18446744073709551615 6 long_v 346 18 346 24 69 1 = 346 25 346 26 18446744073709551615 5 stack 346 27 346 32 4 1 [ 346 32 346 33 83 2 sp 346 33 346 35 80 1 - 346 36 346 37 18446744073709551615 1 1 346 38 346 39 18446744073709551615 1 ] 346 39 346 40 83 1 . 346 40 346 41 18446744073709551615 6 long_v 346 41 346 47 69 1 - 346 48 346 49 18446744073709551615 5 stack 346 50 346 55 4 1 [ 346 55 346 56 83 2 sp 346 56 346 58 80 1 ] 346 58 346 59 83 1 . 346 59 346 60 18446744073709551615 6 long_v 346 60 346 66 69 1 ; 346 66 346 67 18446744073709551615 2 sp 347 4 347 6 80 2 -- 347 6 347 8 18446744073709551615 1 ; 347 8 347 9 18446744073709551615 2 pc 348 4 348 6 78 2 ++ 348 6 348 8 18446744073709551615 1 ; 348 8 348 9 18446744073709551615 5 break 349 4 349 9 18446744073709551615 1 ; 349 9 349 10 18446744073709551615 1 } 350 3 350 4 18446744073709551615 4 case 351 3 351 7 18446744073709551615 8 mul_long 351 8 351 16 132 1 : 351 16 351 17 18446744073709551615 1 { 352 3 352 4 18446744073709551615 5 stack 353 4 353 9 4 1 [ 353 9 353 10 83 2 sp 353 10 353 12 80 1 - 353 13 353 14 18446744073709551615 1 1 353 15 353 16 18446744073709551615 1 ] 353 16 353 17 83 1 . 353 17 353 18 18446744073709551615 6 long_v 353 18 353 24 69 1 = 353 25 353 26 18446744073709551615 5 stack 353 27 353 32 4 1 [ 353 32 353 33 83 2 sp 353 33 353 35 80 1 - 353 36 353 37 18446744073709551615 1 1 353 38 353 39 18446744073709551615 1 ] 353 39 353 40 83 1 . 353 40 353 41 18446744073709551615 6 long_v 353 41 353 47 69 1 * 353 48 353 49 18446744073709551615 5 stack 353 50 353 55 4 1 [ 353 55 353 56 83 2 sp 353 56 353 58 80 1 ] 353 58 353 59 83 1 . 353 59 353 60 18446744073709551615 6 long_v 353 60 353 66 69 1 ; 353 66 353 67 18446744073709551615 2 sp 354 4 354 6 80 2 -- 354 6 354 8 18446744073709551615 1 ; 354 8 354 9 18446744073709551615 2 pc 355 4 355 6 78 2 ++ 355 6 355 8 18446744073709551615 1 ; 355 8 355 9 18446744073709551615 5 break 356 4 356 9 18446744073709551615 1 ; 356 9 356 10 18446744073709551615 1 } 357 3 357 4 18446744073709551615 4 case 358 3 358 7 18446744073709551615 8 div_long 358 8 358 16 133 1 : 358 16 358 17 18446744073709551615 1 { 359 3 359 4 18446744073709551615 5 stack 360 4 360 9 4 1 [ 360 9 360 10 83 2 sp 360 10 360 12 80 1 - 360 13 360 14 18446744073709551615 1 1 360 15 360 16 18446744073709551615 1 ] 360 16 360 17 83 1 . 360 17 360 18 18446744073709551615 6 long_v 360 18 360 24 69 1 = 360 25 360 26 18446744073709551615 5 stack 360 27 360 32 4 1 [ 360 32 360 33 83 2 sp 360 33 360 35 80 1 - 360 36 360 37 18446744073709551615 1 1 360 38 360 39 18446744073709551615 1 ] 360 39 360 40 83 1 . 360 40 360 41 18446744073709551615 6 long_v 360 41 360 47 69 1 / 360 48 360 49 18446744073709551615 5 stack 360 50 360 55 4 1 [ 360 55 360 56 83 2 sp 360 56 360 58 80 1 ] 360 58 360 59 83 1 . 360 59 360 60 18446744073709551615 6 long_v 360 60 360 66 69 1 ; 360 66 360 67 18446744073709551615 2 sp 361 4 361 6 80 2 -- 361 6 361 8 18446744073709551615 1 ; 361 8 361 9 18446744073709551615 2 pc 362 4 362 6 78 2 ++ 362 6 362 8 18446744073709551615 1 ; 362 8 362 9 18446744073709551615 5 break 363 4 363 9 18446744073709551615 1 ; 363 9 363 10 18446744073709551615 1 } 364 3 364 4 18446744073709551615 4 case 365 3 365 7 18446744073709551615 8 mod_long 365 8 365 16 134 1 : 365 16 365 17 18446744073709551615 1 { 366 3 366 4 18446744073709551615 5 stack 367 4 367 9 4 1 [ 367 9 367 10 83 2 sp 367 10 367 12 80 1 - 367 13 367 14 18446744073709551615 1 1 367 15 367 16 18446744073709551615 1 ] 367 16 367 17 83 1 . 367 17 367 18 18446744073709551615 6 long_v 367 18 367 24 69 1 = 367 25 367 26 18446744073709551615 5 stack 367 27 367 32 4 1 [ 367 32 367 33 83 2 sp 367 33 367 35 80 1 - 367 36 367 37 18446744073709551615 1 1 367 38 367 39 18446744073709551615 1 ] 367 39 367 40 83 1 . 367 40 367 41 18446744073709551615 6 long_v 367 41 367 47 69 1 % 367 48 367 49 18446744073709551615 5 stack 367 50 367 55 4 1 [ 367 55 367 56 83 2 sp 367 56 367 58 80 1 ] 367 58 367 59 83 1 . 367 59 367 60 18446744073709551615 6 long_v 367 60 367 66 69 1 ; 367 66 367 67 18446744073709551615 2 sp 368 4 368 6 80 2 -- 368 6 368 8 18446744073709551615 1 ; 368 8 368 9 18446744073709551615 2 pc 369 4 369 6 78 2 ++ 369 6 369 8 18446744073709551615 1 ; 369 8 369 9 18446744073709551615 5 break 370 4 370 9 18446744073709551615 1 ; 370 9 370 10 18446744073709551615 1 } 371 3 371 4 18446744073709551615 4 case 372 3 372 7 18446744073709551615 7 gt_long 372 8 372 15 135 1 : 372 15 372 16 18446744073709551615 1 { 373 3 373 4 18446744073709551615 5 stack 374 4 374 9 4 1 [ 374 9 374 10 83 2 sp 374 10 374 12 80 1 - 374 13 374 14 18446744073709551615 1 1 374 15 374 16 18446744073709551615 1 ] 374 16 374 17 83 1 . 374 17 374 18 18446744073709551615 6 long_v 374 18 374 24 69 1 = 374 25 374 26 18446744073709551615 5 stack 374 27 374 32 4 1 [ 374 32 374 33 83 2 sp 374 33 374 35 80 1 - 374 36 374 37 18446744073709551615 1 1 374 38 374 39 18446744073709551615 1 ] 374 39 374 40 83 1 . 374 40 374 41 18446744073709551615 6 long_v 374 41 374 47 69 1 > 374 48 374 49 18446744073709551615 5 stack 374 50 374 55 4 1 [ 374 55 374 56 83 2 sp 374 56 374 58 80 1 ] 374 58 374 59 83 1 . 374 59 374 60 18446744073709551615 6 long_v 374 60 374 66 69 1 ; 374 66 374 67 18446744073709551615 2 sp 375 4 375 6 80 2 -- 375 6 375 8 18446744073709551615 1 ; 375 8 375 9 18446744073709551615 2 pc 376 4 376 6 78 2 ++ 376 6 376 8 18446744073709551615 1 ; 376 8 376 9 18446744073709551615 5 break 377 4 377 9 18446744073709551615 1 ; 377 9 377 10 18446744073709551615 1 } 378 3 378 4 18446744073709551615 4 case 379 3 379 7 18446744073709551615 7 lt_long 379 8 379 15 136 1 : 379 15 379 16 18446744073709551615 1 { 380 3 380 4 18446744073709551615 5 stack 381 4 381 9 4 1 [ 381 9 381 10 83 2 sp 381 10 381 12 80 1 - 381 13 381 14 18446744073709551615 1 1 381 15 381 16 18446744073709551615 1 ] 381 16 381 17 83 1 . 381 17 381 18 18446744073709551615 6 long_v 381 18 381 24 69 1 = 381 25 381 26 18446744073709551615 5 stack 381 27 381 32 4 1 [ 381 32 381 33 83 2 sp 381 33 381 35 80 1 - 381 36 381 37 18446744073709551615 1 1 381 38 381 39 18446744073709551615 1 ] 381 39 381 40 83 1 . 381 40 381 41 18446744073709551615 6 long_v 381 41 381 47 69 1 < 381 48 381 49 18446744073709551615 5 stack 381 50 381 55 4 1 [ 381 55 381 56 83 2 sp 381 56 381 58 80 1 ] 381 58 381 59 83 1 . 381 59 381 60 18446744073709551615 6 long_v 381 60 381 66 69 1 ; 381 66 381 67 18446744073709551615 2 sp 382 4 382 6 80 2 -- 382 6 382 8 18446744073709551615 1 ; 382 8 382 9 18446744073709551615 2 pc 383 4 383 6 78 2 ++ 383 6 383 8 18446744073709551615 1 ; 383 8 383 9 18446744073709551615 5 break 384 4 384 9 18446744073709551615 1 ; 384 9 384 10 18446744073709551615 1 } 385 3 385 4 18446744073709551615 4 case 386 3 386 7 18446744073709551615 7 ge_long 386 8 386 15 137 1 : 386 15 386 16 18446744073709551615 1 { 387 3 387 4 18446744073709551615 5 stack 388 4 388 9 4 1 [ 388 9 388 10 83 2 sp 388 10 388 12 80 1 - 388 13 388 14 18446744073709551615 1 1 388 15 388 16 18446744073709551615 1 ] 388 16 388 17 83 1 . 388 17 388 18 18446744073709551615 6 long_v 388 18 388 24 69 1 = 388 25 388 26 18446744073709551615 5 stack 388 27 388 32 4 1 [ 388 32 388 33 83 2 sp 388 33 388 35 80 1 - 388 36 388 37 18446744073709551615 1 1 388 38 388 39 18446744073709551615 1 ] 388 39 388 40 83 1 . 388 40 388 41 18446744073709551615 6 long_v 388 41 388 47 69 2 >= 388 48 388 50 18446744073709551615 5 stack 388 51 388 56 4 1 [ 388 56 388 57 83 2 sp 388 57 388 59 80 1 ] 388 59 388 60 83 1 . 388 60 388 61 18446744073709551615 6 long_v 388 61 388 67 69 1 ; 388 67 388 68 18446744073709551615 2 sp 389 4 389 6 80 2 -- 389 6 389 8 18446744073709551615 1 ; 389 8 389 9 18446744073709551615 2 pc 390 4 390 6 78 2 ++ 390 6 390 8 18446744073709551615 1 ; 390 8 390 9 18446744073709551615 5 break 391 4 391 9 18446744073709551615 1 ; 391 9 391 10 18446744073709551615 1 } 392 3 392 4 18446744073709551615 4 case 393 3 393 7 18446744073709551615 7 le_long 393 8 393 15 138 1 : 393 15 393 16 18446744073709551615 1 { 394 3 394 4 18446744073709551615 5 stack 395 4 395 9 4 1 [ 395 9 395 10 83 2 sp 395 10 395 12 80 1 - 395 13 395 14 18446744073709551615 1 1 395 15 395 16 18446744073709551615 1 ] 395 16 395 17 83 1 . 395 17 395 18 18446744073709551615 6 long_v 395 18 395 24 69 1 = 395 25 395 26 18446744073709551615 5 stack 395 27 395 32 4 1 [ 395 32 395 33 83 2 sp 395 33 395 35 80 1 - 395 36 395 37 18446744073709551615 1 1 395 38 395 39 18446744073709551615 1 ] 395 39 395 40 83 1 . 395 40 395 41 18446744073709551615 6 long_v 395 41 395 47 69 2 <= 395 48 395 50 18446744073709551615 5 stack 395 51 395 56 4 1 [ 395 56 395 57 83 2 sp 395 57 395 59 80 1 ] 395 59 395 60 83 1 . 395 60 395 61 18446744073709551615 6 long_v 395 61 395 67 69 1 ; 395 67 395 68 18446744073709551615 2 sp 396 4 396 6 80 2 -- 396 6 396 8 18446744073709551615 1 ; 396 8 396 9 18446744073709551615 2 pc 397 4 397 6 78 2 ++ 397 6 397 8 18446744073709551615 1 ; 397 8 397 9 18446744073709551615 5 break 398 4 398 9 18446744073709551615 1 ; 398 9 398 10 18446744073709551615 1 } 399 3 399 4 18446744073709551615 4 case 400 3 400 7 18446744073709551615 7 eq_long 400 8 400 15 139 1 : 400 15 400 16 18446744073709551615 1 { 401 3 401 4 18446744073709551615 5 stack 402 4 402 9 4 1 [ 402 9 402 10 83 2 sp 402 10 402 12 80 1 - 402 13 402 14 18446744073709551615 1 1 402 15 402 16 18446744073709551615 1 ] 402 16 402 17 83 1 . 402 17 402 18 18446744073709551615 6 long_v 402 18 402 24 69 1 = 402 25 402 26 18446744073709551615 5 stack 402 27 402 32 4 1 [ 402 32 402 33 83 2 sp 402 33 402 35 80 1 - 402 36 402 37 18446744073709551615 1 1 402 38 402 39 18446744073709551615 1 ] 402 39 402 40 83 1 . 402 40 402 41 18446744073709551615 6 long_v 402 41 402 47 69 2 == 402 48 402 50 18446744073709551615 5 stack 402 51 402 56 4 1 [ 402 56 402 57 83 2 sp 402 57 402 59 80 1 ] 402 59 402 60 83 1 . 402 60 402 61 18446744073709551615 6 long_v 402 61 402 67 69 1 ; 402 67 402 68 18446744073709551615 2 sp 403 4 403 6 80 2 -- 403 6 403 8 18446744073709551615 1 ; 403 8 403 9 18446744073709551615 2 pc 404 4 404 6 78 2 ++ 404 6 404 8 18446744073709551615 1 ; 404 8 404 9 18446744073709551615 5 break 405 4 405 9 18446744073709551615 1 ; 405 9 405 10 18446744073709551615 1 } 406 3 406 4 18446744073709551615 4 case 407 3 407 7 18446744073709551615 7 ne_long 407 8 407 15 140 1 : 407 15 407 16 18446744073709551615 1 { 408 3 408 4 18446744073709551615 5 stack 409 4 409 9 4 1 [ 409 9 409 10 83 2 sp 409 10 409 12 80 1 - 409 13 409 14 18446744073709551615 1 1 409 15 409 16 18446744073709551615 1 ] 409 16 409 17 83 1 . 409 17 409 18 18446744073709551615 6 long_v 409 18 409 24 69 1 = 409 25 409 26 18446744073709551615 5 stack 409 27 409 32 4 1 [ 409 32 409 33 83 2 sp 409 33 409 35 80 1 - 409 36 409 37 18446744073709551615 1 1 409 38 409 39 18446744073709551615 1 ] 409 39 409 40 83 1 . 409 40 409 41 18446744073709551615 6 long_v 409 41 409 47 69 2 != 409 48 409 50 18446744073709551615 5 stack 409 51 409 56 4 1 [ 409 56 409 57 83 2 sp 409 57 409 59 80 1 ] 409 59 409 60 83 1 . 409 60 409 61 18446744073709551615 6 long_v 409 61 409 67 69 1 ; 409 67 409 68 18446744073709551615 2 sp 410 4 410 6 80 2 -- 410 6 410 8 18446744073709551615 1 ; 410 8 410 9 18446744073709551615 2 pc 411 4 411 6 78 2 ++ 411 6 411 8 18446744073709551615 1 ; 411 8 411 9 18446744073709551615 5 break 412 4 412 9 18446744073709551615 1 ; 412 9 412 10 18446744073709551615 1 } 413 3 413 4 18446744073709551615 4 case 414 3 414 7 18446744073709551615 9 add_float 414 8 414 17 141 1 : 414 17 414 18 18446744073709551615 1 { 415 3 415 4 18446744073709551615 5 stack 416 4 416 9 4 1 [ 416 9 416 10 83 2 sp 416 10 416 12 80 1 - 416 13 416 14 18446744073709551615 1 1 416 15 416 16 18446744073709551615 1 ] 416 16 416 17 83 1 . 416 17 416 18 18446744073709551615 7 float_v 416 18 416 25 72 1 = 416 26 416 27 18446744073709551615 5 stack 416 28 416 33 4 1 [ 416 33 416 34 83 2 sp 416 34 416 36 80 1 - 416 37 416 38 18446744073709551615 1 1 416 39 416 40 18446744073709551615 1 ] 416 40 416 41 83 1 . 416 41 416 42 18446744073709551615 7 float_v 416 42 416 49 72 1 + 416 50 416 51 18446744073709551615 5 stack 416 52 416 57 4 1 [ 416 57 416 58 83 2 sp 416 58 416 60 80 1 ] 416 60 416 61 83 1 . 416 61 416 62 18446744073709551615 7 float_v 416 62 416 69 72 1 ; 416 69 416 70 18446744073709551615 2 sp 417 4 417 6 80 2 -- 417 6 417 8 18446744073709551615 1 ; 417 8 417 9 18446744073709551615 2 pc 418 4 418 6 78 2 ++ 418 6 418 8 18446744073709551615 1 ; 418 8 418 9 18446744073709551615 5 break 419 4 419 9 18446744073709551615 1 ; 419 9 419 10 18446744073709551615 1 } 420 3 420 4 18446744073709551615 4 case 421 3 421 7 18446744073709551615 9 sub_float 421 8 421 17 142 1 : 421 17 421 18 18446744073709551615 1 { 422 3 422 4 18446744073709551615 5 stack 423 4 423 9 4 1 [ 423 9 423 10 83 2 sp 423 10 423 12 80 1 - 423 13 423 14 18446744073709551615 1 1 423 15 423 16 18446744073709551615 1 ] 423 16 423 17 83 1 . 423 17 423 18 18446744073709551615 7 float_v 423 18 423 25 72 1 = 423 26 423 27 18446744073709551615 5 stack 423 28 423 33 4 1 [ 423 33 423 34 83 2 sp 423 34 423 36 80 1 - 423 37 423 38 18446744073709551615 1 1 423 39 423 40 18446744073709551615 1 ] 423 40 423 41 83 1 . 423 41 423 42 18446744073709551615 7 float_v 423 42 423 49 72 1 - 423 50 423 51 18446744073709551615 5 stack 423 52 423 57 4 1 [ 423 57 423 58 83 2 sp 423 58 423 60 80 1 ] 423 60 423 61 83 1 . 423 61 423 62 18446744073709551615 7 float_v 423 62 423 69 72 1 ; 423 69 423 70 18446744073709551615 2 sp 424 4 424 6 80 2 -- 424 6 424 8 18446744073709551615 1 ; 424 8 424 9 18446744073709551615 2 pc 425 4 425 6 78 2 ++ 425 6 425 8 18446744073709551615 1 ; 425 8 425 9 18446744073709551615 5 break 426 4 426 9 18446744073709551615 1 ; 426 9 426 10 18446744073709551615 1 } 427 3 427 4 18446744073709551615 4 case 428 3 428 7 18446744073709551615 9 mul_float 428 8 428 17 143 1 : 428 17 428 18 18446744073709551615 1 { 429 3 429 4 18446744073709551615 5 stack 430 4 430 9 4 1 [ 430 9 430 10 83 2 sp 430 10 430 12 80 1 - 430 13 430 14 18446744073709551615 1 1 430 15 430 16 18446744073709551615 1 ] 430 16 430 17 83 1 . 430 17 430 18 18446744073709551615 7 float_v 430 18 430 25 72 1 = 430 26 430 27 18446744073709551615 5 stack 430 28 430 33 4 1 [ 430 33 430 34 83 2 sp 430 34 430 36 80 1 - 430 37 430 38 18446744073709551615 1 1 430 39 430 40 18446744073709551615 1 ] 430 40 430 41 83 1 . 430 41 430 42 18446744073709551615 7 float_v 430 42 430 49 72 1 * 430 50 430 51 18446744073709551615 5 stack 430 52 430 57 4 1 [ 430 57 430 58 83 2 sp 430 58 430 60 80 1 ] 430 60 430 61 83 1 . 430 61 430 62 18446744073709551615 7 float_v 430 62 430 69 72 1 ; 430 69 430 70 18446744073709551615 2 sp 431 4 431 6 80 2 -- 431 6 431 8 18446744073709551615 1 ; 431 8 431 9 18446744073709551615 2 pc 432 4 432 6 78 2 ++ 432 6 432 8 18446744073709551615 1 ; 432 8 432 9 18446744073709551615 5 break 433 4 433 9 18446744073709551615 1 ; 433 9 433 10 18446744073709551615 1 } 434 3 434 4 18446744073709551615 4 case 435 3 435 7 18446744073709551615 9 div_float 435 8 435 17 144 1 : 435 17 435 18 18446744073709551615 1 { 436 3 436 4 18446744073709551615 5 stack 437 4 437 9 4 1 [ 437 9 437 10 83 2 sp 437 10 437 12 80 1 - 437 13 437 14 18446744073709551615 1 1 437 15 437 16 18446744073709551615 1 ] 437 16 437 17 83 1 . 437 17 437 18 18446744073709551615 7 float_v 437 18 437 25 72 1 = 437 26 437 27 18446744073709551615 5 stack 437 28 437 33 4 1 [ 437 33 437 34 83 2 sp 437 34 437 36 80 1 - 437 37 437 38 18446744073709551615 1 1 437 39 437 40 18446744073709551615 1 ] 437 40 437 41 83 1 . 437 41 437 42 18446744073709551615 7 float_v 437 42 437 49 72 1 / 437 50 437 51 18446744073709551615 5 stack 437 52 437 57 4 1 [ 437 57 437 58 83 2 sp 437 58 437 60 80 1 ] 437 60 437 61 83 1 . 437 61 437 62 18446744073709551615 7 float_v 437 62 437 69 72 1 ; 437 69 437 70 18446744073709551615 2 sp 438 4 438 6 80 2 -- 438 6 438 8 18446744073709551615 1 ; 438 8 438 9 18446744073709551615 2 pc 439 4 439 6 78 2 ++ 439 6 439 8 18446744073709551615 1 ; 439 8 439 9 18446744073709551615 5 break 440 4 440 9 18446744073709551615 1 ; 440 9 440 10 18446744073709551615 1 } 441 3 441 4 18446744073709551615 4 case 442 3 442 7 18446744073709551615 8 gt_float 442 8 442 16 145 1 : 442 16 442 17 18446744073709551615 1 { 443 3 443 4 18446744073709551615 5 stack 444 4 444 9 4 1 [ 444 9 444 10 83 2 sp 444 10 444 12 80 1 - 444 13 444 14 18446744073709551615 1 1 444 15 444 16 18446744073709551615 1 ] 444 16 444 17 83 1 . 444 17 444 18 18446744073709551615 7 float_v 444 18 444 25 72 1 = 444 26 444 27 18446744073709551615 5 stack 444 28 444 33 4 1 [ 444 33 444 34 83 2 sp 444 34 444 36 80 1 - 444 37 444 38 18446744073709551615 1 1 444 39 444 40 18446744073709551615 1 ] 444 40 444 41 83 1 . 444 41 444 42 18446744073709551615 7 float_v 444 42 444 49 72 1 > 444 50 444 51 18446744073709551615 5 stack 444 52 444 57 4 1 [ 444 57 444 58 83 2 sp 444 58 444 60 80 1 ] 444 60 444 61 83 1 . 444 61 444 62 18446744073709551615 7 float_v 444 62 444 69 72 1 ; 444 69 444 70 18446744073709551615 2 sp 445 4 445 6 80 2 -- 445 6 445 8 18446744073709551615 1 ; 445 8 445 9 18446744073709551615 2 pc 446 4 446 6 78 2 ++ 446 6 446 8 18446744073709551615 1 ; 446 8 446 9 18446744073709551615 5 break 447 4 447 9 18446744073709551615 1 ; 447 9 447 10 18446744073709551615 1 } 448 3 448 4 18446744073709551615 4 case 449 3 449 7 18446744073709551615 8 lt_float 449 8 449 16 146 1 : 449 16 449 17 18446744073709551615 1 { 450 3 450 4 18446744073709551615 5 stack 451 4 451 9 4 1 [ 451 9 451 10 83 2 sp 451 10 451 12 80 1 - 451 13 451 14 18446744073709551615 1 1 451 15 451 16 18446744073709551615 1 ] 451 16 451 17 83 1 . 451 17 451 18 18446744073709551615 7 float_v 451 18 451 25 72 1 = 451 26 451 27 18446744073709551615 5 stack 451 28 451 33 4 1 [ 451 33 451 34 83 2 sp 451 34 451 36 80 1 - 451 37 451 38 18446744073709551615 1 1 451 39 451 40 18446744073709551615 1 ] 451 40 451 41 83 1 . 451 41 451 42 18446744073709551615 7 float_v 451 42 451 49 72 1 < 451 50 451 51 18446744073709551615 5 stack 451 52 451 57 4 1 [ 451 57 451 58 83 2 sp 451 58 451 60 80 1 ] 451 60 451 61 83 1 . 451 61 451 62 18446744073709551615 7 float_v 451 62 451 69 72 1 ; 451 69 451 70 18446744073709551615 2 sp 452 4 452 6 80 2 -- 452 6 452 8 18446744073709551615 1 ; 452 8 452 9 18446744073709551615 2 pc 453 4 453 6 78 2 ++ 453 6 453 8 18446744073709551615 1 ; 453 8 453 9 18446744073709551615 5 break 454 4 454 9 18446744073709551615 1 ; 454 9 454 10 18446744073709551615 1 } 455 3 455 4 18446744073709551615 4 case 456 3 456 7 18446744073709551615 8 ge_float 456 8 456 16 147 1 : 456 16 456 17 18446744073709551615 1 { 457 3 457 4 18446744073709551615 5 stack 458 4 458 9 4 1 [ 458 9 458 10 83 2 sp 458 10 458 12 80 1 - 458 13 458 14 18446744073709551615 1 1 458 15 458 16 18446744073709551615 1 ] 458 16 458 17 83 1 . 458 17 458 18 18446744073709551615 7 float_v 458 18 458 25 72 1 = 458 26 458 27 18446744073709551615 5 stack 458 28 458 33 4 1 [ 458 33 458 34 83 2 sp 458 34 458 36 80 1 - 458 37 458 38 18446744073709551615 1 1 458 39 458 40 18446744073709551615 1 ] 458 40 458 41 83 1 . 458 41 458 42 18446744073709551615 7 float_v 458 42 458 49 72 2 >= 458 50 458 52 18446744073709551615 5 stack 458 53 458 58 4 1 [ 458 58 458 59 83 2 sp 458 59 458 61 80 1 ] 458 61 458 62 83 1 . 458 62 458 63 18446744073709551615 7 float_v 458 63 458 70 72 1 ; 458 70 458 71 18446744073709551615 2 sp 459 4 459 6 80 2 -- 459 6 459 8 18446744073709551615 1 ; 459 8 459 9 18446744073709551615 2 pc 460 4 460 6 78 2 ++ 460 6 460 8 18446744073709551615 1 ; 460 8 460 9 18446744073709551615 5 break 461 4 461 9 18446744073709551615 1 ; 461 9 461 10 18446744073709551615 1 } 462 3 462 4 18446744073709551615 4 case 463 3 463 7 18446744073709551615 8 le_float 463 8 463 16 148 1 : 463 16 463 17 18446744073709551615 1 { 464 3 464 4 18446744073709551615 5 stack 465 4 465 9 4 1 [ 465 9 465 10 83 2 sp 465 10 465 12 80 1 - 465 13 465 14 18446744073709551615 1 1 465 15 465 16 18446744073709551615 1 ] 465 16 465 17 83 1 . 465 17 465 18 18446744073709551615 7 float_v 465 18 465 25 72 1 = 465 26 465 27 18446744073709551615 5 stack 465 28 465 33 4 1 [ 465 33 465 34 83 2 sp 465 34 465 36 80 1 - 465 37 465 38 18446744073709551615 1 1 465 39 465 40 18446744073709551615 1 ] 465 40 465 41 83 1 . 465 41 465 42 18446744073709551615 7 float_v 465 42 465 49 72 2 <= 465 50 465 52 18446744073709551615 5 stack 465 53 465 58 4 1 [ 465 58 465 59 83 2 sp 465 59 465 61 80 1 ] 465 61 465 62 83 1 . 465 62 465 63 18446744073709551615 7 float_v 465 63 465 70 72 1 ; 465 70 465 71 18446744073709551615 2 sp 466 4 466 6 80 2 -- 466 6 466 8 18446744073709551615 1 ; 466 8 466 9 18446744073709551615 2 pc 467 4 467 6 78 2 ++ 467 6 467 8 18446744073709551615 1 ; 467 8 467 9 18446744073709551615 5 break 468 4 468 9 18446744073709551615 1 ; 468 9 468 10 18446744073709551615 1 } 469 3 469 4 18446744073709551615 4 case 470 3 470 7 18446744073709551615 8 eq_float 470 8 470 16 149 1 : 470 16 470 17 18446744073709551615 1 { 471 3 471 4 18446744073709551615 5 stack 472 4 472 9 4 1 [ 472 9 472 10 83 2 sp 472 10 472 12 80 1 - 472 13 472 14 18446744073709551615 1 1 472 15 472 16 18446744073709551615 1 ] 472 16 472 17 83 1 . 472 17 472 18 18446744073709551615 7 float_v 472 18 472 25 72 1 = 472 26 472 27 18446744073709551615 5 stack 472 28 472 33 4 1 [ 472 33 472 34 83 2 sp 472 34 472 36 80 1 - 472 37 472 38 18446744073709551615 1 1 472 39 472 40 18446744073709551615 1 ] 472 40 472 41 83 1 . 472 41 472 42 18446744073709551615 7 float_v 472 42 472 49 72 2 == 472 50 472 52 18446744073709551615 5 stack 472 53 472 58 4 1 [ 472 58 472 59 83 2 sp 472 59 472 61 80 1 ] 472 61 472 62 83 1 . 472 62 472 63 18446744073709551615 7 float_v 472 63 472 70 72 1 ; 472 70 472 71 18446744073709551615 2 sp 473 4 473 6 80 2 -- 473 6 473 8 18446744073709551615 1 ; 473 8 473 9 18446744073709551615 2 pc 474 4 474 6 78 2 ++ 474 6 474 8 18446744073709551615 1 ; 474 8 474 9 18446744073709551615 5 break 475 4 475 9 18446744073709551615 1 ; 475 9 475 10 18446744073709551615 1 } 476 3 476 4 18446744073709551615 4 case 477 3 477 7 18446744073709551615 8 ne_float 477 8 477 16 150 1 : 477 16 477 17 18446744073709551615 1 { 478 3 478 4 18446744073709551615 5 stack 479 4 479 9 4 1 [ 479 9 479 10 83 2 sp 479 10 479 12 80 1 - 479 13 479 14 18446744073709551615 1 1 479 15 479 16 18446744073709551615 1 ] 479 16 479 17 83 1 . 479 17 479 18 18446744073709551615 7 float_v 479 18 479 25 72 1 = 479 26 479 27 18446744073709551615 5 stack 479 28 479 33 4 1 [ 479 33 479 34 83 2 sp 479 34 479 36 80 1 - 479 37 479 38 18446744073709551615 1 1 479 39 479 40 18446744073709551615 1 ] 479 40 479 41 83 1 . 479 41 479 42 18446744073709551615 7 float_v 479 42 479 49 72 2 != 479 50 479 52 18446744073709551615 5 stack 479 53 479 58 4 1 [ 479 58 479 59 83 2 sp 479 59 479 61 80 1 ] 479 61 479 62 83 1 . 479 62 479 63 18446744073709551615 7 float_v 479 63 479 70 72 1 ; 479 70 479 71 18446744073709551615 2 sp 480 4 480 6 80 2 -- 480 6 480 8 18446744073709551615 1 ; 480 8 480 9 18446744073709551615 2 pc 481 4 481 6 78 2 ++ 481 6 481 8 18446744073709551615 1 ; 481 8 481 9 18446744073709551615 5 break 482 4 482 9 18446744073709551615 1 ; 482 9 482 10 18446744073709551615 1 } 483 3 483 4 18446744073709551615 4 case 484 3 484 7 18446744073709551615 10 add_double 484 8 484 18 151 1 : 484 18 484 19 18446744073709551615 1 { 485 3 485 4 18446744073709551615 5 stack 486 4 486 9 4 1 [ 486 9 486 10 83 2 sp 486 10 486 12 80 1 - 486 13 486 14 18446744073709551615 1 1 486 15 486 16 18446744073709551615 1 ] 486 16 486 17 83 1 . 486 17 486 18 18446744073709551615 8 double_v 486 18 486 26 75 1 = 486 27 486 28 18446744073709551615 5 stack 487 5 487 10 4 1 [ 487 10 487 11 83 2 sp 487 11 487 13 80 1 - 487 14 487 15 18446744073709551615 1 1 487 16 487 17 18446744073709551615 1 ] 487 17 487 18 83 1 . 487 18 487 19 18446744073709551615 8 double_v 487 19 487 27 75 1 + 487 28 487 29 18446744073709551615 5 stack 487 30 487 35 4 1 [ 487 35 487 36 83 2 sp 487 36 487 38 80 1 ] 487 38 487 39 83 1 . 487 39 487 40 18446744073709551615 8 double_v 487 40 487 48 75 1 ; 487 48 487 49 18446744073709551615 2 sp 488 4 488 6 80 2 -- 488 6 488 8 18446744073709551615 1 ; 488 8 488 9 18446744073709551615 2 pc 489 4 489 6 78 2 ++ 489 6 489 8 18446744073709551615 1 ; 489 8 489 9 18446744073709551615 5 break 490 4 490 9 18446744073709551615 1 ; 490 9 490 10 18446744073709551615 1 } 491 3 491 4 18446744073709551615 4 case 492 3 492 7 18446744073709551615 10 sub_double 492 8 492 18 152 1 : 492 18 492 19 18446744073709551615 1 { 493 3 493 4 18446744073709551615 5 stack 494 4 494 9 4 1 [ 494 9 494 10 83 2 sp 494 10 494 12 80 1 - 494 13 494 14 18446744073709551615 1 1 494 15 494 16 18446744073709551615 1 ] 494 16 494 17 83 1 . 494 17 494 18 18446744073709551615 8 double_v 494 18 494 26 75 1 = 494 27 494 28 18446744073709551615 5 stack 495 5 495 10 4 1 [ 495 10 495 11 83 2 sp 495 11 495 13 80 1 - 495 14 495 15 18446744073709551615 1 1 495 16 495 17 18446744073709551615 1 ] 495 17 495 18 83 1 . 495 18 495 19 18446744073709551615 8 double_v 495 19 495 27 75 1 - 495 28 495 29 18446744073709551615 5 stack 495 30 495 35 4 1 [ 495 35 495 36 83 2 sp 495 36 495 38 80 1 ] 495 38 495 39 83 1 . 495 39 495 40 18446744073709551615 8 double_v 495 40 495 48 75 1 ; 495 48 495 49 18446744073709551615 2 sp 496 4 496 6 80 2 -- 496 6 496 8 18446744073709551615 1 ; 496 8 496 9 18446744073709551615 2 pc 497 4 497 6 78 2 ++ 497 6 497 8 18446744073709551615 1 ; 497 8 497 9 18446744073709551615 5 break 498 4 498 9 18446744073709551615 1 ; 498 9 498 10 18446744073709551615 1 } 499 3 499 4 18446744073709551615 4 case 500 3 500 7 18446744073709551615 10 mul_double 500 8 500 18 153 1 : 500 18 500 19 18446744073709551615 1 { 501 3 501 4 18446744073709551615 5 stack 502 4 502 9 4 1 [ 502 9 502 10 83 2 sp 502 10 502 12 80 1 - 502 13 502 14 18446744073709551615 1 1 502 15 502 16 18446744073709551615 1 ] 502 16 502 17 83 1 . 502 17 502 18 18446744073709551615 8 double_v 502 18 502 26 75 1 = 502 27 502 28 18446744073709551615 5 stack 503 5 503 10 4 1 [ 503 10 503 11 83 2 sp 503 11 503 13 80 1 - 503 14 503 15 18446744073709551615 1 1 503 16 503 17 18446744073709551615 1 ] 503 17 503 18 83 1 . 503 18 503 19 18446744073709551615 8 double_v 503 19 503 27 75 1 * 503 28 503 29 18446744073709551615 5 stack 503 30 503 35 4 1 [ 503 35 503 36 83 2 sp 503 36 503 38 80 1 ] 503 38 503 39 83 1 . 503 39 503 40 18446744073709551615 8 double_v 503 40 503 48 75 1 ; 503 48 503 49 18446744073709551615 2 sp 504 4 504 6 80 2 -- 504 6 504 8 18446744073709551615 1 ; 504 8 504 9 18446744073709551615 2 pc 505 4 505 6 78 2 ++ 505 6 505 8 18446744073709551615 1 ; 505 8 505 9 18446744073709551615 5 break 506 4 506 9 18446744073709551615 1 ; 506 9 506 10 18446744073709551615 1 } 507 3 507 4 18446744073709551615 4 case 508 3 508 7 18446744073709551615 10 div_double 508 8 508 18 154 1 : 508 18 508 19 18446744073709551615 1 { 509 3 509 4 18446744073709551615 5 stack 510 4 510 9 4 1 [ 510 9 510 10 83 2 sp 510 10 510 12 80 1 - 510 13 510 14 18446744073709551615 1 1 510 15 510 16 18446744073709551615 1 ] 510 16 510 17 83 1 . 510 17 510 18 18446744073709551615 8 double_v 510 18 510 26 75 1 = 510 27 510 28 18446744073709551615 5 stack 511 5 511 10 4 1 [ 511 10 511 11 83 2 sp 511 11 511 13 80 1 - 511 14 511 15 18446744073709551615 1 1 511 16 511 17 18446744073709551615 1 ] 511 17 511 18 83 1 . 511 18 511 19 18446744073709551615 8 double_v 511 19 511 27 75 1 / 511 28 511 29 18446744073709551615 5 stack 511 30 511 35 4 1 [ 511 35 511 36 83 2 sp 511 36 511 38 80 1 ] 511 38 511 39 83 1 . 511 39 511 40 18446744073709551615 8 double_v 511 40 511 48 75 1 ; 511 48 511 49 18446744073709551615 2 sp 512 4 512 6 80 2 -- 512 6 512 8 18446744073709551615 1 ; 512 8 512 9 18446744073709551615 2 pc 513 4 513 6 78 2 ++ 513 6 513 8 18446744073709551615 1 ; 513 8 513 9 18446744073709551615 5 break 514 4 514 9 18446744073709551615 1 ; 514 9 514 10 18446744073709551615 1 } 515 3 515 4 18446744073709551615 4 case 516 3 516 7 18446744073709551615 9 gt_double 516 8 516 17 155 1 : 516 17 516 18 18446744073709551615 1 { 517 3 517 4 18446744073709551615 5 stack 518 4 518 9 4 1 [ 518 9 518 10 83 2 sp 518 10 518 12 80 1 - 518 13 518 14 18446744073709551615 1 1 518 15 518 16 18446744073709551615 1 ] 518 16 518 17 83 1 . 518 17 518 18 18446744073709551615 8 double_v 518 18 518 26 75 1 = 518 27 518 28 18446744073709551615 5 stack 519 5 519 10 4 1 [ 519 10 519 11 83 2 sp 519 11 519 13 80 1 - 519 14 519 15 18446744073709551615 1 1 519 16 519 17 18446744073709551615 1 ] 519 17 519 18 83 1 . 519 18 519 19 18446744073709551615 8 double_v 519 19 519 27 75 1 > 519 28 519 29 18446744073709551615 5 stack 519 30 519 35 4 1 [ 519 35 519 36 83 2 sp 519 36 519 38 80 1 ] 519 38 519 39 83 1 . 519 39 519 40 18446744073709551615 8 double_v 519 40 519 48 75 1 ; 519 48 519 49 18446744073709551615 2 sp 520 4 520 6 80 2 -- 520 6 520 8 18446744073709551615 1 ; 520 8 520 9 18446744073709551615 2 pc 521 4 521 6 78 2 ++ 521 6 521 8 18446744073709551615 1 ; 521 8 521 9 18446744073709551615 5 break 522 4 522 9 18446744073709551615 1 ; 522 9 522 10 18446744073709551615 1 } 523 3 523 4 18446744073709551615 4 case 524 3 524 7 18446744073709551615 9 lt_double 524 8 524 17 156 1 : 524 17 524 18 18446744073709551615 1 { 525 3 525 4 18446744073709551615 5 stack 526 4 526 9 4 1 [ 526 9 526 10 83 2 sp 526 10 526 12 80 1 - 526 13 526 14 18446744073709551615 1 1 526 15 526 16 18446744073709551615 1 ] 526 16 526 17 83 1 . 526 17 526 18 18446744073709551615 8 double_v 526 18 526 26 75 1 = 526 27 526 28 18446744073709551615 5 stack 527 5 527 10 4 1 [ 527 10 527 11 83 2 sp 527 11 527 13 80 1 - 527 14 527 15 18446744073709551615 1 1 527 16 527 17 18446744073709551615 1 ] 527 17 527 18 83 1 . 527 18 527 19 18446744073709551615 8 double_v 527 19 527 27 75 1 < 527 28 527 29 18446744073709551615 5 stack 527 30 527 35 4 1 [ 527 35 527 36 83 2 sp 527 36 527 38 80 1 ] 527 38 527 39 83 1 . 527 39 527 40 18446744073709551615 8 double_v 527 40 527 48 75 1 ; 527 48 527 49 18446744073709551615 2 sp 528 4 528 6 80 2 -- 528 6 528 8 18446744073709551615 1 ; 528 8 528 9 18446744073709551615 2 pc 529 4 529 6 78 2 ++ 529 6 529 8 18446744073709551615 1 ; 529 8 529 9 18446744073709551615 5 break 530 4 530 9 18446744073709551615 1 ; 530 9 530 10 18446744073709551615 1 } 531 3 531 4 18446744073709551615 4 case 532 3 532 7 18446744073709551615 9 ge_double 532 8 532 17 157 1 : 532 17 532 18 18446744073709551615 1 { 533 3 533 4 18446744073709551615 5 stack 534 4 534 9 4 1 [ 534 9 534 10 83 2 sp 534 10 534 12 80 1 - 534 13 534 14 18446744073709551615 1 1 534 15 534 16 18446744073709551615 1 ] 534 16 534 17 83 1 . 534 17 534 18 18446744073709551615 8 double_v 534 18 534 26 75 1 = 534 27 534 28 18446744073709551615 5 stack 535 5 535 10 4 1 [ 535 10 535 11 83 2 sp 535 11 535 13 80 1 - 535 14 535 15 18446744073709551615 1 1 535 16 535 17 18446744073709551615 1 ] 535 17 535 18 83 1 . 535 18 535 19 18446744073709551615 8 double_v 535 19 535 27 75 2 >= 535 28 535 30 18446744073709551615 5 stack 535 31 535 36 4 1 [ 535 36 535 37 83 2 sp 535 37 535 39 80 1 ] 535 39 535 40 83 1 . 535 40 535 41 18446744073709551615 8 double_v 535 41 535 49 75 1 ; 535 49 535 50 18446744073709551615 2 sp 536 4 536 6 80 2 -- 536 6 536 8 18446744073709551615 1 ; 536 8 536 9 18446744073709551615 2 pc 537 4 537 6 78 2 ++ 537 6 537 8 18446744073709551615 1 ; 537 8 537 9 18446744073709551615 5 break 538 4 538 9 18446744073709551615 1 ; 538 9 538 10 18446744073709551615 1 } 539 3 539 4 18446744073709551615 4 case 540 3 540 7 18446744073709551615 9 le_double 540 8 540 17 158 1 : 540 17 540 18 18446744073709551615 1 { 541 3 541 4 18446744073709551615 5 stack 542 4 542 9 4 1 [ 542 9 542 10 83 2 sp 542 10 542 12 80 1 - 542 13 542 14 18446744073709551615 1 1 542 15 542 16 18446744073709551615 1 ] 542 16 542 17 83 1 . 542 17 542 18 18446744073709551615 8 double_v 542 18 542 26 75 1 = 542 27 542 28 18446744073709551615 5 stack 543 5 543 10 4 1 [ 543 10 543 11 83 2 sp 543 11 543 13 80 1 - 543 14 543 15 18446744073709551615 1 1 543 16 543 17 18446744073709551615 1 ] 543 17 543 18 83 1 . 543 18 543 19 18446744073709551615 8 double_v 543 19 543 27 75 2 <= 543 28 543 30 18446744073709551615 5 stack 543 31 543 36 4 1 [ 543 36 543 37 83 2 sp 543 37 543 39 80 1 ] 543 39 543 40 83 1 . 543 40 543 41 18446744073709551615 8 double_v 543 41 543 49 75 1 ; 543 49 543 50 18446744073709551615 2 sp 544 4 544 6 80 2 -- 544 6 544 8 18446744073709551615 1 ; 544 8 544 9 18446744073709551615 2 pc 545 4 545 6 78 2 ++ 545 6 545 8 18446744073709551615 1 ; 545 8 545 9 18446744073709551615 5 break 546 4 546 9 18446744073709551615 1 ; 546 9 546 10 18446744073709551615 1 } 547 3 547 4 18446744073709551615 4 case 548 3 548 7 18446744073709551615 9 eq_double 548 8 548 17 159 1 : 548 17 548 18 18446744073709551615 1 { 549 3 549 4 18446744073709551615 5 stack 550 4 550 9 4 1 [ 550 9 550 10 83 2 sp 550 10 550 12 80 1 - 550 13 550 14 18446744073709551615 1 1 550 15 550 16 18446744073709551615 1 ] 550 16 550 17 83 1 . 550 17 550 18 18446744073709551615 8 double_v 550 18 550 26 75 1 = 550 27 550 28 18446744073709551615 5 stack 551 5 551 10 4 1 [ 551 10 551 11 83 2 sp 551 11 551 13 80 1 - 551 14 551 15 18446744073709551615 1 1 551 16 551 17 18446744073709551615 1 ] 551 17 551 18 83 1 . 551 18 551 19 18446744073709551615 8 double_v 551 19 551 27 75 2 == 551 28 551 30 18446744073709551615 5 stack 551 31 551 36 4 1 [ 551 36 551 37 83 2 sp 551 37 551 39 80 1 ] 551 39 551 40 83 1 . 551 40 551 41 18446744073709551615 8 double_v 551 41 551 49 75 1 ; 551 49 551 50 18446744073709551615 2 sp 552 4 552 6 80 2 -- 552 6 552 8 18446744073709551615 1 ; 552 8 552 9 18446744073709551615 2 pc 553 4 553 6 78 2 ++ 553 6 553 8 18446744073709551615 1 ; 553 8 553 9 18446744073709551615 5 break 554 4 554 9 18446744073709551615 1 ; 554 9 554 10 18446744073709551615 1 } 555 3 555 4 18446744073709551615 4 case 556 3 556 7 18446744073709551615 9 ne_double 556 8 556 17 160 1 : 556 17 556 18 18446744073709551615 1 { 557 3 557 4 18446744073709551615 5 stack 558 4 558 9 4 1 [ 558 9 558 10 83 2 sp 558 10 558 12 80 1 - 558 13 558 14 18446744073709551615 1 1 558 15 558 16 18446744073709551615 1 ] 558 16 558 17 83 1 . 558 17 558 18 18446744073709551615 8 double_v 558 18 558 26 75 1 = 558 27 558 28 18446744073709551615 5 stack 559 5 559 10 4 1 [ 559 10 559 11 83 2 sp 559 11 559 13 80 1 - 559 14 559 15 18446744073709551615 1 1 559 16 559 17 18446744073709551615 1 ] 559 17 559 18 83 1 . 559 18 559 19 18446744073709551615 8 double_v 559 19 559 27 75 2 != 559 28 559 30 18446744073709551615 5 stack 559 31 559 36 4 1 [ 559 36 559 37 83 2 sp 559 37 559 39 80 1 ] 559 39 559 40 83 1 . 559 40 559 41 18446744073709551615 8 double_v 559 41 559 49 75 1 ; 559 49 559 50 18446744073709551615 2 sp 560 4 560 6 80 2 -- 560 6 560 8 18446744073709551615 1 ; 560 8 560 9 18446744073709551615 2 pc 561 4 561 6 78 2 ++ 561 6 561 8 18446744073709551615 1 ; 561 8 561 9 18446744073709551615 5 break 562 4 562 9 18446744073709551615 1 ; 562 9 562 10 18446744073709551615 1 } 563 3 563 4 18446744073709551615 4 case 564 3 564 7 18446744073709551615 10 return_int 564 8 564 18 161 1 : 564 18 564 19 18446744073709551615 1 { 565 3 565 4 18446744073709551615 7 int32_t 566 4 566 11 12 6 result 566 12 566 18 162 1 = 566 19 566 20 18446744073709551615 5 stack 566 21 566 26 4 1 [ 566 26 566 27 83 2 sp 566 27 566 29 80 1 ] 566 29 566 30 83 1 . 566 30 566 31 18446744073709551615 5 int_v 566 31 566 36 67 1 ; 566 36 566 37 18446744073709551615 7 int32_t 567 4 567 11 12 6 offset 567 12 567 18 163 1 = 567 19 567 20 18446744073709551615 2 fp 567 21 567 23 79 1 + 567 24 567 25 18446744073709551615 8 function 567 26 567 34 85 2 -> 567 34 567 36 18446744073709551615 4 args 567 36 567 40 81 1 + 567 41 567 42 18446744073709551615 8 function 567 43 567 51 85 2 -> 567 51 567 53 18446744073709551615 6 locals 567 53 567 59 82 1 ; 567 59 567 60 18446744073709551615 2 pc 568 4 568 6 78 1 = 568 7 568 8 18446744073709551615 5 stack 568 9 568 14 4 1 [ 568 14 568 15 83 6 offset 568 15 568 21 163 1 ] 568 21 568 22 83 1 . 568 22 568 23 18446744073709551615 5 int_v 568 23 568 28 67 1 ; 568 28 568 29 18446744073709551615 8 function 569 4 569 12 85 1 = 569 13 569 14 18446744073709551615 1 ( 569 15 569 16 18446744073709551615 8 Function 569 16 569 24 40 1 * 569 24 569 25 18446744073709551615 1 ) 569 25 569 26 18446744073709551615 5 stack 569 27 569 32 4 1 [ 569 32 569 33 83 6 offset 569 33 569 39 163 1 + 569 40 569 41 18446744073709551615 1 1 569 42 569 43 18446744073709551615 1 ] 569 43 569 44 83 1 . 569 44 569 45 18446744073709551615 6 object 569 45 569 51 84 1 ; 569 51 569 52 18446744073709551615 2 sp 570 4 570 6 80 1 = 570 7 570 8 18446744073709551615 2 fp 570 9 570 11 79 1 ; 570 11 570 12 18446744073709551615 2 fp 571 4 571 6 79 1 = 571 7 571 8 18446744073709551615 5 stack 571 9 571 14 4 1 [ 571 14 571 15 83 6 offset 571 15 571 21 163 1 + 571 22 571 23 18446744073709551615 1 2 571 24 571 25 18446744073709551615 1 ] 571 25 571 26 83 1 . 571 26 571 27 18446744073709551615 5 int_v 571 27 571 32 67 1 ; 571 32 571 33 18446744073709551615 2 if 572 4 572 6 18446744073709551615 1 ( 572 7 572 8 18446744073709551615 8 function 572 8 572 16 85 1 ) 572 16 572 17 18446744073709551615 1 { 573 4 573 5 18446744073709551615 4 code 574 5 574 9 27 1 = 574 10 574 11 18446744073709551615 1 & 574 12 574 13 18446744073709551615 1 ( 574 13 574 14 18446744073709551615 8 function 574 14 574 22 85 2 -> 574 22 574 24 18446744073709551615 4 code 574 24 574 28 28 1 ) 574 28 574 29 18446744073709551615 1 ; 574 29 574 30 18446744073709551615 10 codeLength 575 5 575 15 86 1 = 575 16 575 17 18446744073709551615 4 code 575 18 575 22 27 2 -> 575 22 575 24 87 4 size 575 24 575 28 87 1 ( 575 28 575 29 87 1 ) 575 29 575 30 87 1 ; 575 30 575 31 18446744073709551615 12 constantPool 576 5 576 17 29 1 = 576 18 576 19 18446744073709551615 1 & 576 20 576 21 18446744073709551615 1 ( 576 21 576 22 18446744073709551615 8 function 576 22 576 30 85 2 -> 576 30 576 32 18446744073709551615 9 constants 576 32 576 41 30 1 ) 576 41 576 42 18446744073709551615 1 ; 576 42 576 43 18446744073709551615 5 stack 577 5 577 10 4 1 [ 577 10 577 11 83 2 sp 577 11 577 13 80 1 ] 577 13 577 14 83 1 . 577 14 577 15 18446744073709551615 5 int_v 577 15 577 20 67 1 = 577 21 577 22 18446744073709551615 6 result 577 23 577 29 162 1 ; 577 29 577 30 18446744073709551615 5 wcout 578 5 578 10 36 2 << 578 11 578 13 37 20 L"current result = " 578 14 578 34 18446744073709551615 2 << 578 35 578 37 38 6 result 578 38 578 44 162 2 << 578 45 578 47 38 4 endl 578 48 578 52 39 1 ; 578 52 578 53 18446744073709551615 5 break 579 5 579 10 18446744073709551615 1 ; 579 10 579 11 18446744073709551615 1 } 580 4 580 5 18446744073709551615 4 else 581 4 581 8 18446744073709551615 1 { 582 4 582 5 18446744073709551615 5 wcout 583 5 583 10 36 2 << 583 11 583 13 37 12 L"result = " 583 14 583 26 18446744073709551615 2 << 583 27 583 29 38 6 result 583 30 583 36 162 2 << 583 37 583 39 38 4 endl 583 40 583 44 39 1 ; 583 44 583 45 18446744073709551615 6 return 584 5 584 11 18446744073709551615 1 ; 584 11 584 12 18446744073709551615 1 } 585 4 585 5 18446744073709551615 5 break 586 4 586 9 18446744073709551615 1 ; 586 9 586 10 18446744073709551615 1 } 587 3 587 4 18446744073709551615 4 case 588 3 588 7 18446744073709551615 6 invoke 588 8 588 14 164 1 : 588 14 588 15 18446744073709551615 1 { 589 3 589 4 18446744073709551615 8 Function 590 4 590 12 40 1 * 590 12 590 13 18446744073709551615 1 f 590 14 590 15 165 1 = 590 16 590 17 18446744073709551615 1 ( 590 18 590 19 18446744073709551615 8 Function 590 19 590 27 40 1 * 590 27 590 28 18446744073709551615 1 ) 590 28 590 29 18446744073709551615 5 stack 590 30 590 35 4 1 [ 590 35 590 36 83 2 sp 590 36 590 38 80 1 ] 590 38 590 39 83 1 . 590 39 590 40 18446744073709551615 6 object 590 40 590 46 84 1 ; 590 46 590 47 18446744073709551615 2 pc 591 4 591 6 78 2 ++ 591 6 591 8 18446744073709551615 1 ; 591 8 591 9 18446744073709551615 7 int32_t 593 4 593 11 12 23 previousFunctionPointer 593 12 593 35 166 1 = 593 36 593 37 18446744073709551615 2 fp 593 38 593 40 79 1 ; 593 40 593 41 18446744073709551615 2 fp 594 4 594 6 79 1 = 594 7 594 8 18446744073709551615 2 sp 594 9 594 11 80 1 - 594 12 594 13 18446744073709551615 1 ( 594 14 594 15 18446744073709551615 1 f 594 15 594 16 165 2 -> 594 16 594 18 18446744073709551615 4 args 594 18 594 22 81 1 ) 594 22 594 23 18446744073709551615 1 ; 594 23 594 24 18446744073709551615 2 sp 595 4 595 6 80 1 = 595 7 595 8 18446744073709551615 2 fp 595 9 595 11 79 1 + 595 12 595 13 18446744073709551615 1 ( 595 14 595 15 18446744073709551615 1 f 595 15 595 16 165 2 -> 595 16 595 18 18446744073709551615 4 args 595 18 595 22 81 1 ) 595 22 595 23 18446744073709551615 1 + 595 24 595 25 18446744073709551615 1 ( 595 26 595 27 18446744073709551615 1 f 595 27 595 28 165 2 -> 595 28 595 30 18446744073709551615 6 locals 595 30 595 36 82 1 ) 595 36 595 37 18446744073709551615 1 ; 595 37 595 38 18446744073709551615 5 stack 596 4 596 9 4 1 [ 596 9 596 10 83 2 sp 596 10 596 12 80 1 ] 596 12 596 13 83 1 . 596 13 596 14 18446744073709551615 5 int_v 596 14 596 19 67 1 = 596 20 596 21 18446744073709551615 2 pc 596 22 596 24 78 1 ; 596 24 596 25 18446744073709551615 2 sp 597 4 597 6 80 2 ++ 597 6 597 8 18446744073709551615 1 ; 597 8 597 9 18446744073709551615 5 stack 598 4 598 9 4 1 [ 598 9 598 10 83 2 sp 598 10 598 12 80 1 ] 598 12 598 13 83 1 . 598 13 598 14 18446744073709551615 6 object 598 14 598 20 84 1 = 598 21 598 22 18446744073709551615 8 function 598 23 598 31 85 1 ; 598 31 598 32 18446744073709551615 2 sp 599 4 599 6 80 2 ++ 599 6 599 8 18446744073709551615 1 ; 599 8 599 9 18446744073709551615 5 stack 600 4 600 9 4 1 [ 600 9 600 10 83 2 sp 600 10 600 12 80 1 ] 600 12 600 13 83 1 . 600 13 600 14 18446744073709551615 5 int_v 600 14 600 19 67 1 = 600 20 600 21 18446744073709551615 23 previousFunctionPointer 600 22 600 45 166 1 ; 600 45 600 46 18446744073709551615 2 sp 601 4 601 6 80 2 ++ 601 6 601 8 18446744073709551615 1 ; 601 8 601 9 18446744073709551615 8 function 603 4 603 12 85 1 = 603 13 603 14 18446744073709551615 1 f 603 15 603 16 165 1 ; 603 16 603 17 18446744073709551615 4 code 604 4 604 8 27 1 = 604 9 604 10 18446744073709551615 1 & 604 11 604 12 18446744073709551615 1 ( 604 12 604 13 18446744073709551615 8 function 604 13 604 21 85 2 -> 604 21 604 23 18446744073709551615 4 code 604 23 604 27 28 1 ) 604 27 604 28 18446744073709551615 1 ; 604 28 604 29 18446744073709551615 10 codeLength 605 4 605 14 86 1 = 605 15 605 16 18446744073709551615 4 code 605 17 605 21 27 2 -> 605 21 605 23 87 4 size 605 23 605 27 87 1 ( 605 27 605 28 87 1 ) 605 28 605 29 87 1 ; 605 29 605 30 18446744073709551615 12 constantPool 606 4 606 16 29 1 = 606 17 606 18 18446744073709551615 1 & 606 19 606 20 18446744073709551615 1 ( 606 20 606 21 18446744073709551615 8 function 606 21 606 29 85 2 -> 606 29 606 31 18446744073709551615 9 constants 606 31 606 40 30 1 ) 606 40 606 41 18446744073709551615 1 ; 606 41 606 42 18446744073709551615 2 pc 607 4 607 6 78 1 = 607 7 607 8 18446744073709551615 1 0 607 9 607 10 18446744073709551615 1 ; 607 10 607 11 18446744073709551615 5 break 608 4 608 9 18446744073709551615 1 ; 608 9 608 10 18446744073709551615 1 } 609 3 609 4 18446744073709551615 4 case 610 3 610 7 18446744073709551615 13 push_function 610 8 610 21 167 1 : 610 21 610 22 18446744073709551615 1 { 611 3 611 4 18446744073709551615 7 int32_t 612 4 612 11 12 7 cpIndex 612 12 612 19 168 1 = 612 20 612 21 18446744073709551615 1 ( 612 22 612 23 18446744073709551615 1 * 612 23 612 24 18446744073709551615 4 code 612 24 612 28 27 1 ) 612 28 612 29 18446744073709551615 1 [ 612 29 612 30 83 2 pc 612 30 612 32 78 1 + 612 33 612 34 18446744073709551615 1 1 612 35 612 36 18446744073709551615 1 ] 612 36 612 37 83 1 ; 612 37 612 38 18446744073709551615 7 int32_t 613 4 613 11 12 11 moduleIndex 613 12 613 23 169 1 = 613 24 613 25 18446744073709551615 12 constantPool 613 26 613 38 29 2 -> 613 38 613 40 25 2 at 613 40 613 42 25 1 ( 613 42 613 43 25 7 cpIndex 613 43 613 50 168 1 ) 613 50 613 51 25 1 . 613 51 613 52 18446744073709551615 5 int_v 613 52 613 57 67 1 ; 613 57 613 58 18446744073709551615 7 int32_t 614 4 614 11 12 8 funIndex 614 12 614 20 170 1 = 614 21 614 22 18446744073709551615 1 ( 614 23 614 24 18446744073709551615 1 * 614 24 614 25 18446744073709551615 4 code 614 25 614 29 27 1 ) 614 29 614 30 18446744073709551615 1 [ 614 30 614 31 83 2 pc 614 31 614 33 78 1 + 614 34 614 35 18446744073709551615 1 2 614 36 614 37 18446744073709551615 1 ] 614 37 614 38 83 1 ; 614 38 614 39 18446744073709551615 8 Function 615 4 615 12 40 1 * 615 12 615 13 18446744073709551615 1 f 615 14 615 15 171 1 = 615 16 615 17 18446744073709551615 1 & 615 18 615 19 18446744073709551615 1 ( 615 19 615 20 18446744073709551615 7 modules 615 20 615 27 9 1 . 615 27 615 28 25 2 at 615 28 615 30 25 1 ( 615 30 615 31 25 11 moduleIndex 615 31 615 42 169 1 ) 615 42 615 43 25 1 . 615 43 615 44 18446744073709551615 9 functions 615 44 615 53 26 1 . 615 53 615 54 25 2 at 615 54 615 56 25 1 ( 615 56 615 57 25 8 funIndex 615 57 615 65 170 1 ) 615 65 615 66 25 1 ) 615 66 615 67 18446744073709551615 1 ; 615 67 615 68 18446744073709551615 2 pc 616 4 616 6 78 2 += 616 7 616 9 18446744073709551615 1 3 616 10 616 11 18446744073709551615 1 ; 616 11 616 12 18446744073709551615 2 sp 617 4 617 6 80 2 ++ 617 6 617 8 18446744073709551615 1 ; 617 8 617 9 18446744073709551615 5 stack 618 4 618 9 4 1 [ 618 9 618 10 83 2 sp 618 10 618 12 80 1 ] 618 12 618 13 83 1 . 618 13 618 14 18446744073709551615 6 object 618 14 618 20 84 1 = 618 21 618 22 18446744073709551615 1 f 618 23 618 24 171 1 ; 618 24 618 25 18446744073709551615 54 //	wcout << L"store function at index " << sp << endl; 619 4 619 58 18446744073709551615 5 break 620 4 620 9 18446744073709551615 1 ; 620 9 620 10 18446744073709551615 1 } 621 3 621 4 18446744073709551615 4 case 622 3 622 7 18446744073709551615 13 jump_if_false 622 8 622 21 172 1 : 622 21 622 22 18446744073709551615 1 { 623 3 623 4 18446744073709551615 7 int32_t 624 4 624 11 12 6 target 624 12 624 18 173 1 = 624 19 624 20 18446744073709551615 9 GetUShort 624 21 624 30 174 1 ( 624 30 624 31 174 4 code 624 31 624 35 27 1 , 624 35 624 36 174 2 pc 624 37 624 39 78 1 ) 624 39 624 40 174 1 ; 624 40 624 41 18446744073709551615 2 pc 625 4 625 6 78 2 += 625 7 625 9 18446744073709551615 1 3 625 10 625 11 18446744073709551615 1 ; 625 11 625 12 18446744073709551615 7 int32_t 626 4 626 11 12 9 condition 626 12 626 21 175 1 = 626 22 626 23 18446744073709551615 5 stack 626 24 626 29 4 1 [ 626 29 626 30 83 2 sp 626 30 626 32 80 1 ] 626 32 626 33 83 1 . 626 33 626 34 18446744073709551615 5 int_v 626 34 626 39 67 1 ; 626 39 626 40 18446744073709551615 2 sp 627 4 627 6 80 2 -- 627 6 627 8 18446744073709551615 1 ; 627 8 627 9 18446744073709551615 2 if 628 4 628 6 18446744073709551615 1 ( 628 7 628 8 18446744073709551615 1 ! 628 8 628 9 18446744073709551615 9 condition 628 9 628 18 175 1 ) 628 18 628 19 18446744073709551615 1 { 629 4 629 5 18446744073709551615 2 pc 630 5 630 7 78 1 = 630 8 630 9 18446744073709551615 6 target 630 10 630 16 173 1 ; 630 16 630 17 18446744073709551615 1 } 631 4 631 5 18446744073709551615 5 break 632 4 632 9 18446744073709551615 1 ; 632 9 632 10 18446744073709551615 1 } 633 3 633 4 18446744073709551615 4 case 634 3 634 7 18446744073709551615 12 jump_if_true 634 8 634 20 176 1 : 634 20 634 21 18446744073709551615 1 { 635 3 635 4 18446744073709551615 7 int32_t 636 4 636 11 12 6 target 636 12 636 18 177 1 = 636 19 636 20 18446744073709551615 9 GetUShort 636 21 636 30 174 1 ( 636 30 636 31 174 4 code 636 31 636 35 27 1 , 636 35 636 36 174 2 pc 636 37 636 39 78 1 ) 636 39 636 40 174 1 ; 636 40 636 41 18446744073709551615 2 pc 637 4 637 6 78 2 += 637 7 637 9 18446744073709551615 1 3 637 10 637 11 18446744073709551615 1 ; 637 11 637 12 18446744073709551615 7 int32_t 638 4 638 11 12 9 condition 638 12 638 21 178 1 = 638 22 638 23 18446744073709551615 5 stack 638 24 638 29 4 1 [ 638 29 638 30 83 2 sp 638 30 638 32 80 1 ] 638 32 638 33 83 1 . 638 33 638 34 18446744073709551615 5 int_v 638 34 638 39 67 1 ; 638 39 638 40 18446744073709551615 2 sp 639 4 639 6 80 2 -- 639 6 639 8 18446744073709551615 1 ; 639 8 639 9 18446744073709551615 2 if 640 4 640 6 18446744073709551615 1 ( 640 7 640 8 18446744073709551615 9 condition 640 8 640 17 178 1 ) 640 17 640 18 18446744073709551615 1 { 641 4 641 5 18446744073709551615 2 pc 642 5 642 7 78 1 = 642 8 642 9 18446744073709551615 6 target 642 10 642 16 177 1 ; 642 16 642 17 18446744073709551615 1 } 643 4 643 5 18446744073709551615 5 break 644 4 644 9 18446744073709551615 1 ; 644 9 644 10 18446744073709551615 1 } 645 3 645 4 18446744073709551615 4 case 646 3 646 7 18446744073709551615 4 jump 646 8 646 12 179 1 : 646 12 646 13 18446744073709551615 1 { 647 3 647 4 18446744073709551615 7 int32_t 648 4 648 11 12 6 target 648 12 648 18 180 1 = 648 19 648 20 18446744073709551615 9 GetUShort 648 21 648 30 174 1 ( 648 30 648 31 174 4 code 648 31 648 35 27 1 , 648 35 648 36 174 2 pc 648 37 648 39 78 1 ) 648 39 648 40 174 1 ; 648 40 648 41 18446744073709551615 33 // pc += 3; This is not necessary 649 4 649 37 18446744073709551615 2 pc 650 4 650 6 78 1 = 650 7 650 8 18446744073709551615 6 target 650 9 650 15 180 1 ; 650 15 650 16 18446744073709551615 5 break 651 4 651 9 18446744073709551615 1 ; 651 9 651 10 18446744073709551615 1 } 652 3 652 4 18446744073709551615 7 default 653 3 653 10 18446744073709551615 1 : 653 10 653 11 18446744073709551615 1 { 654 3 654 4 18446744073709551615 5 wcout 655 4 655 9 36 2 << 655 10 655 12 37 28 L"not supported operation: " 655 13 655 41 18446744073709551615 2 << 655 42 655 44 38 6 opcode 655 45 655 51 88 2 << 655 52 655 54 38 4 endl 655 55 655 59 39 1 ; 655 59 655 60 18446744073709551615 5 throw 656 4 656 9 18446744073709551615 7 wstring 656 10 656 17 21 1 ( 656 17 656 18 22 26 L"not supported operation" 656 18 656 44 18446744073709551615 1 ) 656 44 656 45 22 1 ; 656 45 656 46 18446744073709551615 1 } 657 3 657 4 18446744073709551615 1 } 658 3 658 4 18446744073709551615 1 } 659 2 659 3 18446744073709551615 1 } 660 1 660 2 18446744073709551615 4 void 661 1 661 5 18446744073709551615 9 ShowStack 661 6 661 15 181 1 ( 661 15 661 16 181 6 vector 661 16 661 22 5 1 < 661 22 661 23 18446744073709551615 5 Value 661 23 661 28 64 1 > 661 28 661 29 18446744073709551615 1 & 661 29 661 30 18446744073709551615 5 stack 661 31 661 36 182 1 ) 661 36 661 37 181 1 { 662 1 662 2 18446744073709551615 3 for 663 2 663 5 18446744073709551615 1 ( 663 6 663 7 18446744073709551615 7 int32_t 663 7 663 14 12 1 i 663 15 663 16 183 1 = 663 17 663 18 18446744073709551615 1 0 663 19 663 20 18446744073709551615 1 ; 663 20 663 21 18446744073709551615 1 i 663 22 663 23 183 1 < 663 24 663 25 18446744073709551615 3 100 663 26 663 29 18446744073709551615 1 ; 663 29 663 30 18446744073709551615 1 i 663 31 663 32 183 2 ++ 663 32 663 34 18446744073709551615 1 ) 663 34 663 35 18446744073709551615 1 { 664 2 664 3 18446744073709551615 5 wcout 665 3 665 8 36 2 << 665 9 665 11 38 1 i 665 12 665 13 183 2 << 665 14 665 16 37 4 L"(" 665 17 665 21 18446744073709551615 2 << 665 22 665 24 38 5 stack 665 25 665 30 182 1 [ 665 30 665 31 83 1 i 665 31 665 32 183 1 ] 665 32 665 33 83 1 . 665 33 665 34 18446744073709551615 5 int_v 665 34 665 39 67 2 << 665 40 665 42 37 4 L")" 665 43 665 47 18446744073709551615 2 << 665 48 665 50 37 5 L", " 665 51 665 56 18446744073709551615 1 ; 665 56 665 57 18446744073709551615 1 } 666 2 666 3 18446744073709551615 5 wcout 667 2 667 7 36 2 << 667 8 667 10 38 3 100 667 11 667 14 18446744073709551615 2 << 667 15 667 17 37 4 L"(" 667 18 667 22 18446744073709551615 2 << 667 23 667 25 38 5 stack 667 26 667 31 182 1 [ 667 31 667 32 83 3 100 667 32 667 35 18446744073709551615 1 ] 667 35 667 36 83 1 . 667 36 667 37 18446744073709551615 5 int_v 667 37 667 42 67 2 << 667 43 667 45 37 4 L")" 667 46 667 50 18446744073709551615 1 ; 667 50 667 51 18446744073709551615 5 wcout 668 2 668 7 36 2 << 668 8 668 10 38 4 endl 668 11 668 15 39 1 ; 668 15 668 16 18446744073709551615 1 } 669 1 669 2 18446744073709551615 0 0 184 0 0 0 22 0 0 1 3 0 3 std 49 1 3 0 4 endl 49 1 3 0 5 wcout 4 1 3 0 2 VM 6 1 3 0 8 stack:VM 24 1 3 0 10 vector:std 21 1 3 0 7 Load:VM 4 1 3 0 14 ByteCodeReader 10 1 3 0 69 10:31:/home/jasonhe/Documents/MyCode/CPP/JuCi++/VirtualMachine/VM.cpp 6 1 3 0 10 modules:VM 21 1 3 0 16 clear:vector:std 6 1 3 0 10 classes:VM 20 1 3 0 7 int32_t 9 1 3 0 69 14:10:/home/jasonhe/Documents/MyCode/CPP/JuCi++/VirtualMachine/VM.cpp 21 1 3 0 22 ReadInt:ByteCodeReader 9 1 3 0 69 15:10:/home/jasonhe/Documents/MyCode/CPP/JuCi++/VirtualMachine/VM.cpp 21 1 3 0 19 Read:ByteCodeReader 21 1 3 0 20 IsEof:ByteCodeReader 9 1 3 0 69 18:11:/home/jasonhe/Documents/MyCode/CPP/JuCi++/VirtualMachine/VM.cpp 21 1 3 0 20 push_back:vector:std 21 1 3 0 13 LoadModule:VM 20 1 3 0 19 wstring:__cxx11:std 24 1 3 0 24 basic_string:__cxx11:std 6 1 3 0 7 main:VM 21 1 3 0 18 operator=:Function 21 1 3 0 13 at:vector:std 6 1 3 0 16 functions:Module 6 1 3 0 7 code:VM 6 1 3 0 13 code:Function 6 1 3 0 15 constantPool:VM 6 1 3 0 18 constants:Function 4 1 3 0 6 Module 10 1 3 0 69 36:39:/home/jasonhe/Documents/MyCode/CPP/JuCi++/VirtualMachine/VM.cpp 9 1 3 0 69 38:10:/home/jasonhe/Documents/MyCode/CPP/JuCi++/VirtualMachine/VM.cpp 9 1 3 0 69 39:10:/home/jasonhe/Documents/MyCode/CPP/JuCi++/VirtualMachine/VM.cpp 9 1 3 0 69 40:10:/home/jasonhe/Documents/MyCode/CPP/JuCi++/VirtualMachine/VM.cpp 9 1 3 0 9 wcout:std 8 1 3 0 12 operator:std 21 1 3 0 26 operator:basic_ostream:std 8 1 3 0 8 endl:std 4 1 3 0 8 Function 9 1 3 0 69 44:19:/home/jasonhe/Documents/MyCode/CPP/JuCi++/VirtualMachine/VM.cpp 21 1 3 0 18 reserve:vector:std 9 1 3 0 69 46:15:/home/jasonhe/Documents/MyCode/CPP/JuCi++/VirtualMachine/VM.cpp 21 1 3 0 15 LoadFunction:VM 10 1 3 0 69 52:43:/home/jasonhe/Documents/MyCode/CPP/JuCi++/VirtualMachine/VM.cpp 9 1 3 0 69 54:10:/home/jasonhe/Documents/MyCode/CPP/JuCi++/VirtualMachine/VM.cpp 9 1 3 0 69 55:10:/home/jasonhe/Documents/MyCode/CPP/JuCi++/VirtualMachine/VM.cpp 9 1 3 0 69 56:10:/home/jasonhe/Documents/MyCode/CPP/JuCi++/VirtualMachine/VM.cpp 9 1 3 0 69 57:10:/home/jasonhe/Documents/MyCode/CPP/JuCi++/VirtualMachine/VM.cpp 9 1 3 0 69 58:10:/home/jasonhe/Documents/MyCode/CPP/JuCi++/VirtualMachine/VM.cpp 9 1 3 0 69 59:10:/home/jasonhe/Documents/MyCode/CPP/JuCi++/VirtualMachine/VM.cpp 21 1 3 0 25 ReadUShort:ByteCodeReader 20 1 3 0 12 ConstantPool 9 1 3 0 69 66:15:/home/jasonhe/Documents/MyCode/CPP/JuCi++/VirtualMachine/VM.cpp 21 1 3 0 19 LoadConstantPool:VM 20 1 3 0 8 ByteCode 9 1 3 0 69 67:11:/home/jasonhe/Documents/MyCode/CPP/JuCi++/VirtualMachine/VM.cpp 9 1 3 0 69 69:15:/home/jasonhe/Documents/MyCode/CPP/JuCi++/VirtualMachine/VM.cpp 10 1 3 0 69 75:51:/home/jasonhe/Documents/MyCode/CPP/JuCi++/VirtualMachine/VM.cpp 10 1 3 0 69 75:67:/home/jasonhe/Documents/MyCode/CPP/JuCi++/VirtualMachine/VM.cpp 9 1 3 0 69 77:15:/home/jasonhe/Documents/MyCode/CPP/JuCi++/VirtualMachine/VM.cpp 9 1 3 0 69 78:15:/home/jasonhe/Documents/MyCode/CPP/JuCi++/VirtualMachine/VM.cpp 9 1 3 0 69 80:11:/home/jasonhe/Documents/MyCode/CPP/JuCi++/VirtualMachine/VM.cpp 20 1 3 0 5 Value 9 1 3 0 68 81:9:/home/jasonhe/Documents/MyCode/CPP/JuCi++/VirtualMachine/VM.cpp 7 1 3 0 13 constant_int: 6 1 3 0 6 int_v: 7 1 3 0 14 constant_long: 6 1 3 0 7 long_v: 21 1 3 0 23 ReadLong:ByteCodeReader 7 1 3 0 15 constant_float: 6 1 3 0 8 float_v: 21 1 3 0 24 ReadFloat:ByteCodeReader 7 1 3 0 16 constant_double: 6 1 3 0 9 double_v: 21 1 3 0 25 ReadDouble:ByteCodeReader 21 1 3 0 6 Run:VM 9 1 3 0 70 120:10:/home/jasonhe/Documents/MyCode/CPP/JuCi++/VirtualMachine/VM.cpp 9 1 3 0 70 121:10:/home/jasonhe/Documents/MyCode/CPP/JuCi++/VirtualMachine/VM.cpp 6 1 3 0 5 sp:VM 6 1 3 0 13 args:Function 6 1 3 0 15 locals:Function 21 1 3 0 21 operator[]:vector:std 6 1 3 0 7 object: 6 1 3 0 11 function:VM 9 1 3 0 70 133:10:/home/jasonhe/Documents/MyCode/CPP/JuCi++/VirtualMachine/VM.cpp 21 1 3 0 15 size:vector:std 9 1 3 0 70 136:11:/home/jasonhe/Documents/MyCode/CPP/JuCi++/VirtualMachine/VM.cpp 7 1 3 0 18 push_constant_int: 9 1 3 0 70 141:12:/home/jasonhe/Documents/MyCode/CPP/JuCi++/VirtualMachine/VM.cpp 7 1 3 0 19 push_constant_long: 9 1 3 0 70 149:12:/home/jasonhe/Documents/MyCode/CPP/JuCi++/VirtualMachine/VM.cpp 7 1 3 0 20 push_constant_float: 9 1 3 0 70 157:12:/home/jasonhe/Documents/MyCode/CPP/JuCi++/VirtualMachine/VM.cpp 7 1 3 0 21 push_constant_double: 9 1 3 0 70 165:12:/home/jasonhe/Documents/MyCode/CPP/JuCi++/VirtualMachine/VM.cpp 7 1 3 0 21 push_constant_string: 9 1 3 0 70 173:12:/home/jasonhe/Documents/MyCode/CPP/JuCi++/VirtualMachine/VM.cpp 7 1 3 0 15 push_local_int: 9 1 3 0 70 181:12:/home/jasonhe/Documents/MyCode/CPP/JuCi++/VirtualMachine/VM.cpp 7 1 3 0 16 push_local_long: 9 1 3 0 70 190:12:/home/jasonhe/Documents/MyCode/CPP/JuCi++/VirtualMachine/VM.cpp 7 1 3 0 17 push_local_float: 9 1 3 0 70 198:12:/home/jasonhe/Documents/MyCode/CPP/JuCi++/VirtualMachine/VM.cpp 7 1 3 0 18 push_local_double: 9 1 3 0 70 206:12:/home/jasonhe/Documents/MyCode/CPP/JuCi++/VirtualMachine/VM.cpp 7 1 3 0 18 push_local_object: 9 1 3 0 70 214:12:/home/jasonhe/Documents/MyCode/CPP/JuCi++/VirtualMachine/VM.cpp 7 1 3 0 14 pop_local_int: 9 1 3 0 70 222:12:/home/jasonhe/Documents/MyCode/CPP/JuCi++/VirtualMachine/VM.cpp 7 1 3 0 15 pop_local_long: 9 1 3 0 70 230:12:/home/jasonhe/Documents/MyCode/CPP/JuCi++/VirtualMachine/VM.cpp 7 1 3 0 16 pop_local_float: 9 1 3 0 70 238:12:/home/jasonhe/Documents/MyCode/CPP/JuCi++/VirtualMachine/VM.cpp 7 1 3 0 17 pop_local_double: 9 1 3 0 70 246:12:/home/jasonhe/Documents/MyCode/CPP/JuCi++/VirtualMachine/VM.cpp 7 1 3 0 17 pop_local_object: 9 1 3 0 70 254:12:/home/jasonhe/Documents/MyCode/CPP/JuCi++/VirtualMachine/VM.cpp 7 1 3 0 8 add_int: 7 1 3 0 8 sub_int: 7 1 3 0 8 mul_int: 7 1 3 0 8 div_int: 7 1 3 0 8 mod_int: 7 1 3 0 7 gt_int: 7 1 3 0 7 lt_int: 7 1 3 0 7 ge_int: 7 1 3 0 7 le_int: 7 1 3 0 7 eq_int: 7 1 3 0 7 ne_int: 7 1 3 0 9 add_long: 7 1 3 0 9 sub_long: 7 1 3 0 9 mul_long: 7 1 3 0 9 div_long: 7 1 3 0 9 mod_long: 7 1 3 0 8 gt_long: 7 1 3 0 8 lt_long: 7 1 3 0 8 ge_long: 7 1 3 0 8 le_long: 7 1 3 0 8 eq_long: 7 1 3 0 8 ne_long: 7 1 3 0 10 add_float: 7 1 3 0 10 sub_float: 7 1 3 0 10 mul_float: 7 1 3 0 10 div_float: 7 1 3 0 9 gt_float: 7 1 3 0 9 lt_float: 7 1 3 0 9 ge_float: 7 1 3 0 9 le_float: 7 1 3 0 9 eq_float: 7 1 3 0 9 ne_float: 7 1 3 0 11 add_double: 7 1 3 0 11 sub_double: 7 1 3 0 11 mul_double: 7 1 3 0 11 div_double: 7 1 3 0 10 gt_double: 7 1 3 0 10 lt_double: 7 1 3 0 10 ge_double: 7 1 3 0 10 le_double: 7 1 3 0 10 eq_double: 7 1 3 0 10 ne_double: 7 1 3 0 11 return_int: 9 1 3 0 70 566:12:/home/jasonhe/Documents/MyCode/CPP/JuCi++/VirtualMachine/VM.cpp 9 1 3 0 70 567:12:/home/jasonhe/Documents/MyCode/CPP/JuCi++/VirtualMachine/VM.cpp 7 1 3 0 7 invoke: 9 1 3 0 70 590:14:/home/jasonhe/Documents/MyCode/CPP/JuCi++/VirtualMachine/VM.cpp 9 1 3 0 70 593:12:/home/jasonhe/Documents/MyCode/CPP/JuCi++/VirtualMachine/VM.cpp 7 1 3 0 14 push_function: 9 1 3 0 70 612:12:/home/jasonhe/Documents/MyCode/CPP/JuCi++/VirtualMachine/VM.cpp 9 1 3 0 70 613:12:/home/jasonhe/Documents/MyCode/CPP/JuCi++/VirtualMachine/VM.cpp 9 1 3 0 70 614:12:/home/jasonhe/Documents/MyCode/CPP/JuCi++/VirtualMachine/VM.cpp 9 1 3 0 70 615:14:/home/jasonhe/Documents/MyCode/CPP/JuCi++/VirtualMachine/VM.cpp 7 1 3 0 14 jump_if_false: 9 1 3 0 70 624:12:/home/jasonhe/Documents/MyCode/CPP/JuCi++/VirtualMachine/VM.cpp 8 1 3 0 9 GetUShort 9 1 3 0 70 626:12:/home/jasonhe/Documents/MyCode/CPP/JuCi++/VirtualMachine/VM.cpp 7 1 3 0 13 jump_if_true: 9 1 3 0 70 636:12:/home/jasonhe/Documents/MyCode/CPP/JuCi++/VirtualMachine/VM.cpp 9 1 3 0 70 638:12:/home/jasonhe/Documents/MyCode/CPP/JuCi++/VirtualMachine/VM.cpp 7 1 3 0 5 jump: 9 1 3 0 70 648:12:/home/jasonhe/Documents/MyCode/CPP/JuCi++/VirtualMachine/VM.cpp 8 1 3 0 9 ShowStack 10 1 3 0 70 661:31:/home/jasonhe/Documents/MyCode/CPP/JuCi++/VirtualMachine/VM.cpp 9 1 3 0 70 663:15:/home/jasonhe/Documents/MyCode/CPP/JuCi++/VirtualMachine/VM.cpp 0 0 5 0 0 0 75 /home/jasonhe/Documents/MyCode/CPP/JuCi++/VirtualMachine/ByteCodeReader.hpp 1531196691 72 /home/jasonhe/Documents/MyCode/CPP/JuCi++/VirtualMachine/Instruction.hpp 1531282532 63 /home/jasonhe/Documents/MyCode/CPP/JuCi++/VirtualMachine/VM.cpp 1531297881 63 /home/jasonhe/Documents/MyCode/CPP/JuCi++/VirtualMachine/VM.hpp 1531131278 66 /home/jasonhe/Documents/MyCode/CPP/JuCi++/VirtualMachine/Value.hpp 1531136954