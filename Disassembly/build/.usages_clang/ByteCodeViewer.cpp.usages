22 serialization::archive 16 0 0 0 0 53 /home/jasonhe/Documents/MyCode/CPP/JuCi++/Disassembly 59 /home/jasonhe/Documents/MyCode/CPP/JuCi++/Disassembly/build 0 0 940 0 0 0 1 # 1 1 1 2 18446744073709551615 7 include 1 2 1 9 18446744073709551615 20 "ByteCodeViewer.hpp" 1 10 1 30 18446744073709551615 1 # 2 1 2 2 18446744073709551615 7 include 2 2 2 9 18446744073709551615 17 "Instruction.hpp" 2 10 2 27 18446744073709551615 1 # 3 1 3 2 18446744073709551615 7 include 3 2 3 9 18446744073709551615 1 < 3 10 3 11 18446744073709551615 8 iostream 3 11 3 19 18446744073709551615 1 > 3 19 3 20 18446744073709551615 5 using 4 1 4 6 18446744073709551615 3 std 4 7 4 10 0 2 :: 4 10 4 12 18446744073709551615 4 endl 4 12 4 16 1 1 ; 4 16 4 17 18446744073709551615 5 using 5 1 5 6 18446744073709551615 3 std 5 7 5 10 0 2 :: 5 10 5 12 18446744073709551615 5 wcout 5 12 5 17 2 1 ; 5 17 5 18 18446744073709551615 14 ByteCodeViewer 6 1 6 15 3 2 :: 6 15 6 17 3 14 ByteCodeViewer 6 17 6 31 3 1 ( 6 31 6 32 3 8 ByteCode 6 32 6 40 4 4 code 6 41 6 45 5 1 ) 6 45 6 46 3 1 : 7 2 7 3 3 4 code 7 4 7 8 6 1 { 7 8 7 9 7 4 code 7 9 7 13 5 1 } 7 13 7 14 7 1 { 8 1 8 2 18446744073709551615 1 } 9 1 9 2 18446744073709551615 4 void 10 1 10 5 18446744073709551615 14 ByteCodeViewer 10 6 10 20 3 2 :: 10 20 10 22 8 4 View 10 22 10 26 8 1 ( 10 26 10 27 8 1 ) 10 27 10 28 8 1 { 11 1 11 2 18446744073709551615 14 ByteCodeReader 12 2 12 16 9 6 reader 12 17 12 23 10 1 ( 12 23 12 24 9 4 code 12 24 12 28 6 1 ) 12 28 12 29 9 1 ; 12 29 12 30 18446744073709551615 10 ViewHeader 13 2 13 12 11 1 ( 13 12 13 13 11 6 reader 13 13 13 19 10 1 ) 13 19 13 20 11 1 ; 13 20 13 21 18446744073709551615 5 while 14 2 14 7 18446744073709551615 1 ( 14 8 14 9 18446744073709551615 1 ! 14 9 14 10 18446744073709551615 6 reader 14 10 14 16 10 1 . 14 16 14 17 12 5 IsEof 14 17 14 22 12 1 ( 14 22 14 23 12 1 ) 14 23 14 24 12 1 ) 14 24 14 25 18446744073709551615 1 { 15 2 15 3 18446744073709551615 7 int32_t 16 3 16 10 13 1 b 16 11 16 12 14 1 = 16 13 16 14 18446744073709551615 6 reader 16 15 16 21 10 1 . 16 21 16 22 15 4 Read 16 22 16 26 15 1 ( 16 26 16 27 15 1 ) 16 27 16 28 15 1 ; 16 28 16 29 18446744073709551615 2 if 17 3 17 5 18446744073709551615 1 ( 17 6 17 7 18446744073709551615 1 b 17 7 17 8 14 2 == 17 9 17 11 18446744073709551615 1 0 17 12 17 13 18446744073709551615 1 ) 17 13 17 14 18446744073709551615 1 { 18 3 18 4 18446744073709551615 10 ViewModule 19 4 19 14 16 1 ( 19 14 19 15 16 6 reader 19 15 19 21 10 1 ) 19 21 19 22 16 1 ; 19 22 19 23 18446744073709551615 1 } 20 3 20 4 18446744073709551615 4 else 21 3 21 7 18446744073709551615 1 { 22 3 22 4 18446744073709551615 5 break 23 4 23 9 18446744073709551615 1 ; 23 9 23 10 18446744073709551615 1 } 24 3 24 4 18446744073709551615 1 } 25 2 25 3 18446744073709551615 1 } 26 1 26 2 18446744073709551615 4 void 27 1 27 5 18446744073709551615 14 ByteCodeViewer 27 6 27 20 3 2 :: 27 20 27 22 11 10 ViewHeader 27 22 27 32 11 1 ( 27 32 27 33 11 14 ByteCodeReader 27 33 27 47 9 1 & 27 47 27 48 18446744073709551615 6 reader 27 49 27 55 17 1 ) 27 55 27 56 11 1 { 28 1 28 2 18446744073709551615 10 mainModule 29 2 29 12 18 1 = 29 13 29 14 18446744073709551615 6 reader 29 15 29 21 17 1 . 29 21 29 22 19 7 ReadInt 29 22 29 29 19 1 ( 29 29 29 30 19 1 ) 29 30 29 31 19 1 ; 29 31 29 32 18446744073709551615 12 mainFunction 30 2 30 14 20 1 = 30 15 30 16 18446744073709551615 6 reader 30 17 30 23 17 1 . 30 23 30 24 15 4 Read 30 24 30 28 15 1 ( 30 28 30 29 15 1 ) 30 29 30 30 15 1 ; 30 30 30 31 18446744073709551615 5 wcout 31 2 31 7 21 2 << 31 8 31 10 22 17 L"main module = " 31 11 31 28 18446744073709551615 2 << 31 29 31 31 23 10 mainModule 31 32 31 42 18 2 << 31 43 31 45 23 4 endl 31 46 31 50 24 1 ; 31 50 31 51 18446744073709551615 5 wcout 32 2 32 7 21 2 << 32 8 32 10 22 19 L"main function = " 32 11 32 30 18446744073709551615 2 << 32 31 32 33 23 12 mainFunction 32 34 32 46 20 2 << 32 47 32 49 23 4 endl 32 50 32 54 24 1 ; 32 54 32 55 18446744073709551615 1 } 33 1 33 2 18446744073709551615 4 void 34 1 34 5 18446744073709551615 14 ByteCodeViewer 34 6 34 20 3 2 :: 34 20 34 22 16 10 ViewModule 34 22 34 32 16 1 ( 34 32 34 33 16 14 ByteCodeReader 34 33 34 47 9 1 & 34 47 34 48 18446744073709551615 6 reader 34 49 34 55 25 1 ) 34 55 34 56 16 1 { 35 1 35 2 18446744073709551615 5 wcout 36 2 36 7 21 2 << 36 8 36 10 22 10 L"module:" 36 11 36 21 18446744073709551615 2 << 36 22 36 24 23 4 endl 36 25 36 29 24 1 ; 36 29 36 30 18446744073709551615 7 int32_t 37 2 37 9 13 11 moduleIndex 37 10 37 21 26 1 = 37 22 37 23 18446744073709551615 6 reader 37 24 37 30 25 1 . 37 30 37 31 19 7 ReadInt 37 31 37 38 19 1 ( 37 38 37 39 19 1 ) 37 39 37 40 19 1 ; 37 40 37 41 18446744073709551615 7 int32_t 38 2 38 9 13 10 fieldCount 38 10 38 20 27 1 = 38 21 38 22 18446744073709551615 6 reader 38 23 38 29 25 1 . 38 29 38 30 15 4 Read 38 30 38 34 15 1 ( 38 34 38 35 15 1 ) 38 35 38 36 15 1 ; 38 36 38 37 18446744073709551615 7 int32_t 39 2 39 9 13 13 functionCount 39 10 39 23 28 1 = 39 24 39 25 18446744073709551615 6 reader 39 26 39 32 25 1 . 39 32 39 33 15 4 Read 39 33 39 37 15 1 ( 39 37 39 38 15 1 ) 39 38 39 39 15 1 ; 39 39 39 40 18446744073709551615 5 wcout 40 2 40 7 21 2 << 40 8 40 10 22 18 L"module index = " 40 11 40 29 18446744073709551615 2 << 40 30 40 32 23 11 moduleIndex 40 33 40 44 26 2 << 40 45 40 47 23 4 endl 40 48 40 52 24 1 ; 40 52 40 53 18446744073709551615 5 wcout 41 2 41 7 21 2 << 41 8 41 10 22 17 L"field count = " 41 11 41 28 18446744073709551615 2 << 41 29 41 31 23 10 fieldCount 41 32 41 42 27 2 << 41 43 41 45 23 4 endl 41 46 41 50 24 1 ; 41 50 41 51 18446744073709551615 5 wcout 42 2 42 7 21 2 << 42 8 42 10 22 20 L"function count = " 42 11 42 31 18446744073709551615 2 << 42 32 42 34 23 13 functionCount 42 35 42 48 28 2 << 42 49 42 51 23 4 endl 42 52 42 56 24 1 ; 42 56 42 57 18446744073709551615 3 for 43 2 43 5 18446744073709551615 1 ( 43 6 43 7 18446744073709551615 7 int32_t 43 7 43 14 13 1 i 43 15 43 16 29 1 = 43 17 43 18 18446744073709551615 1 0 43 19 43 20 18446744073709551615 1 ; 43 20 43 21 18446744073709551615 1 i 43 22 43 23 29 1 < 43 24 43 25 18446744073709551615 13 functionCount 43 26 43 39 28 1 ; 43 39 43 40 18446744073709551615 1 i 43 41 43 42 29 2 ++ 43 42 43 44 18446744073709551615 1 ) 43 44 43 45 18446744073709551615 1 { 44 2 44 3 18446744073709551615 12 ViewFunction 45 3 45 15 30 1 ( 45 15 45 16 30 6 reader 45 16 45 22 25 1 ) 45 22 45 23 30 1 ; 45 23 45 24 18446744073709551615 1 } 46 2 46 3 18446744073709551615 1 } 47 1 47 2 18446744073709551615 4 void 48 1 48 5 18446744073709551615 14 ByteCodeViewer 48 6 48 20 3 2 :: 48 20 48 22 30 12 ViewFunction 48 22 48 34 30 1 ( 48 34 48 35 30 14 ByteCodeReader 48 35 48 49 9 1 & 48 49 48 50 18446744073709551615 6 reader 48 51 48 57 31 1 ) 48 57 48 58 30 1 { 49 1 49 2 18446744073709551615 5 wcout 50 2 50 7 21 2 << 50 8 50 10 22 12 L"function:" 50 11 50 23 18446744073709551615 2 << 50 24 50 26 23 4 endl 50 27 50 31 24 1 ; 50 31 50 32 18446744073709551615 7 int32_t 51 2 51 9 13 5 index 51 10 51 15 32 1 = 51 16 51 17 18446744073709551615 6 reader 51 18 51 24 31 1 . 51 24 51 25 15 4 Read 51 25 51 29 15 1 ( 51 29 51 30 15 1 ) 51 30 51 31 15 1 ; 51 31 51 32 18446744073709551615 7 int32_t 52 2 52 9 13 9 stackSize 52 10 52 19 33 1 = 52 20 52 21 18446744073709551615 6 reader 52 22 52 28 31 1 . 52 28 52 29 19 7 ReadInt 52 29 52 36 19 1 ( 52 36 52 37 19 1 ) 52 37 52 38 19 1 ; 52 38 52 39 18446744073709551615 7 int32_t 53 2 53 9 13 9 argsCount 53 10 53 19 34 1 = 53 20 53 21 18446744073709551615 6 reader 53 22 53 28 31 1 . 53 28 53 29 15 4 Read 53 29 53 33 15 1 ( 53 33 53 34 15 1 ) 53 34 53 35 15 1 ; 53 35 53 36 18446744073709551615 7 int32_t 54 2 54 9 13 11 localsCount 54 10 54 21 35 1 = 54 22 54 23 18446744073709551615 6 reader 54 24 54 30 31 1 . 54 30 54 31 15 4 Read 54 31 54 35 15 1 ( 54 35 54 36 15 1 ) 54 36 54 37 15 1 ; 54 37 54 38 18446744073709551615 7 int32_t 55 2 55 9 13 13 constantCount 55 10 55 23 36 1 = 55 24 55 25 18446744073709551615 6 reader 55 26 55 32 31 1 . 55 32 55 33 15 4 Read 55 33 55 37 15 1 ( 55 37 55 38 15 1 ) 55 38 55 39 15 1 ; 55 39 55 40 18446744073709551615 7 int32_t 56 2 56 9 13 8 codeSize 56 10 56 18 37 1 = 56 19 56 20 18446744073709551615 6 reader 56 21 56 27 31 1 . 56 27 56 28 38 10 ReadUShort 56 28 56 38 38 1 ( 56 38 56 39 38 1 ) 56 39 56 40 38 1 ; 56 40 56 41 18446744073709551615 5 wcout 57 2 57 7 21 2 << 57 8 57 10 22 11 L"index = " 57 11 57 22 18446744073709551615 2 << 57 23 57 25 23 5 index 57 26 57 31 32 2 << 57 32 57 34 23 4 endl 57 35 57 39 24 1 ; 57 39 57 40 18446744073709551615 5 wcout 58 2 58 7 21 2 << 58 8 58 10 22 16 L"stack size = " 58 11 58 27 18446744073709551615 2 << 58 28 58 30 23 9 stackSize 58 31 58 40 33 2 << 58 41 58 43 23 4 endl 58 44 58 48 24 1 ; 58 48 58 49 18446744073709551615 5 wcout 59 2 59 7 21 2 << 59 8 59 10 22 10 L"args = " 59 11 59 21 18446744073709551615 2 << 59 22 59 24 23 9 argsCount 59 25 59 34 34 2 << 59 35 59 37 23 4 endl 59 38 59 42 24 1 ; 59 42 59 43 18446744073709551615 5 wcout 60 2 60 7 21 2 << 60 8 60 10 22 12 L"locals = " 60 11 60 23 18446744073709551615 2 << 60 24 60 26 23 11 localsCount 60 27 60 38 35 2 << 60 39 60 41 23 4 endl 60 42 60 46 24 1 ; 60 46 60 47 18446744073709551615 5 wcout 61 2 61 7 21 2 << 61 8 61 10 22 20 L"constant count = " 61 11 61 31 18446744073709551615 2 << 61 32 61 34 23 13 constantCount 61 35 61 48 36 2 << 61 49 61 51 23 4 endl 61 52 61 56 24 1 ; 61 56 61 57 18446744073709551615 5 wcout 62 2 62 7 21 2 << 62 8 62 10 22 15 L"code size = " 62 11 62 26 18446744073709551615 2 << 62 27 62 29 23 8 codeSize 62 30 62 38 37 2 << 62 39 62 41 23 4 endl 62 42 62 46 24 1 ; 62 46 62 47 18446744073709551615 3 for 63 2 63 5 18446744073709551615 1 ( 63 6 63 7 18446744073709551615 7 int32_t 63 7 63 14 13 1 i 63 15 63 16 39 1 = 63 17 63 18 18446744073709551615 1 0 63 19 63 20 18446744073709551615 1 ; 63 20 63 21 18446744073709551615 1 i 63 22 63 23 39 1 < 63 24 63 25 18446744073709551615 13 constantCount 63 26 63 39 36 1 ; 63 39 63 40 18446744073709551615 1 i 63 41 63 42 39 2 ++ 63 42 63 44 18446744073709551615 1 ) 63 44 63 45 18446744073709551615 1 { 64 2 64 3 18446744073709551615 7 int32_t 65 3 65 10 13 1 b 65 11 65 12 40 1 = 65 13 65 14 18446744073709551615 6 reader 65 15 65 21 31 1 . 65 21 65 22 15 4 Read 65 22 65 26 15 1 ( 65 26 65 27 15 1 ) 65 27 65 28 15 1 ; 65 28 65 29 18446744073709551615 6 switch 66 3 66 9 18446744073709551615 1 ( 66 10 66 11 18446744073709551615 1 b 66 11 66 12 40 1 ) 66 12 66 13 18446744073709551615 1 { 67 3 67 4 18446744073709551615 4 case 68 3 68 7 18446744073709551615 12 constant_int 68 8 68 20 41 1 : 68 20 68 21 18446744073709551615 1 { 69 3 69 4 18446744073709551615 5 wcout 70 4 70 9 21 2 << 70 10 70 12 22 16 L"constant int(" 70 13 70 29 18446744073709551615 2 << 70 30 70 32 23 1 i 70 33 70 34 39 2 << 70 35 70 37 22 7 L") = " 70 38 70 45 18446744073709551615 2 << 70 46 70 48 23 6 reader 70 49 70 55 31 1 . 70 55 70 56 19 7 ReadInt 70 56 70 63 19 1 ( 70 63 70 64 19 1 ) 70 64 70 65 19 2 << 71 7 71 9 23 4 endl 71 10 71 14 24 1 ; 71 14 71 15 18446744073709551615 5 break 72 4 72 9 18446744073709551615 1 ; 72 9 72 10 18446744073709551615 1 } 73 3 73 4 18446744073709551615 4 case 74 3 74 7 18446744073709551615 13 constant_long 74 8 74 21 42 1 : 74 21 74 22 18446744073709551615 1 { 75 3 75 4 18446744073709551615 5 wcout 76 4 76 9 21 2 << 76 10 76 12 22 17 L"constant long(" 76 13 76 30 18446744073709551615 2 << 76 31 76 33 23 1 i 76 34 76 35 39 2 << 76 36 76 38 22 7 L") = " 76 39 76 46 18446744073709551615 2 << 76 47 76 49 23 6 reader 76 50 76 56 31 1 . 76 56 76 57 43 8 ReadLong 76 57 76 65 43 1 ( 76 65 76 66 43 1 ) 76 66 76 67 43 2 << 77 7 77 9 23 4 endl 77 10 77 14 24 1 ; 77 14 77 15 18446744073709551615 5 break 78 4 78 9 18446744073709551615 1 ; 78 9 78 10 18446744073709551615 1 } 79 3 79 4 18446744073709551615 4 case 80 3 80 7 18446744073709551615 14 constant_float 80 8 80 22 44 1 : 80 22 80 23 18446744073709551615 1 { 81 3 81 4 18446744073709551615 5 wcout 82 4 82 9 21 2 << 82 10 82 12 22 18 L"constant float(" 82 13 82 31 18446744073709551615 2 << 82 32 82 34 23 1 i 82 35 82 36 39 2 << 82 37 82 39 22 7 L") = " 82 40 82 47 18446744073709551615 2 << 82 48 82 50 23 6 reader 82 51 82 57 31 1 . 82 57 82 58 45 9 ReadFloat 82 58 82 67 45 1 ( 82 67 82 68 45 1 ) 82 68 82 69 45 2 << 83 7 83 9 23 4 endl 83 10 83 14 24 1 ; 83 14 83 15 18446744073709551615 5 break 84 4 84 9 18446744073709551615 1 ; 84 9 84 10 18446744073709551615 1 } 85 3 85 4 18446744073709551615 4 case 86 3 86 7 18446744073709551615 15 constant_double 86 8 86 23 46 1 : 86 23 86 24 18446744073709551615 1 { 87 3 87 4 18446744073709551615 5 wcout 88 4 88 9 21 2 << 88 10 88 12 22 19 L"constant double(" 88 13 88 32 18446744073709551615 2 << 88 33 88 35 23 1 i 88 36 88 37 39 2 << 88 38 88 40 22 7 L") = " 88 41 88 48 18446744073709551615 2 << 88 49 88 51 23 6 reader 88 52 88 58 31 1 . 88 58 88 59 47 10 ReadDouble 88 59 88 69 47 1 ( 88 69 88 70 47 1 ) 88 70 88 71 47 2 << 89 7 89 9 23 4 endl 89 10 89 14 24 1 ; 89 14 89 15 18446744073709551615 5 break 90 4 90 9 18446744073709551615 1 ; 90 9 90 10 18446744073709551615 1 } 91 3 91 4 18446744073709551615 7 default 92 3 92 10 18446744073709551615 1 : 92 10 92 11 18446744073709551615 1 { 93 3 93 4 18446744073709551615 5 throw 94 4 94 9 18446744073709551615 7 wstring 94 10 94 17 48 1 ( 94 17 94 18 49 30 L"not supported constant type" 94 18 94 48 18446744073709551615 1 ) 94 48 94 49 49 1 ; 94 49 94 50 18446744073709551615 1 } 95 3 95 4 18446744073709551615 1 } 96 3 96 4 18446744073709551615 1 } 97 2 97 3 18446744073709551615 8 ByteCode 98 2 98 10 4 12 functionCode 98 11 98 23 50 1 ; 98 23 98 24 18446744073709551615 3 for 99 2 99 5 18446744073709551615 1 ( 99 6 99 7 18446744073709551615 7 int32_t 99 7 99 14 13 1 i 99 15 99 16 51 1 = 99 17 99 18 18446744073709551615 1 0 99 19 99 20 18446744073709551615 1 ; 99 20 99 21 18446744073709551615 1 i 99 22 99 23 51 1 < 99 24 99 25 18446744073709551615 8 codeSize 99 26 99 34 37 1 ; 99 34 99 35 18446744073709551615 1 i 99 36 99 37 51 2 ++ 99 37 99 39 18446744073709551615 1 ) 99 39 99 40 18446744073709551615 1 { 100 2 100 3 18446744073709551615 12 functionCode 101 3 101 15 50 1 . 101 15 101 16 52 9 push_back 101 16 101 25 52 1 ( 101 25 101 26 52 6 reader 101 26 101 32 31 1 . 101 32 101 33 15 4 Read 101 33 101 37 15 1 ( 101 37 101 38 15 1 ) 101 38 101 39 15 1 ) 101 39 101 40 52 1 ; 101 40 101 41 18446744073709551615 1 } 102 2 102 3 18446744073709551615 14 ByteCodeReader 103 2 103 16 9 18 functionCodeReader 103 17 103 35 53 1 ( 103 35 103 36 9 12 functionCode 103 36 103 48 50 1 ) 103 48 103 49 9 1 ; 103 49 103 50 18446744073709551615 8 ViewCode 104 2 104 10 54 1 ( 104 10 104 11 54 18 functionCodeReader 104 11 104 29 53 1 ) 104 29 104 30 54 1 ; 104 30 104 31 18446744073709551615 1 } 105 1 105 2 18446744073709551615 4 void 106 1 106 5 18446744073709551615 14 ByteCodeViewer 106 6 106 20 3 2 :: 106 20 106 22 54 8 ViewCode 106 22 106 30 54 1 ( 106 30 106 31 54 14 ByteCodeReader 106 31 106 45 9 1 & 106 45 106 46 18446744073709551615 6 reader 106 47 106 53 55 1 ) 106 53 106 54 54 1 { 107 1 107 2 18446744073709551615 5 while 108 2 108 7 18446744073709551615 1 ( 108 8 108 9 18446744073709551615 1 ! 108 9 108 10 18446744073709551615 6 reader 108 10 108 16 55 1 . 108 16 108 17 12 5 IsEof 108 17 108 22 12 1 ( 108 22 108 23 12 1 ) 108 23 108 24 12 1 ) 108 24 108 25 18446744073709551615 1 { 109 2 109 3 18446744073709551615 7 int32_t 110 3 110 10 13 5 index 110 11 110 16 56 1 = 110 17 110 18 18446744073709551615 6 reader 110 19 110 25 55 1 . 110 25 110 26 18446744073709551615 5 index 110 26 110 31 57 1 ; 110 31 110 32 18446744073709551615 7 int32_t 111 3 111 10 13 11 instruction 111 11 111 22 58 1 = 111 23 111 24 18446744073709551615 6 reader 111 25 111 31 55 1 . 111 31 111 32 15 4 Read 111 32 111 36 15 1 ( 111 36 111 37 15 1 ) 111 37 111 38 15 1 ; 111 38 111 39 18446744073709551615 5 wcout 112 3 112 8 21 2 << 112 9 112 11 22 7 L"    " 112 12 112 19 18446744073709551615 1 ; 112 19 112 20 18446744073709551615 6 switch 113 3 113 9 18446744073709551615 1 ( 113 10 113 11 18446744073709551615 11 instruction 113 11 113 22 58 1 ) 113 22 113 23 18446744073709551615 1 { 114 3 114 4 18446744073709551615 4 case 115 3 115 7 18446744073709551615 7 add_int 115 8 115 15 59 1 : 115 15 115 16 18446744073709551615 4 case 116 3 116 7 18446744073709551615 7 sub_int 116 8 116 15 60 1 : 116 15 116 16 18446744073709551615 4 case 117 3 117 7 18446744073709551615 7 mul_int 117 8 117 15 61 1 : 117 15 117 16 18446744073709551615 4 case 118 3 118 7 18446744073709551615 7 div_int 118 8 118 15 62 1 : 118 15 118 16 18446744073709551615 4 case 119 3 119 7 18446744073709551615 7 mod_int 119 8 119 15 63 1 : 119 15 119 16 18446744073709551615 4 case 120 3 120 7 18446744073709551615 8 add_long 120 8 120 16 64 1 : 120 16 120 17 18446744073709551615 4 case 121 3 121 7 18446744073709551615 8 sub_long 121 8 121 16 65 1 : 121 16 121 17 18446744073709551615 4 case 122 3 122 7 18446744073709551615 8 mul_long 122 8 122 16 66 1 : 122 16 122 17 18446744073709551615 4 case 123 3 123 7 18446744073709551615 8 div_long 123 8 123 16 67 1 : 123 16 123 17 18446744073709551615 4 case 124 3 124 7 18446744073709551615 8 mod_long 124 8 124 16 68 1 : 124 16 124 17 18446744073709551615 4 case 125 3 125 7 18446744073709551615 9 add_float 125 8 125 17 69 1 : 125 17 125 18 18446744073709551615 4 case 126 3 126 7 18446744073709551615 9 sub_float 126 8 126 17 70 1 : 126 17 126 18 18446744073709551615 4 case 127 3 127 7 18446744073709551615 9 mul_float 127 8 127 17 71 1 : 127 17 127 18 18446744073709551615 4 case 128 3 128 7 18446744073709551615 9 div_float 128 8 128 17 72 1 : 128 17 128 18 18446744073709551615 4 case 129 3 129 7 18446744073709551615 10 add_double 129 8 129 18 73 1 : 129 18 129 19 18446744073709551615 4 case 130 3 130 7 18446744073709551615 10 sub_double 130 8 130 18 74 1 : 130 18 130 19 18446744073709551615 4 case 131 3 131 7 18446744073709551615 10 mul_double 131 8 131 18 75 1 : 131 18 131 19 18446744073709551615 4 case 132 3 132 7 18446744073709551615 10 div_double 132 8 132 18 76 1 : 132 18 132 19 18446744073709551615 4 case 133 3 133 7 18446744073709551615 6 gt_int 133 8 133 14 77 1 : 133 14 133 15 18446744073709551615 4 case 134 3 134 7 18446744073709551615 6 lt_int 134 8 134 14 78 1 : 134 14 134 15 18446744073709551615 4 case 135 3 135 7 18446744073709551615 6 ge_int 135 8 135 14 79 1 : 135 14 135 15 18446744073709551615 4 case 136 3 136 7 18446744073709551615 6 le_int 136 8 136 14 80 1 : 136 14 136 15 18446744073709551615 4 case 137 3 137 7 18446744073709551615 6 eq_int 137 8 137 14 81 1 : 137 14 137 15 18446744073709551615 4 case 138 3 138 7 18446744073709551615 6 ne_int 138 8 138 14 82 1 : 138 14 138 15 18446744073709551615 4 case 139 3 139 7 18446744073709551615 7 gt_long 139 8 139 15 83 1 : 139 15 139 16 18446744073709551615 4 case 140 3 140 7 18446744073709551615 7 lt_long 140 8 140 15 84 1 : 140 15 140 16 18446744073709551615 4 case 141 3 141 7 18446744073709551615 7 ge_long 141 8 141 15 85 1 : 141 15 141 16 18446744073709551615 4 case 142 3 142 7 18446744073709551615 7 le_long 142 8 142 15 86 1 : 142 15 142 16 18446744073709551615 4 case 143 3 143 7 18446744073709551615 7 eq_long 143 8 143 15 87 1 : 143 15 143 16 18446744073709551615 4 case 144 3 144 7 18446744073709551615 7 ne_long 144 8 144 15 88 1 : 144 15 144 16 18446744073709551615 4 case 145 3 145 7 18446744073709551615 8 gt_float 145 8 145 16 89 1 : 145 16 145 17 18446744073709551615 4 case 146 3 146 7 18446744073709551615 8 lt_float 146 8 146 16 90 1 : 146 16 146 17 18446744073709551615 4 case 147 3 147 7 18446744073709551615 8 ge_float 147 8 147 16 91 1 : 147 16 147 17 18446744073709551615 4 case 148 3 148 7 18446744073709551615 8 le_float 148 8 148 16 92 1 : 148 16 148 17 18446744073709551615 4 case 149 3 149 7 18446744073709551615 8 eq_float 149 8 149 16 93 1 : 149 16 149 17 18446744073709551615 4 case 150 3 150 7 18446744073709551615 8 ne_float 150 8 150 16 94 1 : 150 16 150 17 18446744073709551615 4 case 151 3 151 7 18446744073709551615 9 gt_double 151 8 151 17 95 1 : 151 17 151 18 18446744073709551615 4 case 152 3 152 7 18446744073709551615 9 lt_double 152 8 152 17 96 1 : 152 17 152 18 18446744073709551615 4 case 153 3 153 7 18446744073709551615 9 ge_double 153 8 153 17 97 1 : 153 17 153 18 18446744073709551615 4 case 154 3 154 7 18446744073709551615 9 le_double 154 8 154 17 98 1 : 154 17 154 18 18446744073709551615 4 case 155 3 155 7 18446744073709551615 9 eq_double 155 8 155 17 99 1 : 155 17 155 18 18446744073709551615 4 case 156 3 156 7 18446744073709551615 9 ne_double 156 8 156 17 100 1 : 156 17 156 18 18446744073709551615 4 case 157 3 157 7 18446744073709551615 9 eq_string 157 8 157 17 101 1 : 157 17 157 18 18446744073709551615 4 case 158 3 158 7 18446744073709551615 9 ne_string 158 8 158 17 102 1 : 158 17 158 18 18446744073709551615 4 case 159 3 159 7 18446744073709551615 9 eq_object 159 8 159 17 103 1 : 159 17 159 18 18446744073709551615 4 case 160 3 160 7 18446744073709551615 9 ne_object 160 8 160 17 104 1 : 160 17 160 18 18446744073709551615 4 case 161 3 161 7 18446744073709551615 10 return_int 161 8 161 18 105 1 : 161 18 161 19 18446744073709551615 4 case 162 3 162 7 18446744073709551615 11 return_long 162 8 162 19 106 1 : 162 19 162 20 18446744073709551615 4 case 163 3 163 7 18446744073709551615 12 return_float 163 8 163 20 107 1 : 163 20 163 21 18446744073709551615 4 case 164 3 164 7 18446744073709551615 13 return_double 164 8 164 21 108 1 : 164 21 164 22 18446744073709551615 4 case 165 3 165 7 18446744073709551615 13 return_string 165 8 165 21 109 1 : 165 21 165 22 18446744073709551615 4 case 166 3 166 7 18446744073709551615 6 invoke 166 8 166 14 110 1 : 166 14 166 15 18446744073709551615 1 { 167 3 167 4 18446744073709551615 5 wcout 168 4 168 9 21 2 << 168 10 168 12 23 5 index 168 13 168 18 56 2 << 168 19 168 21 22 5 L": " 168 22 168 27 18446744073709551615 2 << 168 28 168 30 22 19 InstructionToString 168 31 168 50 111 1 ( 168 50 168 51 111 11 instruction 168 51 168 62 58 1 ) 168 62 168 63 111 2 << 168 64 168 66 23 4 endl 168 67 168 71 24 1 ; 168 71 168 72 18446744073709551615 5 break 169 4 169 9 18446744073709551615 1 ; 169 9 169 10 18446744073709551615 1 } 170 3 170 4 18446744073709551615 4 case 171 3 171 7 18446744073709551615 17 push_constant_int 171 8 171 25 112 1 : 171 25 171 26 18446744073709551615 4 case 172 3 172 7 18446744073709551615 18 push_constant_long 172 8 172 26 113 1 : 172 26 172 27 18446744073709551615 4 case 173 3 173 7 18446744073709551615 19 push_constant_float 173 8 173 27 114 1 : 173 27 173 28 18446744073709551615 4 case 174 3 174 7 18446744073709551615 20 push_constant_double 174 8 174 28 115 1 : 174 28 174 29 18446744073709551615 4 case 175 3 175 7 18446744073709551615 20 push_constant_string 175 8 175 28 116 1 : 175 28 175 29 18446744073709551615 1 { 176 3 176 4 18446744073709551615 5 wcout 177 4 177 9 21 2 << 177 10 177 12 23 5 index 177 13 177 18 56 2 << 177 19 177 21 22 5 L": " 177 22 177 27 18446744073709551615 2 << 177 28 177 30 22 19 InstructionToString 177 31 177 50 111 1 ( 177 50 177 51 111 11 instruction 177 51 177 62 58 1 ) 177 62 177 63 111 2 << 177 64 177 66 22 4 L" " 177 67 177 71 18446744073709551615 1 ; 177 71 177 72 18446744073709551615 5 wcout 178 4 178 9 21 2 << 178 10 178 12 23 6 reader 178 13 178 19 55 1 . 178 19 178 20 15 4 Read 178 20 178 24 15 1 ( 178 24 178 25 15 1 ) 178 25 178 26 15 2 << 178 27 178 29 23 4 endl 178 30 178 34 24 1 ; 178 34 178 35 18446744073709551615 5 break 179 4 179 9 18446744073709551615 1 ; 179 9 179 10 18446744073709551615 1 } 180 3 180 4 18446744073709551615 4 case 181 3 181 7 18446744073709551615 14 push_local_int 181 8 181 22 117 1 : 181 22 181 23 18446744073709551615 4 case 182 3 182 7 18446744073709551615 15 push_local_long 182 8 182 23 118 1 : 182 23 182 24 18446744073709551615 4 case 183 3 183 7 18446744073709551615 16 push_local_float 183 8 183 24 119 1 : 183 24 183 25 18446744073709551615 4 case 184 3 184 7 18446744073709551615 17 push_local_double 184 8 184 25 120 1 : 184 25 184 26 18446744073709551615 4 case 185 3 185 7 18446744073709551615 17 push_local_string 185 8 185 25 121 1 : 185 25 185 26 18446744073709551615 1 { 186 3 186 4 18446744073709551615 5 wcout 187 4 187 9 21 2 << 187 10 187 12 23 5 index 187 13 187 18 56 2 << 187 19 187 21 22 5 L": " 187 22 187 27 18446744073709551615 2 << 187 28 187 30 22 19 InstructionToString 187 31 187 50 111 1 ( 187 50 187 51 111 11 instruction 187 51 187 62 58 1 ) 187 62 187 63 111 2 << 187 64 187 66 22 4 L" " 187 67 187 71 18446744073709551615 1 ; 187 71 187 72 18446744073709551615 5 wcout 188 4 188 9 21 2 << 188 10 188 12 23 6 reader 188 13 188 19 55 1 . 188 19 188 20 15 4 Read 188 20 188 24 15 1 ( 188 24 188 25 15 1 ) 188 25 188 26 15 2 << 188 27 188 29 23 4 endl 188 30 188 34 24 1 ; 188 34 188 35 18446744073709551615 5 break 189 4 189 9 18446744073709551615 1 ; 189 9 189 10 18446744073709551615 1 } 190 3 190 4 18446744073709551615 4 case 191 3 191 7 18446744073709551615 13 pop_local_int 191 8 191 21 122 1 : 191 21 191 22 18446744073709551615 4 case 192 3 192 7 18446744073709551615 14 pop_local_long 192 8 192 22 123 1 : 192 22 192 23 18446744073709551615 4 case 193 3 193 7 18446744073709551615 15 pop_local_float 193 8 193 23 124 1 : 193 23 193 24 18446744073709551615 4 case 194 3 194 7 18446744073709551615 16 pop_local_double 194 8 194 24 125 1 : 194 24 194 25 18446744073709551615 4 case 195 3 195 7 18446744073709551615 16 pop_local_string 195 8 195 24 126 1 : 195 24 195 25 18446744073709551615 1 { 196 3 196 4 18446744073709551615 5 wcout 197 4 197 9 21 2 << 197 10 197 12 23 5 index 197 13 197 18 56 2 << 197 19 197 21 22 5 L": " 197 22 197 27 18446744073709551615 2 << 197 28 197 30 22 19 InstructionToString 197 31 197 50 111 1 ( 197 50 197 51 111 11 instruction 197 51 197 62 58 1 ) 197 62 197 63 111 2 << 197 64 197 66 22 4 L" " 197 67 197 71 18446744073709551615 1 ; 197 71 197 72 18446744073709551615 5 wcout 198 4 198 9 21 2 << 198 10 198 12 23 6 reader 198 13 198 19 55 1 . 198 19 198 20 15 4 Read 198 20 198 24 15 1 ( 198 24 198 25 15 1 ) 198 25 198 26 15 2 << 198 27 198 29 23 4 endl 198 30 198 34 24 1 ; 198 34 198 35 18446744073709551615 5 break 199 4 199 9 18446744073709551615 1 ; 199 9 199 10 18446744073709551615 1 } 200 3 200 4 18446744073709551615 4 case 201 3 201 7 18446744073709551615 4 jump 201 8 201 12 127 1 : 201 12 201 13 18446744073709551615 4 case 202 3 202 7 18446744073709551615 12 jump_if_true 202 8 202 20 128 1 : 202 20 202 21 18446744073709551615 4 case 203 3 203 7 18446744073709551615 13 jump_if_false 203 8 203 21 129 1 : 203 21 203 22 18446744073709551615 1 { 204 3 204 4 18446744073709551615 5 wcout 205 4 205 9 21 2 << 205 10 205 12 23 5 index 205 13 205 18 56 2 << 205 19 205 21 22 5 L": " 205 22 205 27 18446744073709551615 2 << 205 28 205 30 22 19 InstructionToString 205 31 205 50 111 1 ( 205 50 205 51 111 11 instruction 205 51 205 62 58 1 ) 205 62 205 63 111 2 << 205 64 205 66 22 4 L" " 205 67 205 71 18446744073709551615 1 ; 205 71 205 72 18446744073709551615 5 wcout 206 4 206 9 21 2 << 206 10 206 12 23 6 reader 206 13 206 19 55 1 . 206 19 206 20 38 10 ReadUShort 206 20 206 30 38 1 ( 206 30 206 31 38 1 ) 206 31 206 32 38 2 << 206 33 206 35 23 4 endl 206 36 206 40 24 1 ; 206 40 206 41 18446744073709551615 5 break 207 4 207 9 18446744073709551615 1 ; 207 9 207 10 18446744073709551615 1 } 208 3 208 4 18446744073709551615 4 case 209 3 209 7 18446744073709551615 13 push_function 209 8 209 21 130 1 : 209 21 209 22 18446744073709551615 1 { 210 3 210 4 18446744073709551615 5 wcout 211 4 211 9 21 2 << 211 10 211 12 23 5 index 211 13 211 18 56 2 << 211 19 211 21 22 5 L": " 211 22 211 27 18446744073709551615 2 << 211 28 211 30 22 19 InstructionToString 211 31 211 50 111 1 ( 211 50 211 51 111 11 instruction 211 51 211 62 58 1 ) 211 62 211 63 111 2 << 211 64 211 66 22 4 L" " 211 67 211 71 18446744073709551615 1 ; 211 71 211 72 18446744073709551615 5 wcout 212 4 212 9 21 2 << 212 10 212 12 23 6 reader 212 13 212 19 55 1 . 212 19 212 20 15 4 Read 212 20 212 24 15 1 ( 212 24 212 25 15 1 ) 212 25 212 26 15 2 << 212 27 212 29 22 4 L" " 212 30 212 34 18446744073709551615 1 ; 212 34 212 35 18446744073709551615 5 wcout 213 4 213 9 21 2 << 213 10 213 12 23 6 reader 213 13 213 19 55 1 . 213 19 213 20 15 4 Read 213 20 213 24 15 1 ( 213 24 213 25 15 1 ) 213 25 213 26 15 2 << 213 27 213 29 23 4 endl 213 30 213 34 24 1 ; 213 34 213 35 18446744073709551615 5 break 214 4 214 9 18446744073709551615 1 ; 214 9 214 10 18446744073709551615 1 } 215 3 215 4 18446744073709551615 1 } 216 3 216 4 18446744073709551615 1 } 217 2 217 3 18446744073709551615 1 } 218 1 218 2 18446744073709551615 0 0 131 0 0 0 22 0 0 1 3 0 3 std 49 1 3 0 4 endl 49 1 3 0 5 wcout 4 1 3 0 14 ByteCodeViewer 36 1 3 0 8 ByteCode 10 1 3 0 77 6:41:/home/jasonhe/Documents/MyCode/CPP/JuCi++/Disassembly/ByteCodeViewer.cpp 6 1 3 0 19 code:ByteCodeViewer 24 1 3 0 10 vector:std 21 1 3 0 19 View:ByteCodeViewer 4 1 3 0 14 ByteCodeReader 9 1 3 0 78 12:17:/home/jasonhe/Documents/MyCode/CPP/JuCi++/Disassembly/ByteCodeViewer.cpp 21 1 3 0 25 ViewHeader:ByteCodeViewer 21 1 3 0 20 IsEof:ByteCodeReader 20 1 3 0 7 int32_t 9 1 3 0 78 16:11:/home/jasonhe/Documents/MyCode/CPP/JuCi++/Disassembly/ByteCodeViewer.cpp 21 1 3 0 19 Read:ByteCodeReader 21 1 3 0 25 ViewModule:ByteCodeViewer 10 1 3 0 78 27:49:/home/jasonhe/Documents/MyCode/CPP/JuCi++/Disassembly/ByteCodeViewer.cpp 6 1 3 0 25 mainModule:ByteCodeViewer 21 1 3 0 22 ReadInt:ByteCodeReader 6 1 3 0 27 mainFunction:ByteCodeViewer 9 1 3 0 9 wcout:std 8 1 3 0 12 operator:std 21 1 3 0 26 operator:basic_ostream:std 8 1 3 0 8 endl:std 10 1 3 0 78 34:49:/home/jasonhe/Documents/MyCode/CPP/JuCi++/Disassembly/ByteCodeViewer.cpp 9 1 3 0 78 37:10:/home/jasonhe/Documents/MyCode/CPP/JuCi++/Disassembly/ByteCodeViewer.cpp 9 1 3 0 78 38:10:/home/jasonhe/Documents/MyCode/CPP/JuCi++/Disassembly/ByteCodeViewer.cpp 9 1 3 0 78 39:10:/home/jasonhe/Documents/MyCode/CPP/JuCi++/Disassembly/ByteCodeViewer.cpp 9 1 3 0 78 43:15:/home/jasonhe/Documents/MyCode/CPP/JuCi++/Disassembly/ByteCodeViewer.cpp 21 1 3 0 27 ViewFunction:ByteCodeViewer 10 1 3 0 78 48:51:/home/jasonhe/Documents/MyCode/CPP/JuCi++/Disassembly/ByteCodeViewer.cpp 9 1 3 0 78 51:10:/home/jasonhe/Documents/MyCode/CPP/JuCi++/Disassembly/ByteCodeViewer.cpp 9 1 3 0 78 52:10:/home/jasonhe/Documents/MyCode/CPP/JuCi++/Disassembly/ByteCodeViewer.cpp 9 1 3 0 78 53:10:/home/jasonhe/Documents/MyCode/CPP/JuCi++/Disassembly/ByteCodeViewer.cpp 9 1 3 0 78 54:10:/home/jasonhe/Documents/MyCode/CPP/JuCi++/Disassembly/ByteCodeViewer.cpp 9 1 3 0 78 55:10:/home/jasonhe/Documents/MyCode/CPP/JuCi++/Disassembly/ByteCodeViewer.cpp 9 1 3 0 78 56:10:/home/jasonhe/Documents/MyCode/CPP/JuCi++/Disassembly/ByteCodeViewer.cpp 21 1 3 0 25 ReadUShort:ByteCodeReader 9 1 3 0 78 63:15:/home/jasonhe/Documents/MyCode/CPP/JuCi++/Disassembly/ByteCodeViewer.cpp 9 1 3 0 78 65:11:/home/jasonhe/Documents/MyCode/CPP/JuCi++/Disassembly/ByteCodeViewer.cpp 7 1 3 0 13 constant_int: 7 1 3 0 14 constant_long: 21 1 3 0 23 ReadLong:ByteCodeReader 7 1 3 0 15 constant_float: 21 1 3 0 24 ReadFloat:ByteCodeReader 7 1 3 0 16 constant_double: 21 1 3 0 25 ReadDouble:ByteCodeReader 20 1 3 0 19 wstring:__cxx11:std 24 1 3 0 24 basic_string:__cxx11:std 9 1 3 0 78 98:11:/home/jasonhe/Documents/MyCode/CPP/JuCi++/Disassembly/ByteCodeViewer.cpp 9 1 3 0 78 99:15:/home/jasonhe/Documents/MyCode/CPP/JuCi++/Disassembly/ByteCodeViewer.cpp 21 1 3 0 20 push_back:vector:std 9 1 3 0 79 103:17:/home/jasonhe/Documents/MyCode/CPP/JuCi++/Disassembly/ByteCodeViewer.cpp 21 1 3 0 23 ViewCode:ByteCodeViewer 10 1 3 0 79 106:47:/home/jasonhe/Documents/MyCode/CPP/JuCi++/Disassembly/ByteCodeViewer.cpp 9 1 3 0 79 110:11:/home/jasonhe/Documents/MyCode/CPP/JuCi++/Disassembly/ByteCodeViewer.cpp 6 1 3 0 20 index:ByteCodeReader 9 1 3 0 79 111:11:/home/jasonhe/Documents/MyCode/CPP/JuCi++/Disassembly/ByteCodeViewer.cpp 7 1 3 0 8 add_int: 7 1 3 0 8 sub_int: 7 1 3 0 8 mul_int: 7 1 3 0 8 div_int: 7 1 3 0 8 mod_int: 7 1 3 0 9 add_long: 7 1 3 0 9 sub_long: 7 1 3 0 9 mul_long: 7 1 3 0 9 div_long: 7 1 3 0 9 mod_long: 7 1 3 0 10 add_float: 7 1 3 0 10 sub_float: 7 1 3 0 10 mul_float: 7 1 3 0 10 div_float: 7 1 3 0 11 add_double: 7 1 3 0 11 sub_double: 7 1 3 0 11 mul_double: 7 1 3 0 11 div_double: 7 1 3 0 7 gt_int: 7 1 3 0 7 lt_int: 7 1 3 0 7 ge_int: 7 1 3 0 7 le_int: 7 1 3 0 7 eq_int: 7 1 3 0 7 ne_int: 7 1 3 0 8 gt_long: 7 1 3 0 8 lt_long: 7 1 3 0 8 ge_long: 7 1 3 0 8 le_long: 7 1 3 0 8 eq_long: 7 1 3 0 8 ne_long: 7 1 3 0 9 gt_float: 7 1 3 0 9 lt_float: 7 1 3 0 9 ge_float: 7 1 3 0 9 le_float: 7 1 3 0 9 eq_float: 7 1 3 0 9 ne_float: 7 1 3 0 10 gt_double: 7 1 3 0 10 lt_double: 7 1 3 0 10 ge_double: 7 1 3 0 10 le_double: 7 1 3 0 10 eq_double: 7 1 3 0 10 ne_double: 7 1 3 0 10 eq_string: 7 1 3 0 10 ne_string: 7 1 3 0 10 eq_object: 7 1 3 0 10 ne_object: 7 1 3 0 11 return_int: 7 1 3 0 12 return_long: 7 1 3 0 13 return_float: 7 1 3 0 14 return_double: 7 1 3 0 14 return_string: 7 1 3 0 7 invoke: 8 1 3 0 19 InstructionToString 7 1 3 0 18 push_constant_int: 7 1 3 0 19 push_constant_long: 7 1 3 0 20 push_constant_float: 7 1 3 0 21 push_constant_double: 7 1 3 0 21 push_constant_string: 7 1 3 0 15 push_local_int: 7 1 3 0 16 push_local_long: 7 1 3 0 17 push_local_float: 7 1 3 0 18 push_local_double: 7 1 3 0 18 push_local_string: 7 1 3 0 14 pop_local_int: 7 1 3 0 15 pop_local_long: 7 1 3 0 16 pop_local_float: 7 1 3 0 17 pop_local_double: 7 1 3 0 17 pop_local_string: 7 1 3 0 5 jump: 7 1 3 0 13 jump_if_true: 7 1 3 0 14 jump_if_false: 7 1 3 0 14 push_function: 0 0 4 0 0 0 72 /home/jasonhe/Documents/MyCode/CPP/JuCi++/Disassembly/ByteCodeReader.hpp 1531196691 72 /home/jasonhe/Documents/MyCode/CPP/JuCi++/Disassembly/ByteCodeViewer.cpp 1531291026 72 /home/jasonhe/Documents/MyCode/CPP/JuCi++/Disassembly/ByteCodeViewer.hpp 1531225951 69 /home/jasonhe/Documents/MyCode/CPP/JuCi++/Disassembly/Instruction.hpp 1531282532